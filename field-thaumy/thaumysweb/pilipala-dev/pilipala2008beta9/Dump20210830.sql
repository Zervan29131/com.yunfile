-- MySQL dump 10.13  Distrib 8.0.22, for Win64 (x86_64)
--
-- Host: localhost    Database: pilipala
-- ------------------------------------------------------
-- Server version	8.0.22

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `comment_lake`
--

DROP TABLE IF EXISTS `comment_lake`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `comment_lake` (
  `CommentID` int NOT NULL,
  `PostID` int NOT NULL,
  `User` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Email` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `WebSite` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `HEAD` int NOT NULL,
  `Time` datetime NOT NULL,
  `Floor` tinyint NOT NULL,
  PRIMARY KEY (`CommentID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment_lake`
--

LOCK TABLES `comment_lake` WRITE;
/*!40000 ALTER TABLE `comment_lake` DISABLE KEYS */;
INSERT INTO `comment_lake` VALUES (30000,12431,'Pinn','pinn@amml.com','来自小品的钦定！','',0,'2020-09-21 22:49:22',2),(30001,12431,'雅爱方雏丶YAMAHA','yamaha@yamaha.cn','来自雅爱方雏的钦定！雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎雅虎！','www.ralhavenorid.com',0,'2020-09-21 22:52:28',3),(30002,12431,'王晟睿','wsr@h2om.com','雅子我爱你呀~哼哼哼啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊','',30001,'2020-09-21 22:53:11',4),(30003,12431,'Thaumy','studio_ai@outlook.com','我看你是欠日','www.thaumy.cn',30002,'2020-09-21 22:54:19',5),(30004,12431,'jss','jss@h2om.com','爷爷王来啦~','',0,'2020-09-27 15:55:57',6),(30008,12366,'Hodpel','i@dkhodpel.top','话说我也没用那插件了..\r\n感觉地址的话中文的不太好… 可以改成拼音或翻译成英文','www.dkhodpel.top',0,'2017-08-05 06:30:00',2),(30009,12366,'Hodpel','i@dkhodpel.top','(评论是要审核么2333)\r\n还有 既然都用pjax了就顺便加个ajax评论吧…\r\n而且我用的是jquery.pjax.js(滑稽)','',0,'2017-08-05 06:32:00',3),(30010,12366,'Thaumy','studio_ai@outlook.com','emmmmmm……..','www.thaumy.cn',30009,'2017-08-05 13:26:00',4),(30011,12366,'Thaumy','studio_ai@outlook.com','感觉中文的用户体验好一些吧，不影响什么速度也方便我维护','www.dkhodpel.top',30008,'2017-08-05 13:30:00',5),(30012,12384,'RealLuna HeheAndroid','ralhavenorid@126.com','支持一下。。。','www.ralhavenorid.com',0,'2017-12-09 13:53:00',3),(30013,12384,'Thaumy','studio_ai@outlook.com','哈喽！欢迎评论~！','www.thaumy.cn',0,'2017-07-16 07:12:00',2);
/*!40000 ALTER TABLE `comment_lake` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary view structure for view `neg>dirty>union`
--

DROP TABLE IF EXISTS `neg>dirty>union`;
/*!50001 DROP VIEW IF EXISTS `neg>dirty>union`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `neg>dirty>union` AS SELECT 
 1 AS `PostID`,
 1 AS `UUID`,
 1 AS `CT`,
 1 AS `Mode`,
 1 AS `Type`,
 1 AS `User`,
 1 AS `UVCount`,
 1 AS `StarCount`,
 1 AS `ArchiveName`,
 1 AS `LCT`,
 1 AS `Title`,
 1 AS `Summary`,
 1 AS `Content`,
 1 AS `Label`,
 1 AS `Cover`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `neg>union`
--

DROP TABLE IF EXISTS `neg>union`;
/*!50001 DROP VIEW IF EXISTS `neg>union`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `neg>union` AS SELECT 
 1 AS `PostID`,
 1 AS `UUID`,
 1 AS `CT`,
 1 AS `Mode`,
 1 AS `Type`,
 1 AS `User`,
 1 AS `UVCount`,
 1 AS `StarCount`,
 1 AS `ArchiveName`,
 1 AS `LCT`,
 1 AS `Title`,
 1 AS `Summary`,
 1 AS `Content`,
 1 AS `Label`,
 1 AS `Cover`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `pl_archive`
--

DROP TABLE IF EXISTS `pl_archive`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `pl_archive` (
  `ArchiveID` int NOT NULL,
  `Name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ArchiveID`,`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pl_archive`
--

LOCK TABLES `pl_archive` WRITE;
/*!40000 ALTER TABLE `pl_archive` DISABLE KEYS */;
INSERT INTO `pl_archive` VALUES (0,'无'),(1,'生活'),(2,'技术'),(3,'维护日志'),(4,'置顶'),(5,'特殊'),(6,'页面');
/*!40000 ALTER TABLE `pl_archive` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `pl_meta`
--

DROP TABLE IF EXISTS `pl_meta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `pl_meta` (
  `PostID` int unsigned NOT NULL,
  `Root` int unsigned NOT NULL,
  `UUID` char(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `CT` datetime NOT NULL,
  `Mode` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Type` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `User` char(24) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `UVCount` int unsigned NOT NULL,
  `StarCount` int unsigned NOT NULL,
  `ArchiveID` tinyint unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`PostID`) USING BTREE,
  UNIQUE KEY `ID` (`PostID`) USING BTREE,
  UNIQUE KEY `GUID` (`UUID`) USING BTREE,
  KEY `CT` (`CT`) USING BTREE,
  KEY `UNI` (`PostID`,`UUID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pl_meta`
--

LOCK TABLES `pl_meta` WRITE;
/*!40000 ALTER TABLE `pl_meta` DISABLE KEYS */;
INSERT INTO `pl_meta` VALUES (12347,0,'95ded3facac841da89d6d7ca2fc5bebc','2017-01-15 06:18:32','hidden','unset','Thaumy',394,53,2),(12350,0,'fb5f2175a3e7496ea5d66e6c839c0d46','2017-04-21 23:05:03','hidden','unset','Thaumy',253,29,2),(12351,0,'8e785272484940d0b66ab548529ee324','2017-05-20 04:24:44','hidden','unset','Thaumy',318,56,2),(12356,0,'833bd1533d6844339c9010372163af6b','2017-06-17 04:16:29','hidden','unset','Thaumy',335,42,2),(12359,0,'81d2e4b61e9e4dd0a7a4fb130ef8f460','2017-06-18 00:00:01','archived','unset','Thaumy',226,41,2),(12364,0,'185a8b4cd9c0479bb858f7d3d22e56b9','2017-07-11 03:10:51','hidden','unset','Thaumy',267,47,2),(12365,0,'33a67824b66e474ebae1e9161c20b972','2017-07-21 02:24:07','hidden','unset','Thaumy',267,52,2),(12366,0,'47583f5696f0432dab4d0e00db34e5a9','2017-07-26 09:16:30','hidden','unset','Thaumy',291,34,2),(12369,0,'737a946895a34260a6e9b58906d8b0ec','2017-12-02 07:06:14','archived','unset','Thaumy',254,44,2),(12373,0,'68c22dd4c7bc4ab792f2fa8f43fafe4d','2018-04-05 22:46:31','hidden','unset','Thaumy',236,38,2),(12376,0,'8f4b9b4558844783964b9f93564531c2','2019-03-09 19:23:39','unset','unset','Thaumy',435,86,6),(12377,0,'84955ba33b25457f8b8e0d521c0132be','2019-03-09 22:49:33','hidden','unset','Thaumy',357,44,2),(12379,0,'9dc9637893ef4369a301cd3e8b8f7bb7','2019-04-05 17:46:42','scheduled','unset','Thaumy',399,59,6),(12380,0,'5bdaf23548a64353b685ac24a6373875','2019-04-13 23:51:00','hidden','unset','水瓜社',298,44,1),(12381,0,'036c1be839184dc0acd479564abed0a0','2019-04-13 23:51:04','hidden','unset','Thaumy',369,42,1),(12382,0,'68027f412f28497ca7b6df84d712cf1e','2019-04-14 06:58:04','unset','unset','Thaumy',399,55,2),(12383,0,'aecf3c6e9a884aabade1f337a20cb5ee','2019-05-11 18:02:54','scheduled','unset','Thaumy',401,64,6),(12384,0,'d50460042b28491a84c0c93180701b30','2019-05-11 18:18:36','unset','unset','Thaumy',501,49,4),(12385,0,'ebd0e6838795420faf65caffa0fdb643','2019-05-25 21:55:39','unset','unset','水瓜社',377,49,6),(12386,0,'8bc10c6f84c04985bad8a99ee38202e4','2019-05-26 00:39:38','hidden','unset','Thaumy',313,22,2),(12387,0,'743d47ff01fb4090861cd53f4502ce4b','2019-06-16 07:12:31','unset','unset','Thaumy',338,17,5),(12388,0,'340993a1cbb045d18d4f2dbf38a36fef','2019-06-29 23:15:38','unset','unset','Pinn',304,14,5),(12389,0,'bab1101c15644e00ac530e721cbc6ae3','2019-06-30 06:31:16','hidden','unset','Thaumy',300,14,2),(12390,0,'86077dedf510414baa17b1b92ea3c43f','2019-07-11 13:53:36','unset','note','Thaumy',281,19,1),(12393,0,'08f13ed4fc144a1db6f3e923a4c62032','2019-08-08 22:12:04','hidden','unset','Thaumy',205,15,2),(12394,0,'6349b966bdc44cb3b989e160f1fefe78','2019-08-25 09:59:35','unset','unset','Thaumy',157,16,2),(12395,0,'99230f9ffe574560b927f7c6735c88ce','2019-08-27 08:17:30','hidden','unset','Thaumy',192,17,2),(12396,0,'5a80a868ec804b2981801c56aa4a192f','2019-09-06 19:10:39','unset','unset','Thaumy',246,10,2),(12397,0,'d052a42f655a418b9cacd6425535d819','2019-10-01 18:40:16','hidden','unset','雅爱方雏',170,12,1),(12398,0,'e9728bdbcd9f4dac98eaf92c10233714','2019-11-02 19:09:19','unset','unset','Thaumy',129,16,3),(12399,0,'baaf3c949aa8427d8ecaa24e028b37a5','2019-11-02 19:09:23','unset','unset','Thaumy',114,10,3),(12400,0,'b27ad50905dd4e92baa811a2fa5f31bd','2019-11-02 19:09:26','unset','unset','Thaumy',187,11,3),(12401,0,'f8f288b125454ae9a169323247ed1c84','2019-11-02 19:09:29','unset','unset','Thaumy',131,12,3),(12402,0,'a390851fc45a4a43b2368c5db557d6f6','2019-11-02 19:09:32','unset','unset','Thaumy',143,12,3),(12403,0,'684b5fb91f45483695a3ef383f471ccf','2019-11-16 22:39:05','unset','unset','Thaumy',105,13,1),(12405,0,'c511ee91c9bd4eb6be6a50d84124c294','2019-12-05 09:01:15','unset','note','Thaumy',171,13,1),(12407,0,'b2c308122eb743a1a8833016ff50bed0','2019-12-14 23:37:34','unset','unset','Thaumy',112,18,2),(12408,0,'eb6f27060e2745b28e3cbd3192563883','2019-12-14 23:40:20','hidden','note','Thaumy',150,11,1),(12409,0,'739f8819e91c463783b9ed138732e32a','2020-01-01 23:27:23','hidden','note','Thaumy',286,81,1),(12410,0,'e48c0162256941a797eecc23fadd77bc','2020-01-10 21:42:34','unset','unset','Thaumy',190,13,1),(12411,0,'a41bde9811254c2bbe7c71265d37065b','2020-01-24 11:23:38','unset','note','Thaumy',102,16,1),(12413,0,'54fa22a71dec49b887ed0deda3d98a41','2020-02-06 13:52:53','unset','note','Thaumy',140,19,2),(12414,0,'72cf274927824d678ea765426e9a3935','2020-02-08 12:55:33','hidden','unset','Thaumy',177,18,1),(12415,0,'5e9de2cb8bc948d78e3dce3f69cb42ed','2020-03-11 11:37:03','hidden','unset','雅爱方雏',106,10,1),(12416,0,'69bc886efbad45f98ecf56d0a5bf49ff','2020-02-24 07:23:56','hidden','note','Thaumy',102,12,4),(12417,0,'ab1d456d2d904c1c8d4ab4332e180aec','2020-03-05 16:59:07','unset','unset','Thaumy',168,13,1),(12418,0,'99242a1d7a3a4f3597601110f274611b','2020-04-04 00:00:00','hidden','note','Thuamy',193,17,1),(12419,0,'e9cd2815ee6545f6ada21b0cba994f76','2020-05-09 18:44:55','unset','unset','Thaumy',103,12,2),(12420,0,'146821bb569c4488974b5a811fdf9eb6','2020-06-18 22:15:01','hidden','note','Thaumy',155,11,1),(12421,0,'a6bab4f616104f19b6f58880786935f9','2020-07-10 15:28:04','unset','note','Thaumy',124,7,1),(12422,0,'1f74e12000274952b53489d1c5995624','2020-07-18 22:05:11','unset','note','Thaumy',188,5,1),(12423,0,'ffeec113c5324d1087fef37209bfab66','2020-07-24 22:37:30','scheduled','unset','Thaumy',121,12,2),(12424,0,'39fc5ea668b14513b09b40275bdafe62','2020-07-28 19:38:00','hidden','unset','Thaumy',194,12,2),(12425,0,'d184094bd8e94d3abfe647493bf699e9','2020-09-07 16:49:56','unset','unset','Thaumy',309,8,3),(12426,0,'3b7cad7e437c408ea823a020ef902d08','2020-09-09 22:28:28','hidden','note','Thaumy',176,9,1),(12427,0,'20be5f9ec3e34d329c619de643c17e7f','2020-09-10 07:51:29','scheduled','unset','Thaumy',193,11,2),(12428,0,'735ac99af3b14b75bbe1c78c23f2fd0c','2020-09-10 07:59:21','scheduled','unset','Thaumy',160,6,2),(12429,0,'1c98a9a95f994d70a122d61d61f2153b','2020-09-10 17:54:20','hidden','note','Thaumy',136,8,2),(12430,0,'59bda6062548407499317315733b2ade','2020-09-19 12:38:23','unset','unset','Thaumy',215,13,2),(12431,0,'804ac0a35de449169eb5d6853dd45ecf','2020-09-27 15:51:52','hidden','unset','Thaumy',1041,1001,2),(12432,0,'d6c01dc2cf4f4802a48b30028084024e','2020-10-15 07:06:41','unset','note','Thaumy',114,8,2),(12433,0,'d9e74e8a100e4f01b14170460f7f70fa','2020-10-24 16:13:05','unset','note','Thaumy',164,14,1),(12434,0,'f57b3dd4f02442518ae042badd2f9281','2020-10-26 16:44:34','unset','note','Thaumy',130,11,2),(12435,0,'c3ad8240727a40c6b4b9901c5ea2aa80','2020-11-24 15:42:29','hidden','unset','Thaumy',301,12,2),(12436,0,'84386c5d2f0a44c4919aaeb12925f81d','2020-11-29 09:50:04','unset','note','Thaumy',191,7,2),(12437,0,'27b266a26c704355a4607bd5d2a1c9ca','2020-11-30 15:17:37','unset','unset','Thaumy',184,11,1),(12438,0,'4f4ab65c1b95482eb070686e78873e51','2020-12-12 15:55:37','unset','note','Thaumy',155,7,2),(12439,0,'ffa5da42ae6e42b3b7af49581d621a63','2020-12-14 22:02:31','scheduled','unset','Thaumy',80,6,2),(12440,0,'29525229d4f44d8e82b2be92797f4d45','2020-12-30 12:42:09','scheduled','unset','Thaumy',70,11,1),(12441,0,'5c8b57dcbbdc4f86adc53144436659f4','2021-01-01 00:00:00','unset','note','Thaumy',65,11,1),(12442,0,'1c2c1e13ddab438f9a8c2971d1a0d1e0','2021-01-27 22:30:06','unset','unset','Thaumy',51,8,2),(12443,0,'2fc32e73d9db454d895a1b87a16b8255','2021-01-28 22:09:50','unset','unset','Thaumy',59,12,2),(12444,0,'437572c8a80e4a4592ebd95c47971fa1','2021-02-08 20:29:03','unset','unset','Thaumy',40,17,2),(12445,0,'3bb2f276e2a84b0b8a89de5d834fc09d','2021-02-15 08:08:21','unset','note','Thaumy',18,9,1),(12446,0,'531a991b8c574bd0bc67a1990479e4c1','2021-03-04 14:48:26','unset','unset','Thaumy',29,11,1),(12447,0,'c0bced9fed1a425eb027809af1f2913d','2021-03-21 01:33:45','unset','unset','Thaumy',21,9,2),(12448,0,'ae10fa7ecde14d75a8833efd8fe45a6f','2021-03-25 17:03:41','unset','unset','Thaumy',23,4,2),(12449,0,'bde6809d76d34f3fb1a6f561ed9ee239','2021-04-08 08:57:30','hidden','unset','Thaumy',13,0,2),(12450,0,'95ef5f8d14c14689ba37afeffdd82cdd','2021-03-26 09:15:16','unset','unset','Thaumy',14,0,2),(12451,0,'2c1a1dc36624438f8f041987c4f1d4c7','2021-04-09 19:49:59','hidden','unset','Thaumy',18,0,1),(12452,0,'5c1c80f39e2c4978a715490b1f66d8d1','2021-06-08 02:58:00','scheduled','unset','Thaumy',16,0,1),(12453,0,'6d0591f1193148a388913774e94ee921','2021-06-30 11:31:38','unset','note','Thaumy',6,1,1),(12454,0,'2d6ba6d567c34c15b40a2e738098ff82','2021-08-10 13:39:57','unset','unset','Thaumy',4,1,1);
/*!40000 ALTER TABLE `pl_meta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `pl_stack`
--

DROP TABLE IF EXISTS `pl_stack`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `pl_stack` (
  `PostID` int unsigned NOT NULL,
  `UUID` char(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `LCT` datetime NOT NULL,
  `Title` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Summary` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `Content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `Label` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Cover` varchar(4096) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`UUID`) USING BTREE,
  UNIQUE KEY `GUID` (`UUID`) USING BTREE,
  KEY `ID` (`PostID`) USING BTREE,
  KEY `LCT` (`LCT`) USING BTREE,
  KEY `UNI` (`PostID`,`UUID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pl_stack`
--

LOCK TABLES `pl_stack` WRITE;
/*!40000 ALTER TABLE `pl_stack` DISABLE KEYS */;
INSERT INTO `pl_stack` VALUES (12381,'036c1be839184dc0acd479564abed0a0','2020-11-28 13:13:54','Thaumy人设','Thaumy的反Thaumy策略','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12387)\">转到“我”</span>\r\n\r\n# <span class=\"wd-heimu\">孤僻内向的大病娇</span>\r\n\r\n> 此设定适用于《东联往事 · 卷Ⅱ : 人类量产计划》的前半部分章节，设定不适用于所有量产阶段的Thaumy。\r\n\r\n## <span class=\"wd-dt4\">P1</span> <span style=\"color:#48D1CC\">基本设定</span>\r\n\r\n很少和陌生人交谈来往。  \r\n对于他人的主动接触显得十分敏感（尤其异性），不会主动透露自己的兴趣爱好（如果不被主动询问或者有特殊情况的话）。  \r\n好胜心极强，与更优秀的人接触时有极强的阴谋论心理（自动将对方的一切行为脑补成与自己敌对的战略举措），并且表现得极为冷漠。  \r\n心情不好时会发生黑化反应，将解决目前问题列为最高优先级，此期间会丧失基本人格。遇到高兴的事情时黑化会慢慢解除，表现为乐于或主动和较为熟悉的人交流（陌生人介入的最佳时机）。\r\n\r\n## <span class=\"wd-dt4\">P2</span> <span style=\"color:#48D1CC\">设定详情</span>\r\n\r\n### <span style=\"color:#9ACD32\">性格表征</span>\r\n\r\n适用于基于ThaumyNERVSYS的pH调节系统触发器：  \r\n当看到比自己优秀的人的时候，Thaumy倾向于表现出批判面，认为该人一无是处（并认为其擅长的方面没有应用价值），并造成Thaumy体内的氢离子浓度上升。  \r\n\r\n心情不好时会降低做任何事情的积极性，且懒于说话。主动回避与自己作风完全相反的人（必须是很完全时才会触发）。  \r\n\r\n不乐意在他人面前展示自己优秀的一面，但是如果对其进行主动试探，Thaumy绝对会毫不保留的把他知道的全告诉你。。。  \r\n\r\n> 社交准则1：由于 A.T. FIELD 的作用，和Thuamy进行谈话时必须表现出主动。Thaumy表现出的冷淡是他想继续交流的最好证明。（该社交准则不适用于于Thaumy性格匹配度低于30%的人）\r\n\r\n> 行为学表征1：当持续进行Thaumy极感兴趣的话题时，Thaumy会表现出身体发抖，感觉很冷的症状。\r\n\r\n### <span style=\"color:#CC3300\">履历&档案</span>\r\n\r\n代号：Thaumy  \r\n<span class=\"wd-dt4\">C31识别码：17A2EF1G1C0536</span>\r\n\r\n事务机构：  \r\n\r\n### A&M（阵方互联）\r\n<img width=\"300px\" src=\"<{cdn_root}>/md-img/am_logo_1810.svg\">\r\n\r\n### H2OMSOCIE（水瓜社）\r\n<img  width=\"300px\" src=\"<{cdn_root}>/md-img/h2om_logo_1907.svg\">\r\n\r\n### Community31（31学社）\r\n<img  width=\"300px\" src=\"<{cdn_root}>/md-img/c31_logo_1802.svg\">\r\n\r\n### 生理学采样报告：未公开  \r\n\r\n来自水瓜社的数据：\r\n水瓜标准基金委员会成员  \r\n水瓜常任委员会成员  \r\n\r\n来自阵方互联的数据：  \r\n此项目需要K1级别读取权限。您的设备不具备该许可级别。  \r\n来自C31的数据：  \r\n此项目需要F1级别读取权限。您的设备不具备该许可级别。  \r\n\r\n### <span style=\"color:#FF8C00\">兴趣爱好</span>\r\n\r\n画画  \r\n打代码  \r\n某些设计  \r\n听歌（ACG）  \r\n\r\n# SP：其他属性\r\n\r\n### <span style=\"color:#48D1CC\">十分差劲的全栈</span>\r\n\r\n在建模、板绘、视频、音乐、编程、硬件、艺术设计等领域都有不同程度的涉猎，<span class=\"wd-heimu\">有了搜索引擎的支持</span>，Thaumy可以短时间内在任何一方面按需做出自己满意的作品。<span class=\"wd-heimu\">某孙子王也是</span>\r\n\r\n### <span style=\"color:#48D1CC\">与生俱来的强迫症</span>\r\n\r\n即使一个像素点的差别，Thaumy也会尽可能地考虑到它出现的合理性。这样的性格特点让使得Thaumy过分地注重细节，宁可用过低的时效比换取自己满意的成果。\r\n\r\n### <span style=\"color:#48D1CC\">我是一位艺术家</span>\r\n\r\nThaumny总是有着独到的见解。丰富的想象力和大胆的尝试让理想和现实达成共识。\r\n>编程是门艺术，而我，是艺术家————Thaumy\r\n\r\n### <span style=\"color:#48D1CC\">24x7x365宅</span>\r\n\r\n说到宅，没人能比得上Thaumy。————不应过多解释，这是公认的事实。  \r\n但是基于最新的数据表明Thaumy貌似想要出去看看这个世界。','Thaumy$二次元',''),(12393,'08f13ed4fc144a1db6f3e923a4c62032','2020-10-15 06:27:37','BETA6的结束和BETA7的愿望','向beta6致敬！','## pilipala BETA6(1902)第7步进现已结束\r\n\r\n原定于七月更新的噼里啪啦BETA6第8步进由于我的懒惰，被搁置了...  \r\n其实第8步进没有什么特别的内容，无非发布几篇收尾文章，做做UI更新。  \r\n随着氛2近期的开发完成，氛1的UI更新也显得似乎不是那么必要了。  \r\n于是，BETA6超额完成了它4个月的设计寿命（2018.02‎-2018.07，实际使用了接近5个月）。  \r\n在第8步进中，我修正了维护日志，发布了此篇文章，备份了数据库。  \r\n\r\n### 感谢pilipala BETA6陪我走过的高二半年，到这里。\r\n### 迫于学业压力，BETA7工程很可能被搁置。\r\n不过以后我还会努力写代码的( •̀∀•́ )！就这样。','',''),(12420,'146821bb569c4488974b5a811fdf9eb6','2020-06-18 22:15:29','','','东联 / 伊芙美什立方 / 信息衰变 / 先古文明遗产 / 人类量产计划 / 独立人计划\r\n<br>\r\n这是一个为了伟大事业而纷争的人们的故事。\r\n<br>\r\n<div style=\"text-align:right\">2020/7</div>','人设','<img class=\"pXL\" src=\"<{cdn_root}>/md-img/设定V：一个美好的社会.svg\">'),(12364,'185a8b4cd9c0479bb858f7d3d22e56b9','2017-07-12 10:13:06','对递归的一些研究','','&emsp;&emsp;最近研究了一下递归，在这里阐述一下自己的理解。  \r\n\r\n<ul>\r\n 	<li><span style=\"color: #ff9900\">我的看法</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;<a href=\"http://baike.baidu.com/link?url=vtnjbv5K54Ch9hn9Qi1duM-ucK3_LSjN9TMNeykQpAIA_uLxX8W-naC2yCG78UFCq3eTQl1y74EwqM8E9LlfcmljplvFblihQOquWIlxFra\">递归</a>是一种可靠的编程范式（除了某些情况下滥用递归会导致爆栈）。递归的基本思想是通过程序不断调用自身来解决所需解决的问题。这是一种很聪明的解决思路，并且还会减少代码量，使程序更加简洁。\r\n\r\n<ul>\r\n 	<li>百度百科上的解释</li>\r\n</ul>\r\n\r\n&emsp;&emsp;程序调用自身的编程技巧称为递归 (recursion) 。递归做为一种<a href=\"http://baike.baidu.com/item/%E7%AE%97%E6%B3%95\">算法</a>在<a href=\"http://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80\">程序设计语言</a>中广泛应用。 一个过程或<a href=\"http://baike.baidu.com/item/%E5%87%BD%E6%95%B0\">函数</a>在其定义或说明中有直接或间接调用自身的一种方法，它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解，递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。递归的能力在于用有限的<a href=\"http://baike.baidu.com/item/%E8%AF%AD%E5%8F%A5\">语句</a>来定义对象的<a href=\"http://baike.baidu.com/item/%E6%97%A0%E9%99%90%E9%9B%86%E5%90%88\">无限集合</a>。一般来说，递归需要有边界条件、递归前进段和递归返回段。当边界条件不满足时，递归前进；当边界条件满足时，递归返回。\r\n\r\n<ul>\r\n 	<li><span style=\"color: #ff9900\">构成</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;递归，顾名思义：传递——回归。我们在这里用一个简单的例子了解递归的基本思路。\r\n\r\n<pre>C#<code>\r\nclass Program1\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        for (int row = 1; row <= 9; row++)\r\n        {\r\n            for (int i = 1; i &lt;= row; i++)\r\n            {\r\n                Console.Write(\"{0}*{1}={2}\", row, i, row * i);\r\n                Console.Write(\" \");\r\n            }\r\n            Console.WriteLine();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n&emsp;&emsp;上面是使用传统模式打印99乘法表的代码，它采用了两个嵌套的for循环实现。一个循环负责横行，另一个则负责纵行。这里不过多介绍。\r\n\r\n<span style=\"color: #ff9900\">我们再来看看下面的代码：</span>\r\n\r\n<pre>C#<code>\r\nclass Program2\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        multiplication(9);\r\n    }\r\n\r\n    public static void multiplication(int i)\r\n    {\r\n        if (i == 1)\r\n        {\r\n            Console.WriteLine(\"1*1=1 \");\r\n            Console.WriteLine();\r\n        }\r\n        else\r\n        {\r\n            multiplication(i - 1);\r\n            for (int j = 1; j &lt;= i; j++)\r\n            {\r\n                Console.WriteLine(j + \"*\" + i + \"=\" + j * i + \"  \");\r\n            }\r\n            Console.WriteLine();\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n&emsp;&emsp;这是使用递归来输出99乘法表的代码。与嵌套for循环相比，它只使用了一个for循环来达到输出的目的，而初始结果直接打印 “1*1=1” 的字符串。这看起来有些不可思议：它是怎么做到的？\r\n\r\n<ul>\r\n 	<li><span style=\"color: #ff9900\">分析</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;在上面的两篇代码中，分别使用了不同的方式达到相同的目的。嵌套for过于简单这里不解释，递归则是通过不断调用自身达到最终目的。\r\n\r\n<span style=\"color: #ff9900\">在这里，递归分为两个部分。我将他概括为初始化和返回:</span>\r\n<ol>\r\n 	<li><span style=\"color: #3366ff\">初始化</span>：程序不断调用自身的方法，我们把调用方法这个行为看作是初始化：为接下来的循环做准备。</li>\r\n 	<li><span style=\"color: #3366ff\">返回</span>：每次初始化都会进行判断，当某次初始化后的判断成立时，程序不再调用自身<span style=\"color: #ffcc00\">(也就是达到了所谓的递归边界准备返回结束)</span>，并且结束当前方法，进行返回。返回后执行的便是上一个(父级)方法初始化完成后下面的代码：循环输出。因为每次初始化的传参都不一样并且有大到小，所以在此过程中，循环可以由小到大依次输出乘法表。</li>\r\n</ol>\r\n<span style=\"color: #ff9900\">可能这样讲解还是有些模糊，于是我画了一幅图增进我的理解：</span>\r\n<img src=\"https://cdn.thaumy.cn/old_post/33cfb.jpg\" width=\"60%\">\r\n\r\n&emsp;&emsp;图这里使用的是33乘法表进行分析，可以看到它分为两个部分：执行和回溯，也就是我说的初始化(调用)和返回。\r\n\r\n<ul>\r\n 	<li><span style=\"color: #ff9900\">总结</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;我其实对递归还是一知半解的，希望这次学习能够对我在算法研究领域添上一臂之力(上次研究归并算法的时候没少吃苦头。。。)，所以呢，这里就结束啦~！\r\n\r\n<img src=\"https://cdn.thaumy.cn/old_post/dgmb.jpg\" width=\"20%\">','远古文章',''),(12442,'1c2c1e13ddab438f9a8c2971d1a0d1e0','2021-01-27 22:27:50','获取F477V2光猫的管理员密码','','&emsp;&emsp;最近一直在研究有关网络的东西。考虑到服务器的运营成本不菲，我期望以一种更实惠的方式挂载我的服务。由于IPV4地址已在2019年分配完毕，我几乎不可能要求运营商为我分配公网IPV4地址，所以我考虑采用IPV6对本地服务器入网。  \r\n&emsp;&emsp;我的运营商为联通，所用光猫型号为F477V2，由中兴制造，运营商默认为路由模式且不提供管理员密码。我需要获取管理员密码进入后台以更改光猫为桥接模式。这一光猫的版本较新，网上几乎没有破解的教程可以参考（但还是有零星信息可供组装的）。我尽可能地尝试了所有软破解的方法，均无果（某宝报价40可破，但不提供教程）。无可奈何，只能TTL强攻了。\r\n\r\n### 准备\r\n\r\n~~有手就行~~  \r\n必备：中兴F477V2光猫、RJ45双公网线、螺丝刀、TTL转USB模块（此处使用CH340）、电脑  \r\n可选：电烙铁、焊料若干、杜邦线若干、电工胶布\r\n\r\n### 实践\r\n\r\n&emsp;&emsp;拆下光猫（注意不要损坏光纤），拆除其背面的两颗螺丝(有一颗螺丝在贴纸下面)，小心地打开光猫，注意不要扯坏内部相连的光纤和WLAN同轴线。  \r\n\r\n<div align=\'center\'><img style=\"width:100%;max-width:700px;\" src=\"https://cdn.thaumy.cn/md-img/获取F477V2光猫的管理员密码/pin.jpg\"></div>\r\n<center><em>如图为目标TTL接口的正反面，方形焊盘为VCC。</em></center>\r\n\r\n取几条杜邦线，拆除其公头塑料外壳，弯曲一定角度后依次焊入为TTL预留的焊盘（注意先清除焊盘预留锡）。  \r\n\r\n<div align=\'center\'><img style=\"width:100%;max-width:700px;\" src=\"https://cdn.thaumy.cn/md-img/获取F477V2光猫的管理员密码/welding_complete.jpg\"></div>\r\n<center><em>这花了我不少时间。</em></center>\r\n\r\n现在将引出的TTL线接入预先准备的TTL转USB模块。  \r\n其引脚关系为：  \r\n\r\n| F477V2 |          /           | CH340 |\r\n| :----: | :------------------: | :---: |\r\n|   TX   |          →           |  RX   |\r\n|   RX   |          ←           |  TX   |\r\n|  GND   |          -           |  GND  |\r\n|  VCC   | 缺省，由光猫内部供电 |  VCC  |\r\n\r\n<div align=\'center\'><img style=\"width:100%;max-width:700px;\" src=\"https://cdn.thaumy.cn/md-img/获取F477V2光猫的管理员密码/ttl_mod.jpg\"></div>\r\n<center><em>为便利后续调试，我在光猫上开了一个口子用于引出排线。</em></center>\r\n\r\n---\r\n\r\n&emsp;&emsp;电脑连接模块，并将光猫LAN1接入电脑。打开串口调试工具（随便下一个就行），选择模块对应的COM，波特率调至`115200`，其他默认，打开串口发送几个回车，等待消息。  \r\n\r\n<pre><code>F477V2\r\nLogin:</code></pre>\r\n\r\n出现上述字样后，输入root，随后出现的Password也输入root，如下即登录成功。\r\n\r\n<pre><code>F477V2\r\nLogin: root\r\nPassword:\r\nJan 1 00:10:15 1ogin[1368]: root login on \'ttyp0\'\r\nBusyBox v1.17.2 (2020-07-01 02:33:34 CST) built in shell(ash)\r\nEnter \'help\' for a list of built -in comm ands.\r\nroot@F477V2:~ #\r\nroot@F477V2:~ #</code></pre>\r\n\r\n---\r\n\r\n现在打开tftp32软件（自行下载），选择192.168.1.2监听。\r\n\r\n在串口工具中依次发送命令：  \r\n\r\n1. `cd /userconfig/cfg`//切换到配置文件所在目录  \r\n2. `tftp -p -l db_user_cfg.xml 192.168.1.2`//向tftp32发送配置文件  \r\n\r\n随后即可在tftp32中发现被传回的`db_user_cfg.xml`文件。  \r\n\r\n---\r\n\r\n由于该xml文件处于加密状态，需使用offzip解密。  \r\n\r\n自行下载offzip，将offzip.exe放置在`C:\\Windows\\System32`内，在Ternimal(cmd也行)内应用以下命令：  \r\n`offzip -a src_path C:\\f477v2_crack 0`//注意末尾的0不要漏掉  \r\n其中，`src_path`需替换为`db_user_cfg.xml`的所在路径。  \r\n\r\n最后，进入`C:\\f477v2_crack`，可以发现有很多个dat文件，我们用文本编辑工具打开后逐个进行查找，即可获得管理员密码明文。\r\n\r\n<img style=\"width:100%;max-width:300px;\" src=\"https://cdn.thaumy.cn/md-img/获取F477V2光猫的管理员密码/admin_pwd.jpg\">\r\n\r\n管理员密码的标记形式因固件版本而异，这是我的信息位置。\r\n\r\n\r\n---\r\n\r\n有关光猫路由转桥接的部分在这里就不介绍了，网上有非常丰富的资料可供参考。\r\n','网络',''),(12429,'1c98a9a95f994d70a122d61d61f2153b','2020-09-10 17:54:58','','','IDBuilder是一款基于当前时间生成多种标识码的实用工具，开发的初衷是便于我快速生成GUID和为小文件命名。  \r\nIDBuilder3.1后续会于WindowsStore上线，目前可用的版本为3.0，使用UWP构建。','',''),(12422,'1f74e12000274952b53489d1c5995624','2020-07-18 22:05:29','','','相关部署维护事务已接近尾声，本周将启动噼里啪啦BETA8的开发工作！o(*￣▽￣*)ブ','',''),(12427,'20be5f9ec3e34d329c619de643c17e7f','2020-10-01 22:15:36','氛V3','supeeeeeeeeeeeeeeeeeer Field！','<blockquote>\r\n“ 漂亮到欠打 ”\r\n</blockquote>\r\n\r\n<center>\r\n<img style=\"width:100%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V3/强兼容.svg\">\r\n\r\n## 强兼容\r\nField3可在720p至6k保持良好观感，这是Field2兼容范围的二倍。  \r\nField3针对移动平台的显示设备进行了特别优化，当你的显示器支持高ppi时Field3也能良好兼容。\r\n\r\n<br><br>\r\n\r\n<img style=\"width:30%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V3/黑白.svg\">\r\n\r\n## 两种颜色模式\r\n是否觉得Field2过于耀眼？  \r\n现Field3支持暗色主题，你可以通过切换CSS的方式选择其一，或让噼里啪啦自我判断，实现自动切换。\r\n\r\n<br><br>\r\n\r\n<img style=\"width:100%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V3/键盘.png\">\r\n\r\n## 专注于创作\r\n简单直观的设计理念贯彻Field系列主题的设计始终。  \r\n我们重新优化了主题的各项细节，应用了很多有益于交互的动画效果，每一颗像素的调整和每一毫时间的计算都经过精心考量。\r\n\r\n<br><br>\r\n\r\n<img style=\"width:10%;min-width:60px;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V3/Vue.svg\">\r\n\r\n## Vue\r\nField3使用Vue渐进式构建，精简高效的运作方式让dom渲染瞬间完成。\r\n\r\n<br><br>\r\n\r\n<img style=\"width:70%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V3/许可证.svg\">\r\n\r\n## 永久开源\r\nField3是完全免费公开的客制化主题，任何人都可以下载其源代码进行修改。  \r\n同时Field3也尊重大家的版权，当Field3引用相关作品时，也会在相应位置标明其出处。\r\n\r\n<br><br>\r\n\r\n<img style=\"width:70%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V3/MKD.svg\">\r\n\r\n## 经过改进的Markddown\r\nField3延续了倍受好评的Markddown文档支持，允许各位艺术家们把更多的精力投入到内容创作，而非烦恼于格式设定。  \r\n同时，Field3应用了更加先进的Markddown解析引擎，高效快速的解析引擎是制胜的关键所在。  \r\n同时，我们对Markdown样式也进行了深度定制，在最大限度上为可读性效力。\r\n\r\n<br><br>\r\n\r\n<pre>C#<code>public void HelloField()\r\n{\r\n    Console.WriteLine(\"Field，V3!\");\r\n}</code></pre>\r\n\r\n## 优化的代码高亮系统\r\n与Field2不同，Field3的代码高亮显示更加简洁明了。  \r\n现更支持`块状代码显示`。\r\n\r\n</center>','噼里啪啦工程组',''),(12437,'27b266a26c704355a4607bd5d2a1c9ca','2020-11-30 15:15:02','每月评论2011','来看看THAUMY的这一个月发生了哪些事','# 每月评论\r\n\r\n> 考虑到本博客有时候会没东西写，我打算搞一个每月评论，记录一下每月发生的大事。\r\n\r\n* 每一刊每月评论将在当月的月末发行，同时也会伴随博客的版本更新。\r\n\r\n## Windows10 20H2\r\n\r\n&emsp;&emsp;在上上上周，我可怜的VS又犯了病，在卸载重装无效的情况下，我选择了最直接了当的方法：重装系统。（以前我也是这样干的）  \r\n&emsp;&emsp;然而重装后VS还是会崩溃，反复控制变量检查原因后，我发现这原来是项目中的一段代码引起的。（只要在编辑器一输入这段代码，VS就会崩溃，你甚至都不用编译它！）  \r\n&emsp;&emsp;不得不说VS还是够烂的，一两个月下来总能出现一些奇奇怪怪的小毛病。  \r\n&emsp;&emsp;经过一个周的恢复，我的开发环境已经完全恢复，并且更加重视了环境保护（现在有广告和附加的应用基本都被我扔虚拟机了）。  \r\n&emsp;&emsp;20H2相比上一个版本2004，最直观的就是开始菜单图标透明化。  \r\n\r\n<img width=\"50%\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2011/2004.jpg\"><img width=\"50%\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2011/20H2.jpg\">\r\n\r\n&emsp;&emsp;在配置环境变量时我还发现，右键此电脑的属性会直接跳转到系统信息，而不是老版本的界面。  \r\n&emsp;&emsp;20H2内置了新版Edge，而2004则需要另下载。  \r\n&emsp;&emsp;本次更新变化不大...没什么好看的（我很希望微软能好好改一改通知的样式）。\r\n\r\n## <a href=\"http://www.gxhsoulstar.cn/\">Soulstar的博客</a>\r\n\r\n&emsp;&emsp;在我的极力劝说下，Soulstar也使用了pilipala，并给出了较高的评价。  \r\n&emsp;&emsp;从他反馈的结果和我自身的体会来看，噼里啪啦目前的不足主要表现在如下几个方面：\r\n\r\n* 叽里咕噜后台缺少评论管理\r\n* 部署很困难\r\n* 客制化程度低\r\n* 一些小毛病，比如如果疯狂请求后台，系统会卡死。\r\n\r\n## 苹果发布会\r\n\r\n<img width=\"100%\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2011/mac.jpg\">\r\n\r\n> 两点起来看发布会真的是挺困的...\r\n\r\n&emsp;&emsp;在本月11日，苹果发布了新一代Mac Mini、Macbook Air和Macbook Pro 13。  \r\n&emsp;&emsp;三款产品都采用了苹果自研的M1芯片，产品的细节我就不多讲了。  \r\n&emsp;&emsp;M1的表现非常出色。根据测试结果来看，M1的单核性能直接吊打所有移动端CPU，而原生应用下的视频处理性能也一度让PC望尘莫及。  \r\n&emsp;&emsp;但是我期待的Macbook Pro 16并没有发布，这又要等了。  \r\n&emsp;&emsp;综合所有因素来看，我认为现阶段还不适合购买苹果的电脑产品。  \r\n&emsp;&emsp;我很期待M系列芯片的后续，也更希望英特尔能在新制程上有所突破。\r\n\r\n> 本月末我又去了一次Apple Sotre零售店，苹果还是那个苹果，产品做工真的没得说。看到5千多的iPhone12 Mini的那一瞬间时我感觉：哇塞，好便宜！...我绝对是疯了。\r\n\r\n---\r\n\r\n### 聊斋志异\r\n\r\n> 本板块专门记录一些月内发生的奇怪有趣的事情。\r\n\r\n* 模特猫\r\n\r\n<img style=\"width:100%;max-width:400px;\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2011/cat.jpg\">\r\n\r\n---\r\n\r\n<div align=\"right\">\r\n\r\n每月评论 - 2011期(共1期)  \r\n撰稿&校对&审核：Thaumy\r\n\r\n</div>\r\n','每月评论',''),(12440,'29525229d4f44d8e82b2be92797f4d45','2021-01-10 16:00:40','每月评论2012','来看看THAUMY的这一个月发生了哪些事','# 每月评论\r\n\r\n> 每月评论的第二期\r\n\r\n* 每一刊每月评论将在当月的月末发行，同时也会伴随博客的版本更新。\r\n\r\n## 进击的巨人 - 最终季\r\n\r\nAttack on titan - Final Season\r\n\r\n> ~~啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊，莱纳！！！！！~~\r\n\r\n<img style=\"width:100%;\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/我已经受够墙壁了.jpg\"><div style=\"width:100%;text-align:center\">~~墙之巨人~~</div>\r\n\r\n&emsp;&emsp;要说这个月有什么最令人兴奋的事情，那必须是巨人更新了！  \r\n&emsp;&emsp;这一次制作组改为了MAPPA，画风和前几部大同小异。给我最直观的感受是人物面部的线条没有以前厚实了，并且画风也具有了一种很“现实”的感觉（我也不知道是不是剧情衬托的......）。  \r\n\r\n<img width=\"33.3%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/OP.jpg\"><img width=\"33.3%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/飞走吧.jpg\"><img width=\"33.3%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/莱纳.jpg\">\r\n\r\n&emsp;&emsp;配乐仍然是泽野弘之大佬，但OP和ED的风格相较于前几季的区别比较大。刚开始听OP感觉风格很疯癫，但是看过了一两集之后就觉得风格完全不一样了，和ED一样，都让我感觉有一种浓重的“现实”感。  \r\n\r\n<img width=\"50%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/是啊.jpg\"><img width=\"50%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/阿尼.jpg\"><div style=\"width:100%;text-align:center\">莱纳和阿尼</div>\r\n\r\n&emsp;&emsp;本季的重点不再是人和巨人之间的故事，而变成了马莱和艾尔迪亚的故事。前作很多的铺垫也在本季揭露出来，故事的各个方面都体现出了更深刻的认知。\r\n> 白骨终将化为沙土，却生生不息。\r\n\r\n## <img width=\"100px\" style=\"box-shadow:none;\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/水瓜大学kimomimi512.png\"><span style=\"line-height:50px\">水瓜大学</span>\r\n\r\n> 群号：1164772054\r\n\r\n&emsp;&emsp;这是水瓜社开办的一个新团体。  \r\n&emsp;&emsp;介于水瓜社特殊的集体性质，已经不打算招收新的成员了（从创立到现在仍然只有三个人......<img height=\"30px\" src=\"http://thblog-img.test.upcdn.net/表情包/melonBoy.jpg\">。于是我们打算开设一个新的组织。受到聊天上下文的启发和影响，它被命名为“水瓜大学”。  \r\n&emsp;&emsp;和大家所想的都不同，水瓜大学并不是一个学术团体，也不是一个有各种分工的组织。水瓜大学的成立初衷是弥补水瓜社过于严苛的加盟条件带来的不足，它致力于建立一个开放包容的社交网络。我们希望水瓜大学能成为一个真正的权力平等、无所不聊的团体，以更好的丰富大家的摸鱼体验（?  \r\n&emsp;&emsp;水瓜社目前由机器人小品（Pinn）管理，并施行渐进式招生制度。\r\n\r\n> ~~附件1:原logo<img width=\"60px\" style=\"box-shadow:none;\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/水瓜大学.png\">这logo谁设计的啊~可真够丑的...~~\r\n\r\n## 噼里啪啦的转折点\r\n\r\n<img width=\"100%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/PILIPALA_beta8.jpg\">\r\n\r\n> 要去创造更多东西。\r\n\r\n&emsp;&emsp;截至本文发布，噼里啪啦BETA8已经为我的博客服务了接近四个月。  \r\n&emsp;&emsp;本月噼里啪啦迁移到了Linux环境下，我也借此体验了一&period;net core带来的便利和C#9.0的诸多新特性，此前受限于虚拟主机的一系列不便也得到了完全释放。新增的用户系统和后台让噼里啪啦在不同用户下的迁移变得更加方便了。  \r\n<img width=\"100%\" src=\"http://thblog-img.test.upcdn.net/md-img/每月评论/2012/post_list_user.jpg\"><div style=\"width:100%;text-align:center\">叽里咕噜后台</div>\r\n\r\n&emsp;&emsp;但是，介于个人精力的有限和技术上的门槛，噼里啪啦的开发工作变得越发缓慢了：我需要一个技术大爆炸。噼里啪啦已经非常完善（可能还缺失一个插件系统吧），所以以后工作的侧重点将从该项目转移。这并不意味着噼里啪啦项目会被遗弃掉，在接下来的很长一段时间里，将有更多有价值的东西添加到噼里啪啦中。\r\n\r\n---\r\n\r\n### 版权信息\r\n\r\n麦哲伦同人配图pixiv：80600690\r\n\r\n---\r\n\r\n<div align=\"right\">\r\n\r\n每月评论 - 2012期(共2期)  \r\n撰稿&校对&审核：Thaumy\r\n\r\n</div>\r\n','每月评论',''),(12451,'2c1a1dc36624438f8f041987c4f1d4c7','2021-04-09 19:50:25','每月评论2103','就像以前一样。','# 每月评论\r\n\r\n> 每月评论 - 第五期\r\n\r\n* 每一刊每月评论将在当月的月末发行，~~同时也会伴随博客的版本更新。~~\r\n\r\n---\r\n\r\n## 开学\r\n\r\n&emsp;&emsp;真他妈的卷啊。  \r\n&emsp;&emsp;全是课，无用的课。  \r\n\r\n> 本节经过多次删减，综合考量还是不写了。\r\n\r\n---\r\n\r\n很忙啊，头痛开始了。  \r\n那么，我是来找答案的啊。\r\n\r\n---\r\n\r\n<div align=\"right\">\r\n\r\n每月评论 - 2103期(共5期)  \r\n撰稿&校对&审核：Thaumy\r\n\r\n</div>\r\n\r\n麻木的人貌似都赢了。\r\n','',''),(12454,'2d6ba6d567c34c15b40a2e738098ff82','2021-08-10 13:40:31','每月评论2107','近期有哪些事','# 每月评论\r\n\r\n> 每月评论 - 第六期\r\n\r\n* 受限于各类因素，每月评论今后将按需发行。\r\n\r\n---\r\n\r\n## 近期提要\r\n\r\n### 三月概要\r\n\r\n&emsp;&emsp;我开学了，这个月对我影响最大的是课程的增多：受限于时间和精力，我发现原有的学习的方式难以跟进教学进度（在满足我每日6小时技术研究时常的前提下）。我需调整课业策略以满足其他事项的原有安排，适应占据了我大部分时间且带来了过多的消极情绪。期间学习了F#。\r\n\r\n### 四月概要\r\n\r\n&emsp;&emsp;认识到在高压课业条件下仍有时间可以利用的一些方法，我决定采用按需学习的方式来代替上学期的持续跟进策略。换句话说，能不学就不学，尽量把课业任务推迟到最后以节约时间。空缺出的时间主要进行有关于计算机网络（读CNATDA）以及函数式编程方面的学习，还包括一些小的开发项目。\r\n\r\n### 五月概要\r\n\r\n&emsp;&emsp;和上个月一样。\r\n\r\n### 六月概要\r\n\r\n&emsp;&emsp;前两周大体和上个月一样，此时CNATDA基本读完，Haskell学习收尾。受雅爱方雏启发，自6月7日起利用闲暇时间写一些文章给水瓜大学科普顺便进行自我提升。后两周的时间进行渐进式课程复习以应付期末考试。\r\n\r\n### 七月概要\r\n\r\n&emsp;&emsp;考试周。复习配合打游戏交替进行，懒得睡的时候偶尔会学到一两点（高数什么的实在太难了）。因为学习强度太高，闲暇时间再进行技术提升的话我真的受不了（头痛）。目的达成，用最少的时间避免挂科。7月16日后是假期时间：写文章、科目三、更新博客系统交替进行。\r\n\r\n## 环境依赖去中心计划\r\n\r\n&emsp;&emsp;受到一些事件的启示和对技术原理的了解，我越发觉得网络是一个可怕的东西。随便封禁一个账户就能对真实的个人产生巨大的影响，或从社工/人肉角度对真实的个人产生巨大威胁。当前的互联网已经与个人实体高度绑定，而且我们没有去绑定的权力。早在两年前我就在博客发表了类似的看法，但在最近我才极其强烈地感受到它带来的制约。\r\n\r\n&emsp;&emsp;自六月中旬我开始重整个人的整个社交体系，这包括一系列可能在人看起来难以理解的做法（账户职能分离、数据抹除、严格权限以及去组织关联）。\r\n\r\n&emsp;&emsp;我有权在网络保持沉默，但实际情况是如果不在网络留下什么大家会觉得你有问题。\r\n\r\n&emsp;&emsp;这也使得我能更加专注于想做的事情，现在我无法想象曾经的自己在无用的社交媒介上究竟获取到或制造了多少垃圾信息。\r\n\r\n## 立一些假期Flag\r\n\r\n1. 精通正则表达式读完前300页（因为对我而言之后的内容鲜有阅读价值）。\r\n2. 数据结构读完前200页，余下的交由上学完成。\r\n3. 达成40篇瓜大计算导论的编写。\r\n4. 补番两部。\r\n\r\n---\r\n\r\n## 杂事\r\n\r\n> 本板块用于记录一些有的没的。\r\n\r\n* 最近对博客内核上做了一些修改，性能大概有百分之二十的提升（得益于惰性求值访问器、哈希基缓存和内存表）。\r\n* 不知道新Macbook Pro会不会在9月发布会发布，很期待。\r\n* 大概是五月吧，我的播放器坏了（洗衣服时进水了），这导致我没法欣赏hires音源了。\r\n\r\n---\r\n\r\n&emsp;&emsp;Stay Hungry, Stay Foolish.\r\n\r\n---\r\n\r\n<div align=\"right\">\r\n\r\n每月评论 - 2107期(共6期)  \r\n撰稿&校对&审核：Thaumy\r\n\r\n</div>\r\n','',''),(12443,'2fc32e73d9db454d895a1b87a16b8255','2021-01-28 22:10:38','利用CDN绕过备案','','&emsp;&emsp;我的域名最近被扫到了，于是云服务器提供商那边要求我备案后再解析。众所周知啊，有关部门的工作效率是相当感人的。我在1月20号提呈的备案申请至今仍处于审核状态，博客又不能一直这么掉着，于是就探索一下绕过备案的方式吧。  \r\n&emsp;&emsp;未经备案的国内服务器会被封锁80和443端口，分别对应HTTP和HTTPS协议。所以我们要使用别的端口进行映射，这里我使用81端口作HTTP协议。  \r\n&emsp;&emsp;其实绕过备案的方法有很多种啦，这里我使用CDN来绕过备案。首先国内的CDN服务是不能用的，因为也需要备案，所以我们使用国外的CDN提供商<a href=\"https://console.nodecache.com/\">Nodecache</a>作内容分发。Nodecache是国外的一家云服务提供商，由于节点目前尚少，所以CDN的速度可能稍逊些（但这足够让我度过这段无聊透顶的审核期了）。Nodecache对新用户提供了500G且为期一个月的试用流量，可使用重复注册的方法白嫖。\r\n\r\n### ~~最佳实践~~\r\n\r\n&emsp;&emsp;首先注册，进入CDN页，创建服务。\r\n<center><img style=\"width:100%;max-width:700px\" src=\"https://cdn.thaumy.cn/md-img/利用CDN绕过备案/new_serv.jpg\"></center>\r\n<center><em>省略了原图中不影响教学的内容</em></center>\r\n\r\n&emsp;&emsp;服务名称随便填，加速域名填写网站地址，勾选全站加速，回源协议按需选择（我临时使用HTTP，于是勾选了HTTP），配置类型为IP，线路配置栏中的原站地址填写你的主机IP，端口除了80和443随便填（但也要注意不要和主机上的已有服务端口冲突，我在此选用81），加速区域勾选中国优化，确认创建。\r\n\r\n<center><img style=\"width:100%;max-width:700px\" src=\"https://cdn.thaumy.cn/md-img/利用CDN绕过备案/hy_host.jpg\"></center>\r\n\r\n&emsp;&emsp;第二步，配置刚刚创建的服务，进入回源管理：在回源Host内填入你的主机IP（和上一步中相同）。\r\n\r\n&emsp;&emsp;接下来捣鼓我们的服务器，由于我的服务器内部署了多个Web站点，所以使用了Nginx做转发服务。  \r\n编辑Nginx的conf配置文件，将Web应用转发至81端口即可：\r\n<pre><code>server {\r\n    listen 81;#也可改用其他端口\r\n    server_name localhost;\r\n\r\n    location / {\r\n        proxy_pass http://localhost:114514;#这是目标Web应用地址\r\n    }\r\n}</code></pre>\r\n\r\n&emsp;&emsp;好。现在你的网站就能绕过备案被正常访问啦！\r\n\r\n---\r\n\r\n&emsp;&emsp;不过还是建议把备案做了，海外CDN这种方法虽然可用，但想得到正常的访问速度还是需要金钱为代价的。此举让我博客的响应速度从1s下降至10s+，体验还是很差的。\r\n','网络$云服务器',''),(12365,'33a67824b66e474ebae1e9161c20b972','2017-08-15 03:46:00','StdLib1.08#public更新日志','','<img src=\"<{cdn_root}>/old_post/StdLib1.08宣传画(压缩).jpg\" width=\"100%\"/>\r\n<blockquote>\r\n\r\n<span style=\"color: #ff6600\">经过一个半月的计划推迟，久违的StdLib1.08终于完成了编写。让我们一起来看一看它有哪些新特性。</span></blockquote>\r\n\r\n<ul>\r\n 	<li><span style=\"color: #993366\">全新的参数列表</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;由于在前几代StdLib中，S04架构不是很规范，所以在这个版本往后，将改换为S08架构，保证代码的整洁和维护易用性。另外大多数静态类和方法都修改为非静态，这意味着在使用时需要实例化。\r\n<ul>\r\n 	<li>StdLib信息空间更名为LibInformation，相应接口也更换为ILibInformation。</li>\r\n</ul>\r\n\r\nILibInformation接口规范：\r\n<pre>C#<code>\r\n//主版本\r\nint verFirst\r\n{\r\n    get;\r\n}\r\n//次版本\r\ndouble verSecond\r\n{\r\n    get;\r\n}\r\n//是否为开发者版本\r\nbool devEdition\r\n{\r\n    get;\r\n}\r\n//是否为发行版\r\nbool pubEdition\r\n{\r\n    get;\r\n}\r\n//联网时的最新发行版\r\nstring webVer\r\n{\r\n    get;\r\n}\r\n//联网最新发行版的下载URL\r\nstring webURL\r\n{\r\n    get;\r\n}\r\n//针对最近一次发行版的全局兼容性\r\nbool compatibleLast\r\n{\r\n    get;\r\n}\r\n//获取到像素化的StdLib_logo\r\nBitmap logo\r\n{\r\n    get;\r\n}\r\n</code></pre>\r\n<ul>\r\n 	<li>用于获取StdLib版本信息的LibInformation:LibInformation类</li>\r\n</ul>\r\npublic LibInformation()方法：使用默认Url获取更新信息\r\n\r\npublic LibInformation(string InfUrl)第二重载：指定特定的URL获取更新信息\r\n<ul>\r\n 	<li>将算法空间更名为Algorithm</li>\r\n</ul>\r\nEncryptor类：包含两个方法：md5和hash，用于对字符串进行单向加密操作\r\n<ul>\r\n 	<li>矩阵算法类更名为ArrayAlgorithm，其具体方法作用在summary注释中有详细说明。</li>\r\n 	<li>二维码算法类更名为PixelGraphic，其具体方法作用在summary注释中有详细说明。</li>\r\n</ul>\r\n编译二维码图像的type字符串可选参数：\r\n\r\n\"hex\"//根据不带空格的16进制文本编译ANSW\r\n\"_hex\"//根据带空格的16进制文本编译ANSW\r\n\"array\"//根据16进制矩阵编译ANSW\r\n<ul>\r\n 	<li>排序算法类Sorter</li>\r\n</ul>\r\n这个类包含了基本的排序算法，其中easySorter方法是原生的LSS排序算法。\r\n<ul>\r\n 	<li>检索类Searcher</li>\r\n</ul>\r\n这个类包含了基本的检索算法。\r\n<ul>\r\n 	<li>数据层命名空间更名为DataLayer</li>\r\n 	<li>MCInformation类</li>\r\n</ul>\r\n这个类用于提取MC运行的必要信息，其具体方法作用在summary注释中有详细说明。\r\n<ul>\r\n 	<li>程序启动类ProgramLoader</li>\r\n</ul>\r\n用于启动程序的类，其具体方法作用在summary注释中有详细说明。\r\n<ul>\r\n 	<li>XmlCreater类</li>\r\n</ul>\r\n用于创建简单XML表的类，其具体方法作用在summary注释中有详细说明。\r\n<ul>\r\n 	<li><span style=\"color: #ff6600\">错误机制</span></li>\r\n</ul>\r\n\r\n在StdLib1.08中，提供了非常完善的错去机制。这有利于debug和项目维护，根除了StdLib1.07中报错提示混杂的诟病。\r\n\r\n<pre><code>标准报错文本:StdLibError ec[报错值]\r\n\r\nec7540：在初始化StdLib命名空间的StdInf类(第一重载)时，webPubs数组第0元素发生关键性错误，通常是由没有网络连接或是HTML错误导致，一般7540报错与7541报错同时发生，该报错具体表现为返回标准报错文本\r\n\r\nec7541：在初始化StdLib命名空间的StdInf类(第一重载)时，webPubs数组第1元素发生关键性错误，通常是由没有网络连接或是HTML错误导致，一般7540报错与7541报错同时发生，该报错具体表现为返回标准报错文本\r\n\r\nec7480：在初始化StdLib命名空间的StdInf类(第二重载)时，webPubs数组第0元素发生关键性错误，通常是由没有网络连接或是HTML错误导致，一般7480报错与7481报错同时发生，该报错具体表现为返回标准报错文本\r\n\r\nec7481：在初始化StdLib命名空间的StdInf类(第二重载)时，webPubs数组第1元素发生关键性错误，通常是由没有网络连接或是HTML错误导致，一般7480报错与7481报错同时发生，该报错具体表现为返回标准报错文本\r\n\r\n//\r\n\r\nec2390：在使用StdEct命名空间的_SRR类时，算法主方法(即矩阵处理)过程中发生致命性错误，可能是由于dic数组或num数组错误传参导致，该报错具体表现为返回内容为2390的单元素数组\r\n\r\nec4580：在使用StdEct命名空间的_ANSW类时，DeANSW方法中发生关键性错误，通常是由于未能成功初始化Bitmap或传递了错误的Bitmap导致，该报错具体表现为返回标准报错文本\r\n\r\nec5880：在使用StdEct命名空间的_BinSrch类时，search方法(第一重载)中发生致命性错误，该报错具体表现为返回内容为5880的int值\r\n\r\nec5881：在使用StdEct命名空间的_BinSrch类时，search方法(第二重载)中发生致命性错误，该报错具体表现为返回内容为5881的double值\r\n\r\n//\r\n\r\nec1120：在使用StdDal命名空间的_XmlCreater类时，ReadNode方法(第一重载)中发生关键性错误，通常是由于传递了错误的读取类型参数导致，该报错具体表现为返回标准报错文本\r\n\r\nec1121：在使用StdDal命名空间的_XmlCreater类时，ReadNode方法(第一重载)中发生致命性错误，可能是由无法查找到相关类型的值导致，该报错具体表现为返回标准报错文本\r\n\r\nec1127：在使用StdDal命名空间的_XmlCreater类时，ReadNode方法(第二重载)中发生关键性错误，通常是由于传递了错误的读取类型参数导致，该报错具体表现为返回标准报错文本\r\n\r\nec1128：在使用StdDal命名空间的_XmlCreater类时，ReadNode方法(第二重载)中发生致命性错误，可能是由无法查找到相关类型的值导致，该报错具体表现为返回标准报错文本\r\n\r\n//\r\n\r\nec1440：在使用StdDal命名空间的_XmlCreater类时，ReadAtt方法(第一重载)中发生致命性错误，可能是由无法查找到节点属性导致，该报错具体表现为返回标准报错文本\r\n\r\nec1441：在使用StdDal命名空间的_XmlCreater类时，ReadAtt方法(第二重载)中发生致命性错误，可能是由无法查找到节点属性导致，该报错具体表现为返回标准报错文本\r\n</code></pre>\r\n\r\n当程序的运行出错时，相应的报错会生效。当然，有些方法的返回值类型是布尔型，这类方法发生错误时会返回false。\r\n\r\n<blockquote>\r\n<span>StdLib各个版本的下载地址：</span><br>\r\n<a href=\"https://github.com/Thaumy/StdLib1x\" target=\"_blank\">https://github.com/Thaumy/StdLib1x</a><br>\r\n<span style=\"color: #ff9900;\">跳往GitHub的链接</span>\r\n</blockquote>','远古文章',''),(12388,'340993a1cbb045d18d4f2dbf38a36fef','2020-10-24 14:29:40','关于博客','自豪地采用pilipala','<div id=\"about_all\" class=\"bg\">\r\n<div class=\"about_title\">\r\n\r\n<span style=\"font-size:1.5em;font-weight:600\">THAUMY的博客</span>\r\n<br>\r\n<span style=\"font-size:1.3em;font-weight:400\">基于pilipala构建</span>\r\n\r\n<div class=\"about_title_u2\">\r\n\r\nThaumy\'s blog, based on pilipala  \r\n由 WaterLibrary 内核全速驱动  \r\n\r\n</div>\r\n\r\n</div>\r\n\r\n<div class=\"about_co\">\r\n\r\n### <span style=\"color:#3690FF\">版本信息</span>\r\n\r\n噼里啪啦 BETA8 - 玛格丽安  \r\n<span style=\"background:rgb(255,189,42);width:65px;display:inline-flex;\" class=\"wd-dt3 bSha\">Magallan</span>  \r\n\r\n<div class=\"about_co_u2\">\r\n\r\n先行测试2  \r\n内核版本：<span id=\"ver\"><span>\r\n\r\n</div>\r\n\r\n<span style=\"font-size:1.2em\">博客已运行</span><br>\r\n<span id=\"t-y\"></span>年<span id=\"t-d\"></span>天<span id=\"t-h\"></span>小时<span id=\"t-m\"></span>分钟<span id=\"t-s\"></span>秒\r\n\r\n</div>\r\n\r\n<div class=\"about_thanks\">\r\n\r\n### <span style=\"color:#3690FF\">鸣谢</span>\r\n<span style=\"font-size:12px;color:#53A0FE\">(名称不分先后)</span>  \r\nHodpel(技术支持)  \r\n雅爱方雏(文案支持)  \r\n星魂w(文案支持)  \r\njss(盘古测试)  \r\n\r\n### <span style=\"color:#3690FF\">版权信息</span>\r\n水瓜社©2020保留所有权利  \r\nThaumy的博客©2020保留所有权利  \r\n全站实现遵循GPL-3协议开源\r\n</div>\r\n\r\n</div>\r\n\r\n<style>\r\n.bg{\r\n    font-weight:400;\r\n    line-height: 23px;\r\n}\r\n/* 屏幕宽度大于1000时 */\r\n@media screen and (min-width: 1000px) {\r\n.bg{\r\n    height:53vw;\r\n    max-height:620px;\r\n\r\n    background: url(\'https://cdn.thaumy.cn/md-img/Magallan_bg.png\');\r\n    background-repeat:no-repeat;\r\n    background-position:center;\r\n    background-size:100%;\r\n}\r\n}\r\n\r\n/* 屏幕宽度小于850时 */\r\n@media screen and (max-width: 1000px) {\r\n.bg{\r\n    height:68vw;\r\n    background-size: auto 100%;\r\n    min-height: 580px;\r\n\r\n    background: url(\'https://cdn.thaumy.cn/md-img/Magallan_bg.png\');\r\n    background-repeat:no-repeat;\r\n    background-position:center;\r\n    background-size:100%;\r\n}\r\n}\r\n\r\n/* 屏幕宽度小于775时 */\r\n@media screen and (max-width: 775px) {\r\n.bg_white{\r\n     background: linear-gradient(rgb(255 255 255 / 0.1), rgb(255 255 255 / 0.8)), url(https://cdn.thaumy.cn/md-img/Magallan_bg.png) no-repeat 50% 30% / cover;\r\n}\r\n.bg_dark{\r\n     background: linear-gradient(rgba(0,0,0,0), rgba(30, 30, 30, 1)), url(\'https://cdn.thaumy.cn/md-img/Magallan_bg.png\') no-repeat 50% 30% / cover;\r\n}\r\n}\r\n\r\n/* 屏幕宽度小于500时 */\r\n@media screen and (max-width: 500px) {\r\n.about_title_u2{\r\nfont-size:0.9em;\r\n}\r\n.about_co_u2{\r\nfont-size:0.9em;\r\n}\r\n}\r\n#t-y,#t-d,#t-h,#t-m,#t-s{\r\n    font-size: 15px;\r\n    line-height:30px;\r\n    background:rgba(0,0,0,6%);\r\n\r\n    padding-left: 3px;\r\n    padding-right: 3px;\r\n\r\n    margin-left:2px;\r\n    margin-right:2px;\r\n    border-radius: 1px;\r\n}\r\n.about_title{\r\nwidth:60%;\r\ndisplay:block;\r\nfloat:left;\r\n}\r\n.about_co{\r\nwidth:40%;\r\nfloat:right;\r\ndisplay:block;\r\n}\r\n.about_thanks{\r\nfloat:left;\r\n}\r\n</style>\r\n\r\n<script>\r\nfunction themeStyle(){\r\nvar now = new Date();\r\nvar hour = now.getHours();\r\nif (hour >= 19 || hour <=6)\r\n{\r\ndocument.getElementById(\"about_all\").setAttribute(\'class\', \'bg bg_dark\');\r\n}else\r\n{\r\ndocument.getElementById(\"about_all\").setAttribute(\'class\', \'bg bg_white\');\r\n}\r\n};\r\nthemeStyle();\r\n</script>\r\n\r\n<script>\r\n$.post(\"/guest/Get_core_version\",\r\n        function (data) {\r\n            $(\"#ver\").text(data);\r\n        });\r\n</script>\r\n\r\n<script>\r\n    function secondToDate(second) {\r\n        if (!second) {\r\n            return 0;\r\n        }\r\n        var time = new Array(0, 0, 0, 0, 0);\r\n        if (second >= 365 * 24 * 3600) {\r\n            time[0] = parseInt(second / (365 * 24 * 3600));\r\n            second %= 365 * 24 * 3600;\r\n        }\r\n        if (second >= 24 * 3600) {\r\n            time[1] = parseInt(second / (24 * 3600));\r\n            second %= 24 * 3600;\r\n        }\r\n        if (second >= 3600) {\r\n            time[2] = parseInt(second / 3600);\r\n            second %= 3600;\r\n        }\r\n        if (second >= 60) {\r\n            time[3] = parseInt(second / 60);\r\n            second %= 60;\r\n        }\r\n        if (second > 0) {\r\n            time[4] = second;\r\n        }\r\n        return time;\r\n    }\r\n    function setTime() {\r\n        //月份应该减一，例如12月写11\r\n        var create_time = Math.round(new Date(Date.UTC(2016, 07, 18, 20, 00, 00)).getTime() / 1000);\r\n        var timestamp = Math.round((new Date().getTime() + 8 * 60 * 60 * 1000) / 1000);\r\n        currentTime = secondToDate((timestamp - create_time));\r\n        document.getElementById(\"t-y\").innerHTML = currentTime[0];\r\n        document.getElementById(\"t-d\").innerHTML = currentTime[1];\r\n        document.getElementById(\"t-h\").innerHTML = currentTime[2];\r\n        document.getElementById(\"t-m\").innerHTML = currentTime[3];\r\n        document.getElementById(\"t-s\").innerHTML = currentTime[4];\r\n    }\r\n    setInterval(setTime, 1000);\r\n</script>','',''),(12424,'39fc5ea668b14513b09b40275bdafe62','2020-09-08 09:35:30','PaLang概要','正在测试的项目','PaLang  \r\n一门用于维护噼里啪啦数据库的简单查询语言。  \r\n缩为P#，灵感来自微软。\r\n\r\n考虑到全局更新数据库的操作困难和后台系统尚未开发完成，我想到了用命令操作噼里啪啦系统，实现对文章的更新，这和最原始的操作系统非常相近，区别在于前者是用来管理文档资源的。  \r\n\r\n受限于技术和时间，这一切还停留在构想之中。  \r\n语法启发自SQL，但SQL中一些符号也是很让我头疼的问题。  \r\n我想避免命令中出现转义字符，让这个语言不那样让人感到“专业化”...  \r\n\r\nupdate  \r\n该命令支持增量更新文章数据库。  \r\n其中，更新时间由解释器自动生成。\r\n\r\n<pre>P#<code>\r\nupdate by id with  \r\ntitle = \"\",  \r\ncontent = \"\",  \r\nsummary = \"\",  \r\narchiv = \"\",  \r\n...\r\ntag = \"\";\r\n</code></pre>\r\n\r\nreg  \r\n该命令可注册一个文章。  \r\n其中，创建时间、更新时间、id、guid自动生成。\r\n<pre>P#<code>\r\nreg by id with \r\ntitle = \"\",  \r\ncontent = \"\",  \r\nsummary = \"\",  \r\narchiv = \"\",  \r\n...\r\ntag = \"\";\r\n</code></pre>\r\n\r\nsearch  \r\n该命令输出相关查询到的文章信息。  \r\n\r\n<pre>P#<code>\r\nsearch title/id/guid/summary/content/archiv/tag/createTime/changeTime by title/id/guid；\r\n</code></pre>\r\n\r\ndelete  \r\n用于注销文章  \r\n<pre>P#<code>\r\ndelete reg by id 12345;  \r\n</code></pre>\r\n删除文章副本  \r\n<pre>P#<code>\r\ndelete post by guid 51c2acd9-eb72-4c8f-9e4a-37f78b34e68a;  \r\n</code></pre>\r\n\r\n停留于构想的计划。  \r\n虽然一门新语言的构造需要功课大量难题，但我并不打算让P#变成高可用性和强兼容的查询语言，就像SQL那样，这可能让任务变得简单。目前我需要完成的是如何正确解析字符串，使其能够完成相应的任务。  \r\n这里仍然有许多问题，使用命令并不直观，也不见得比图形界面更加高效，考量它的存在意义也是其中之一。','',''),(12426,'3b7cad7e437c408ea823a020ef902d08','2020-09-09 22:29:05','','','考虑到盘古开天地时期的文章因为兼容性问题而几乎不可读，我打算在近期对它们进行可读性维护。','',''),(12445,'3bb2f276e2a84b0b8a89de5d834fc09d','2021-02-15 08:08:49','','','新年快乐~！ヾ(≧▽≦*)o','',''),(12444,'437572c8a80e4a4592ebd95c47971fa1','2021-02-08 20:30:20','每月评论2101','来看看THAUMY的这一个月发生了哪些事','# 每月评论\r\n\r\n> 每月评论 - 第三期\r\n\r\n* 每一刊每月评论将在当月的月末发行，同时也会伴随博客的版本更新。\r\n\r\n---\r\n\r\n## 硬盘坏掉了\r\n\r\n陪伴了我六年的移动硬盘，它读不出来了！！！\r\n\r\n> 哼哼哼啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊~~（大声哭闹）\r\n\r\n<img style=\"width:100%;\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/element.jpg\"><div style=\"width:100%;text-align:center\">我的硬盘</div>\r\n\r\n&emsp;&emsp;这块硬盘是我初三的时候买的，它也是我真正意义上购买的第一个电子产品，现如今已经陪伴我度过了六年的光辉岁月。这六年间我对它写入了无数的数据并产生了无尽的价值，是最令我满意的电子产品。  \r\n&emsp;&emsp;但是就在本月的第五天，它 读 不 出 来 了 ！起初电脑提示我分卷出现问题需要修复（大约是一周前），后来，读写速度时而突然将为零，并伴随着磁头反复启动的声音，最终整块硬盘都无法识别。于是我使用DiskGenius扫描了所有柱面，共计346个柱面完全损坏，覆盖了约30GB的空间。大部分损坏发生在起始柱面和终止柱面，分布的还算均匀，具有屏蔽的可能。于是我冗余了130GB在这些分散的柱面上建立了Windows不识别的EXT4分区以起屏蔽作用。\r\n\r\n<center><img style=\"width:230px;\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/114514.jpg\"><div style=\"width:100%;text-align:center\">一个恶臭柱面</div></center>\r\n\r\n&emsp;&emsp;屏蔽后的硬盘剩余800GB可用，它将继续产生价值。\r\n\r\n## 第一寒假准备！\r\n\r\n&emsp;&emsp;期末考试过后寒假便开始了，大学的放假流程还真是没有一丁点的拖泥带水。  \r\n&emsp;&emsp;订好了高铁票，从青岛直达荣成，方便极了。  \r\n&emsp;&emsp;快要到站时被邻座老太太打听旅店的地址，原来她是来看天鹅的，还是从广东来的！我心里特别感激，没想到还真有人会不远万里来荣成看天鹅啊！荣成这个小地方，没想到还真是有人惦记的。如此拥挤堵塞的社会，愿意跋山涉水只为追寻心中美好的人真的不多了。\r\n\r\n<img width=\"100%\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/swan.jpg\">\r\n<center><div style=\"width:100%;text-align:center\">“白色的雅子”</div></center>\r\n\r\n&emsp;&emsp;出成绩了，及格赛高！多一分浪费~~\r\n\r\n立个Flag单子，看看三月评论能不能实现吧......\r\n\r\n|         项目列表         | 难度系数 |\r\n| :----------------------: | :------: |\r\n|    至少读完两本箱底书    |  ?????   |\r\n| 三体第三部看完前三分之一 |   ???    |\r\n|    新头像绘制(设定陆)    |   ???    |\r\n|     每天都要写代码！     |    ??    |\r\n|         补番3部          |    ??    |\r\n\r\n## HiRes没有了！\r\n\r\n> 要知道我的AKG才用了两年啊！ <img height=\"50px\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/Nooo.jpg\">\r\n\r\n<img width=\"100%\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/akg.jpg\">\r\n\r\n&emsp;&emsp;其实我这耳机很久以前就坏过了，刚买不到一个月，线材就有部件脱落，考虑到可以换线我也没顾忌什么。到后来，左右导管相继脱落，正逢过年无售后可修，我于是无奈地用502给粘上。粘好后的耳机还有偏音，只得通过补偿左右声道的音量和换用不同的耳机套解决。再后来，线材老化......不得不说AKG的质量真是让人感动啊。  \r\n&emsp;&emsp;被三星收购后的AKG我实在是不敢恭维了，在以耐用性为主的挑选标准下，我买了条碧SoraLight。\r\n\r\n<center><img width=\"80%\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/sora.jpg\"></center>\r\n\r\n&emsp;&emsp;日本厂商也没少玩噱头啊，这宣传的陶瓷单元也不过就个给动圈嘛......不过无所谓啦，对于我这种木耳来说，像个样的HIFI塞子都听起来都差不多啦...或许，我想听到的天籁之音也只能靠EQ了吧。耳机这种东西，还是太烧钱了。\r\n\r\n<img height=\"100px\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/vido.jpg\">早知道，还是原道！<img height=\"100px\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2101/hires.gif\">\r\n\r\n---\r\n\r\n往事随风。\r\n\r\n---\r\n\r\n<div align=\"right\">\r\n\r\n每月评论 - 2101期(共3期)  \r\n撰稿&校对&审核：Thaumy\r\n\r\n</div>\r\n','',''),(12366,'47583f5696f0432dab4d0e00db34e5a9','2018-04-14 22:53:20','通用化站点pjax解决方案','','&emsp;&emsp;在上周进行网站优化和日常维护中，我发现ajax插件在一定程度上造成了我博客的臃肿，过于庞大的插件使我需要一个全新的方式载入文章。于是我查找了诸多文档，终于发现了更好的解决方案。值得注意的是，它适合绝大多数架构规范的网站，不仅仅局限于wordpress——这里是详细的解决方案。\r\n<ul>\r\n 	<li><span style=\"color: #ff9900;\">准备工作</span></li>\r\n</ul>\r\n\r\n&emsp;电脑一台，十分钟的阅读时间和十分钟的部署时间。  \r\n&emsp;注意，这篇教程不面向前端零基础的读者，如果你连header.php都找不到，那么请使用插件达到目的。  \r\n\r\n<blockquote>\r\n<span style=\"color: #00ccff;\">或许这篇文章更适合你：</span><br>\r\n<span class=\"wd-dt5 cur\" onclick=\"up();showPost(12347)\">AdvancedAjaxPageLoader插件实现全站ajax</span><br>\r\n<span style=\"color: #00ccff;\">&lt;跳往博客文章的超链接↑&gt;</span></blockquote>\r\n<ul>\r\n 	<li><span style=\"color: #ff9900;\">项目资源</span></li>\r\n</ul>\r\n\r\n<pre>JS<code>\r\nvar ajaxhome=\"您的站点地址\";var ajaxcontent=\"被刷新的文章容器id\";var ajaxsearch_class=\"searchform\";var ajaxignore_string=new String(\"#, /wp-, .pdf, .zip, .rar, /goto\");var ajaxignore=ajaxignore_string.split(\", \");var ajaxloading_code=\"此处添加加载动画代码\";var ajaxloading_error_code=\"此处添加超时代码\";var ajaxreloadDocumentReady=false;var ajaxtrack_analytics=false;var ajaxscroll_top=true;var ajaxisLoad=false;var ajaxstarted=false;var ajaxsearchPath=null;var ajaxua=jQuery.browser;jQuery(document).ready(function(){ajaxloadPageInit(\"\")});window.onpopstate=function(event){if(ajaxstarted===true&&ajaxcheck_ignore(document.location.toString())==true){ajaxloadPage(document.location.toString(),1)}};function ajaxloadPageInit(scope){jQuery(scope+\"a\").click(function(event){if(this.href.indexOf(ajaxhome)>=0&&ajaxcheck_ignore(this.href)==true){event.preventDefault();this.blur();var caption=this.title||this.name||\"\";var group=this.rel||false;try{ajaxclick_code(this)}catch(err){}ajaxloadPage(this.href)}});jQuery(\".\"+ajaxsearch_class).each(function(index){if(jQuery(this).attr(\"action\")){ajaxsearchPath=jQuery(this).attr(\"action\");jQuery(this).submit(function(){submitSearch(jQuery(this).serialize());return false})}});if(jQuery(\".\"+ajaxsearch_class).attr(\"action\")){}else{}}function ajaxloadPage(url,push,getData){if(!ajaxisLoad){if(ajaxscroll_top==true){jQuery(\"html,body\").animate({scrollTop:0},1500)}ajaxisLoad=true;ajaxstarted=true;nohttp=url.replace(\"http://\",\"\").replace(\"https://\",\"\");firstsla=nohttp.indexOf(\"/\");pathpos=url.indexOf(nohttp);path=url.substring(pathpos+firstsla);if(push!=1){if(typeof window.history.pushState==\"function\"){var stateObj={foo:1000+Math.random()*1001};history.pushState(stateObj,\"ajax page loaded...\",path)}else{}}if(!jQuery(\"#\"+ajaxcontent)){}jQuery(\"#\"+ajaxcontent).prepend(ajaxloading_code);jQuery(\"#\"+ajaxcontent).fadeTo(\"slow\",0.4,function(){jQuery(\"#\"+ajaxcontent).fadeIn(\"slow\",function(){jQuery.ajax({type:\"GET\",url:url,data:getData,cache:false,dataType:\"html\",success:function(data){ajaxisLoad=false;datax=data.split(\"&lt;title>\");titlesx=data.split(\"&lt;/title>\");if(datax.length==2||titlesx.length==2){data=data.split(\"&lt;title>\")[1];titles=data.split(\"&lt;/title>\")[0];jQuery(document).attr(\"title\",(jQuery(\"&lt;div/>\").html(titles).text()))}else{}if(ajaxtrack_analytics==true){if(typeof _gaq!=\"undefined\"){if(typeof getData==\"undefined\"){getData=\"\"}else{getData=\"?\"+getData}_gaq.push([\"_trackPageview\",path+getData])}}data=data.split(\'id=\"\'+ajaxcontent+\'\"\')[1];data=data.substring(data.indexOf(\">\")+1);var depth=1;var output=\"\";while(depth>0){temp=data.split(\"&lt;/div>\")[0];i=0;pos=temp.indexOf(\"&lt;div\");while(pos!=-1){i++;pos=temp.indexOf(\"&lt;div\",pos+1)}depth=depth+i-1;output=output+data.split(\"&lt;/div>\")[0]+\"&lt;/div>\";data=data.substring(data.indexOf(\"&lt;/div>\")+6)}document.getElementById(ajaxcontent).innerHTML=output;jQuery(\"#\"+ajaxcontent).css(\"position\",\"absolute\");jQuery(\"#\"+ajaxcontent).css(\"left\",\"20000px\");jQuery(\"#\"+ajaxcontent).show();ajaxloadPageInit(\"#\"+ajaxcontent+\" \");if(ajaxreloadDocumentReady==true){jQuery(document).trigger(\"ready\")}try{ajaxreload_code()}catch(err){}jQuery(\"#\"+ajaxcontent).hide();jQuery(\"#\"+ajaxcontent).css(\"position\",\"\");jQuery(\"#\"+ajaxcontent).css(\"left\",\"\");jQuery(\"#\"+ajaxcontent).fadeTo(\"slow\",1,function(){})},error:function(jqXHR,textStatus,errorThrown){ajaxisLoad=false;document.title=\"Error loading requested page!\";document.getElementById(ajaxcontent).innerHTML=ajaxloading_error_code}})})})}}function submitSearch(param){if(!ajaxisLoad){ajaxloadPage(ajaxsearchPath,0,param)}}function ajaxcheck_ignore(url){for(var i in ajaxignore){if(url.indexOf(ajaxignore[i])>=0){return false}}return true}function ajaxreload_code(){}function ajaxclick_code(thiss){jQuery(\"ul.nav li\").each(function(){jQuery(this).removeClass(\"current-menu-item\")});jQuery(thiss).parents(\"li\").addClass(\"current-menu-item\")};</code></pre>\r\n\r\n复制以上代码，在相关编辑器中新建一个js文件并拷贝进去，等待下一步指示。  \r\n\r\n### 你需要格式化以上代码才能正确阅读。\r\n\r\n接下来，我们需要修改代码中的某些部分，以保证代码在你的网站中能够达到您预期的效果。\r\n<br><br>\r\n\r\n<h3 style=\"color: #ff9900;\">修改以下代码</h3>\r\n\r\n<pre>JS<code>var ajaxhome=\'http://www.thaumy.cn\';</code></pre>\r\n您的站点地址，例如我的网站主页地址为 http://www.thaumy.cn ，那么这里就可以填写http://www.thaumy.cn\r\n<br><br>\r\n\r\n<pre>JS<code>var ajaxcontent = \'被刷新的文章容器id\';</code></pre>\r\n被刷新的文章容器id，指的是文章列表(postlist)的父级id。例如我的id是 Central ，那么这里就可以填写Central\r\n<br><br>\r\n\r\n<pre>JS<code>var ajaxsearch_class = \'searchform\';</code></pre>\r\n搜索栏目的id，默认为 searchform ，一般不用更改\r\n<br><br>\r\n\r\n<pre>JS<code>var ajaxignore_string = new String(\'#, /wp-, .pdf, .zip, .rar, /goto\');</code></pre>\r\n\r\n被屏蔽的加载项目，即不进行pjax加载的链接关键字，默认为 #, /wp-, .pdf, .zip, .rar, /goto ，一般不用更改\r\n<br><br>\r\n\r\n<pre>JS<code>var ajaxloading_code = \'此处添加加载动画代码\';&lt;br&gt;</code></pre>\r\n此处添加加载动画代码，使pjax加载时显示动画，例如我的蓝色线条加载动画，这里不过多解释\r\n<br><br>\r\n\r\n<pre>JS<code>var ajaxloading_error_code = \'此处添加超时代码或一些文本\';</code></pre>\r\n此处添加超时代码或一些文本，例如pjax请求失败时，文章容器所显示的内容  \r\n<br>\r\n\r\n<h3 style=\"color: #ff9900;\">将以上代码修改完成后，复制修改好的代码，使用 &lt;script&gt;&lt;/script&gt; 标签把代码块插入到 header.php 的 &lt;/head&gt; 之前，然后就能实现网站的pjax加载了。</h3>\r\n\r\n虽然此方法能够完成需求，但是我并没有这样做，因为在 header.php 中插入大量的代码会让博客显得很臃肿。我的建议是把js做cdn加速，然后使用wordpress自带的函数进行注册排队后正确引用，该方法在wordpress大学有明确的帮助文档：<a href=\"https://www.wpdaxue.com/wordpress-include-jquery-css.html\">wordpress大学</a></span>\r\n\r\n> 使用AdvancedAjaxPageLoader插件实现的全站ajax的教程文章已归档，该插件存在兼容性问题，已经不推荐使用。','远古文章',''),(12438,'4f4ab65c1b95482eb070686e78873e51','2020-12-12 15:55:37','','','2020年12月12日15时52分，pilipala在linux环境下运行成功！','噼里啪啦工程组',''),(12446,'531a991b8c574bd0bc67a1990479e4c1','2021-03-04 14:47:13','每月评论2102','来看看THAUMY的这一个月发生了哪些事','# 每月评论\r\n\r\n> 每月评论 - 第四期\r\n\r\n* 每一刊每月评论将在当月的月末发行，同时也会伴随博客的版本更新。\r\n\r\n---\r\n\r\n## 开开心心过DA♂RK年！\r\n\r\n水瓜社和水瓜大学全体成员在此祝大家，牛年快乐！\r\n<center><img style=\"width:40%;min-width:300px\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2102/redbag.gif\"><div></center>\r\n<img style=\"width:140px;\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2102/needredbag.jpg\"><div>\r\n\r\n## 国际空间站通联监听\r\n\r\n> 本月5日，国际空间站和俄罗斯海参崴在北京时间16:30左右于145.800Mhz频段进行通联。\r\n\r\n&emsp;&emsp;海参崴和我威海的地理位置貌似不会成为无线电监听的障碍，适逢水瓜社的jss和soulster都有手台，于是我们赶往海边监听。一开车门就接收到了信号，以下是抄收到的信息：\r\n\r\n<img style=\"width:33.3%;float:left\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2102/ham1.jpg\"><img style=\"width:33.3%;float:left\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2102/ham2.jpg\"><img style=\"width:33.3%;float:left\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2102/ham3.jpg\">\r\n<center>设备：宝峰UV5R&老鹰771天线</center>\r\n\r\n<br>\r\n\r\n## 黄金矿工\r\n\r\n<img style=\"width:100%;float:left\" src=\"https://cdn.thaumy.cn/md-img/每月评论/2102/btc.jpg\"><div style=\"width:100%;text-align:center\">数据来自币安</div>\r\n\r\n&emsp;&emsp;随着去年中旬比特币区块奖励减半，比特币市值可谓一路上涨，从8千刀直接飙到5万刀，并在本月22日凌晨达到58352.80美元/个，半年涨幅竟然高达600%。  \r\n&emsp;&emsp;好景不长，三日内BTC跌至4w6，24小时内37万人爆仓，炒币风险仍不可忽视。  \r\n&emsp;&emsp;虽然有一定风险，但我觉得数字货币仍有很好的前景，在面临政治压力之前仍有很大的增值空间。我认为在个人能够接受的亏损范围内投资区块链仍是不错的理财选择，于是我也开始挖矿了（甚至我的树莓树莓派也在挖矿！），奈何个人算力有限，每日收益只能勉强抵去电费，但让设备闲着未尝不是一种亏损。在这个国家信用货币持续增发的年代，钱越来越不值钱了，我很看好BTC的经济模式。  \r\n\r\n&emsp;&emsp;另外，本博客现在支持<a href=\"/12385\">数字货币赞助</a>啦。\r\n\r\n## .NET6发布啦~！\r\n\r\n&emsp;&emsp;本月中旬，.NET6 preview1发布啦！  \r\n&emsp;&emsp;在众多新特性中，最令我兴奋的就是Blazor的跨平台开发和C#热重载调试。前者能很好的解决我目前在Electron移植上的性能问题，又能充分利用前端布局完成UI设计，后者能很大程度上提升C#的调试效率（虽然结合VS的调试效率本来就很好）。向来微软的工作流带给我的印象都是整齐划一且十分严谨的（Windows系统除外），我衷心希望微软能做好.NET平台的生态。  \r\n\r\n（暴击）不过话又说回来，C#你这垃圾语言什么时候支持  \r\n\r\n``` 吐槽\r\n更复杂的条件模式匹配 //switch模式匹配只能匹配常量，并且满足条件的行为只允许写一行\r\n基于密封类的和类型 //C#不允许在密封类内部声明子类\r\n扩展方法的静态调用 //C#的扩展方法只能在实例上被调用，这对静态工厂模式的设计很不友好\r\n原生单例模式 //没错，kotlin有的我也要！\r\n常用控制语句的表达式化、更好的常量声明 //减少副作用，另外我不喜欢在每个变量前都加个const\r\n无需句末分号 //加分号太啰嗦了，虽然我不指望它能实现这个\r\n```\r\n\r\n但我还是知道，C#的有些包袱太重了，和新兴的多范式语言较量还是很乏力的。  \r\n\r\n## Flag完成度清单\r\n\r\n在一月评论里面我写下了一些寒假计划，现评估它的完成度。\r\n\r\n|         项目列表         | 进度  |\r\n| :----------------------: | :---: |\r\n|    至少读完两本箱底书    |  80%  |\r\n| 三体第三部看完前三分之一 |  60%  |\r\n|    新头像绘制(设定陆)    |  0%   |\r\n|     每天都要写代码！     | 100%  |\r\n|         补番3部          | 100%  |\r\n\r\n&emsp;&emsp;这可能是我度过的最充实的假期了。  \r\n&emsp;&emsp;我几乎没有把时间浪费在游戏上（几乎！我在假期的前10天是有接触游戏的），在剩余的时间里我读了大概400余页书籍，娱乐方式是看番和聊天。注意到我的学习是有偏好的，相较于大学里的基础学科（如英语、数学或物理），我更倾向于计算机类的东西。即便如此，我仍秉持基于兴趣爱好的目标驱动，鲜有考虑求职需要或是学历提升方面的东西，因此我并不为自己在上述行为中感到有什么努力感。是的，我只是在此向你介绍我如何消遣我的假期时光。\r\n\r\n---\r\n\r\n&emsp;&emsp;其实这个月够无聊的，本来打算把这期评论咕一咕的，但终究觉得要写些什么。  \r\n&emsp;&emsp;原本想发些技术类文章的，可是我越读书越感觉自己还差得远，可能写出来也很快会被未来的自己当作垃圾文章来看了，于是就不去写罢。\r\n\r\n---\r\n\r\n<div align=\"right\">\r\n\r\n每月评论 - 2102期(共4期)  \r\n撰稿&校对&审核：Thaumy\r\n\r\n</div>\r\n','',''),(12413,'54fa22a71dec49b887ed0deda3d98a41','2020-02-06 13:53:32','','','最近正在测试基于RAZOR视图的氛主题，这种渲染引擎的运行效率更加出色。','RAZOR$氛',''),(12430,'59bda6062548407499317315733b2ade','2020-10-24 14:57:36','CommentLake计划','评论湖','CommentLake是一款为pilipala设计的站点评论系统，提供了评论、回复等社交功能。  \r\n该项目计划正在实行。\r\n\r\n### 方案一（易实现，但维护性差，不宜后期进行项目拓展，但检索并发性稍有优势）\r\n\r\n**comment_lake表构成：**  \r\n\r\n* ID （指向被评论的文章ID，主键，唯一，非空）  \r\n* Comment （评论内容）  \r\n* CommentCount （评论计数，每次提交后加一，列表输出时直接取用，后期增加校验函数以保证评论数量可靠）  \r\n\r\n**评论内容（Comment）结构：**  \r\n\r\n<$> uname $ eml $ content $ usite $ head(head为评论指针，指向一个评论楼层以代表回复的对象，若指向0楼则表示为一般评论) </$>  \r\n\r\n**CommentCount刷新思路：**  \r\n\r\n通过统计<\\$></\\$>块的对数进行计数，遇到违规字符时处理困难（如<$>）  \r\n\r\n### 方案二（不易实现，维护性好(但寻找评论关系复杂)，项目可用性高）\r\n\r\n**comment_lake表构成：**  \r\n\r\n* ID（指向被评论的文章ID，非主键，不唯一，非空）int  \r\n* CommentID（单独评论ID，主键，识别该评论的唯一标识符）int  \r\n* Comment （单独的评论内容）longtext  \r\n* Head（评论指针，指向回复的CommentID，为空则为一般评论）int  \r\n\r\n**CommentCount统计思路：**  \r\n\r\n直接取用符合ID的行数量进行统计，一行查询即可完成，容易实现。  \r\n\r\n### 方案三（直接使用GitHub已有项目开发或接入GitHub评论）\r\n\r\n* 方案评估  \r\n**优：**  \r\n能够立即投入使用，系统可靠性高且维护成本低。  \r\n**缺：**  \r\n介于GitHub在国内的网络特性，可能存在部分用户无法访问的问题。  \r\n评论需要使用GitHub登录，对于需要短暂评论的用户不够友好，且注册和登录是繁琐的过程，不利于小白用户使用。  \r\n即使是使用不基于GitHub的已有项目，也会存在后期瓶颈和兼容问题，和pilipala的插件化开发可能格格不入。\r\n\r\n> 方案一和方案二均不需登录就可使用，但存在被攻击的问题，造轮子也比较困难。\r\n\r\n---\r\n\r\n## 2020.10.24更新\r\n\r\n目前CommentLake已经开发完成  \r\n采用的开发思路是采用双索引作为归属文章标识和评论唯一标识，每次获取评论均需检索整张评论表(改进版方案一)。  \r\n此方法在评论数较少时性能表现良好，但站点评论量达到上万次级后性能损耗会比较明显。  \r\n介于pilipala目前并不具备强大的并发能力，且在高并发上道路还有很长的一段距离要走，此方案就成了CommentLake最佳的实现方案。','',''),(12396,'5a80a868ec804b2981801c56aa4a192f','2020-02-12 06:51:29','噼里啪啦BETA7已部署','来自6300行的净构建','经过一个月的编写调试，噼里啪啦推出了第七测试版。  \r\n在弥补上一版本的若干缺陷的同时，BETA7使用了新的业务体系，提供了更加丰富的函数支持。\r\n\r\n## Kaguya架构\r\n\r\n<blockquote>\r\n来自四宫辉夜的钦定\r\n</blockquote>\r\n\r\n1. 支持更大客制化空间的模块化主题\r\n2. 第三代数据桥\r\n3. 重构后的噼里啪啦数据库\r\n4. 快速部署支持\r\n5. 高可用性重构\r\n\r\n## WaterLibrary内核\r\n\r\n<blockquote>\r\n水库，纳百川之流\r\n</blockquote>\r\n\r\n1. 全新的文章控制器\r\n2. 规范统一的命名体系\r\n3. 多接口约束\r\n4. 简明易懂的业务层分工\r\n5. 更加安全的噼里啪啦数据库访问机制\r\n6. 专为第三代对象式架构调整的数据层\r\n7. 更多的数据源获取支持','噼里啪啦工程组$PB7',''),(12380,'5bdaf23548a64353b685ac24a6373875','2020-12-30 13:50:52','水瓜社成立','跨世纪工程','# 2019.04.05，这是水瓜的生日\r\n\r\n### 经过长达两个周的讨论，星魂（GXH）、Thaumy、jss确定了最终工作室命名：水瓜社\r\n\r\n![melonBoy.jpg](<{cdn_root}>/表情包/melonBoy.jpg)\r\n\r\n&emsp;&emsp;这个名字来源于这个表情，它是水瓜社的吉祥物  \r\n&emsp;&emsp;至于为什么叫水瓜而不叫西瓜，道理很简单，西瓜是一个很不错的名字，不可避免地产生了重名。\r\n\r\n### <span style=\"color:#48D1CC\">H2OMelonSocie</span>    ————    水瓜社的英文名\r\n\r\n&emsp;&emsp;很简单，watermelon。不可避免地产生了重名，所以变成了H2OMelon。  \r\nsociety这个单词并不是某某会社的意思，我们取了它的前几个字母：soice，作为“社”的意思。  \r\n它读起来很方便。\r\n\r\n## 第一时间，我们产生了诸多支部。\r\n\r\n<img alt=\"melonedBank.png\" style=\"width:90%\" src=\"<{cdn_root}>/md-img/水瓜社成立/melonedBank.png\">\r\n\r\n### <span style=\"color:#48D1CC\">MelonedBank</span>  ————    水瓜储蓄  \r\n\r\n&emsp;&emsp;社内开销不可避免，水瓜储蓄应运而生。  \r\n&emsp;&emsp;我们三人每人投资了为数不多的几元钱，兴办了水瓜标准储蓄银行，以保证水瓜的日常运营开销。  \r\n水瓜基金不属于任何成员，当所有成员同意时，水瓜基金才被允许征用。\r\n\r\n# ~~917328480 水瓜社群聊（最高机密）~~\r\n\r\n&emsp;&emsp;这个QQ群原来是为了某三个不法分子的行动而成立的，幸运的是，他们已经改邪归正，正思索为这个社会贡献点什么。  \r\n\r\n### ![vanBoy.jpg](<{cdn_root}>/表情包/vanBoy.jpg)现在它变成了水瓜们的家。\r\n\r\n### 感兴趣的话，你可以可以来和瓜友们聊聊天。。。','水瓜社$工作室','<img class=\"pXL\" src=\"<{cdn_root}>/md-img/水瓜社成立/h2omelonsocie.jpg\">'),(12452,'5c1c80f39e2c4978a715490b1f66d8d1','2021-06-08 03:00:00','WWDC21','还不如不看','# 2021苹果全球开发者大会概要\r\n\r\n## iOS15\r\n\r\nLiveText（三端均有，图片文字识别功能  \r\n地图更新（国内感知不强  \r\n钱包更新（国内感知不强  \r\nMusic更新\r\n\r\n## AirpodsPro\r\n\r\n功能性增强（如残障支持\r\n\r\n## iPadOS15\r\n\r\n多任务（应用分屏  \r\nQuickNote应用（笔记软件  \r\nTranslate应用（翻译软件  \r\nSwiftPlayground（代码学习工具\r\n\r\n## tvOS相关\r\n\r\n感知不强\r\n\r\n隐私保护：  \r\nMail应用隐私控制  \r\nSafari隐私控制  \r\nApp隐私报告（类似小米  \r\nSiri语音数据本机处理以强化隐私  \r\niCloud数字遗产计划（没听讲。。。\r\n\r\n## iCloud+\r\n\r\nSafari全匿名访问（利用Apple中继服务器转发http请求以杜绝web站点对源地址的追踪，类似于Tor  \r\nMail随机邮箱（一次性邮箱地址，随用随删\r\n\r\n## 健康相关\r\n\r\n睡眠质量、指标检测、健康共享等，功能感知弱（健康共享可以实时查看家人健康状况，如最近一分钟的心率变化。。。\r\n\r\n## watchOS8\r\n\r\n看图提神功能（？？？  \r\n呼吸、健康、锻炼等等  \r\nApple Fitness+（健身课程  \r\n人像表盘  \r\n全新照片app  \r\n支持GIF图  \r\n天气  \r\n多计时器\r\n\r\n## HomeKit\r\n\r\n感知不强\r\n\r\n## macOS12 :: Monterey\r\n\r\nUniversalControl（MacBook/iMac控制iPad、iMac  \r\nShortcuts（系统级快捷键自定义！  \r\nSafari重构（好看！  \r\n为开发者提供的一大堆API  \r\nSwift新特性：aysnc/await/actor关键字（aka并发编程  \r\nXcodeCloud（云编译、云测试、CI/CD\r\n\r\n---\r\n\r\n### 总结\r\n\r\n这次发布会没有新mbp14/16，亏我认真听了这么长时间。。。其实我早就注意到了，发布会放了一个半小时多了都还没有出现新设备的操作演示，WWDC19的时候早就出现在新硬件上的演示了。。。挺失望的，又要等大半年了\r\n','苹果',''),(12441,'5c8b57dcbbdc4f86adc53144436659f4','2021-01-01 00:00:00','','','_(:з」∠)_init2021','',''),(12415,'5e9de2cb8bc948d78e3dce3f69cb42ed','2020-07-29 19:53:37','Thaumy人设5 (雅爱方雏编)','“梦幻联动”','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12387)\">转到“我”</span>\r\n\r\n# <span class=\"wd-heimu\">孤僻内向的大病娇</span>\r\n\r\n> 此设定适用于《东联往事 · 卷Ⅱ : 人类量产计划》的前半部分章节，设定不适用于所有量产阶段的Thaumy。\r\n\r\n## <span class=\"wd-dt4\">P1</span> <span style=\"color:#48D1CC\">基本设定</span>\r\n\r\n&emsp;&emsp;很少和陌生人交谈来往。  \r\n对于他人的主动接触显得十分敏感（尤其异性），不会主动透露自己的兴趣爱好（如果不被主动询问或者有特殊情况的话）。  \r\n&emsp;&emsp;好胜心较强，与更优秀的人接触时有机率触发阴谋论心理（自动将对方的一切行为脑补成与自己敌对的战略举措），并且表现得极为冷漠。  \r\n&emsp;&emsp;心情不好时会发生黑化反应，将解决目前问题列为最高优先级，此期间会丧失基本人格。遇到高兴的事情时黑化会慢慢解除，表现为乐于或主动和较为熟悉的人交流（陌生人介入的最佳时机）。\r\n\r\n## <span class=\"wd-dt4\">P2</span> <span style=\"color:#48D1CC\">设定详情</span>\r\n\r\n### <span style=\"color:#9ACD32\">性格表征</span>\r\n\r\n&emsp;&emsp;适用于基于ThaumyNERVSYS的pH调节系统触发器：  \r\n当看到比自己优秀的人的时候，Thaumy倾向于表现出批判面，认为该人一无是处（并认为其擅长的方面没有应用价值），并造成Thaumy体内的氢离子浓度上升。  \r\n\r\n&emsp;&emsp;心情不好时会降低做任何事情的积极性，且懒于说话。主动回避与自己作风完全相反的人（必须是很完全时才会触发）。  \r\n\r\n&emsp;&emsp;不乐意在他人面前展示自己优秀的一面，但是如果对其进行主动试探，Thaumy绝对会毫不保留的把他知道的全告诉你。。。  \r\n\r\n> 社交准则1：由于 A.T. FIELD 的作用，和Thuamy进行谈话时必须表现出主动。Thaumy表现出的冷淡是他想继续交流的最好证明。（该社交准则不适用于于Thaumy性格匹配度低于30%的人）\r\n\r\n> 行为学表征1：当持续进行Thaumy极感兴趣的话题时，Thaumy会表现出身体发抖，感觉很冷的症状。\r\n\r\n### <span style=\"color:#CC3300\">履历&档案</span>\r\n\r\n代号：Thaumy  \r\n<span class=\"wd-dt4\">C31识别码：17A2EF1G1C0536</span>\r\n\r\n事务机构：  \r\n\r\n### A&M（阵方互联）\r\n<img width=\"300px\" src=\"<{cdn_root}>/md-img/am_logo_1810.svg\">\r\n\r\n### H2OMSOCIE（水瓜社）\r\n<img  width=\"300px\" src=\"<{cdn_root}>/md-img/h2om_logo_1907.svg\">\r\n\r\n### Community31（31学社）\r\n<img  width=\"300px\" src=\"<{cdn_root}>/md-img/c31_logo_1802.svg\">\r\n\r\n### 生理学采样报告：未公开  \r\n\r\n来自水瓜社的数据：\r\n水瓜标准基金委员会成员  \r\n水瓜常任委员会成员  \r\n\r\n来自阵方互联的数据：  \r\n此项目需要K1级别读取权限。您的设备不具备该许可级别。  \r\n来自C31的数据：  \r\n此项目需要F1级别读取权限。您的设备不具备该许可级别。  \r\n\r\n### <span style=\"color:#FF8C00\">兴趣爱好</span>\r\n\r\n画画  \r\n打代码  \r\n某些设计  \r\n听歌（ACG）  \r\n\r\n# SP：其他属性\r\n\r\n### <span style=\"color:#48D1CC\">十分差劲的全栈</span>\r\n\r\n&emsp;&emsp;在建模、板绘、视频、音乐、编程、硬件、艺术设计等领域都有不同程度的涉猎，<span class=\"wd-heimu\">有了搜索引擎的支持</span>，Thaumy可以短时间内在任何一方面按需做出自己满意的作品。<span class=\"wd-heimu\">某孙子王也是</span>\r\n\r\n### <span style=\"color:#48D1CC\">与生俱来的强迫症</span>\r\n\r\n&emsp;&emsp;即使一个像素点的差别，Thaumy也会尽可能地考虑到它出现的合理性。这样的性格特点让使得Thaumy过分地注重细节，宁可用过低的时效比换取自己满意的成果。\r\n\r\n### <span style=\"color:#48D1CC\">我是一位艺术家</span>\r\n\r\nThaumny总是有着独到的见解。丰富的想象力和大胆的尝试让理想和现实达成共识。\r\n>编程是门艺术，而我，是艺术家————Thaumy\r\n\r\n### <span style=\"color:#48D1CC\">24x7x365宅</span>\r\n\r\n&emsp;&emsp;说到宅，没人能比得上Thaumy。————不应过多解释，这是公认的事实。  \r\n&emsp;&emsp;但是基于最新的数据表明Thaumy貌似想要出去看看这个世界。\r\n','绘画$联动$雅爱方雏',''),(12394,'6349b966bdc44cb3b989e160f1fefe78','2019-08-31 22:30:54','氛V2','Make a simple, intuitive UI','# 氛V2主题\r\n\r\n<blockquote>\r\n经过全新设计\r\n</blockquote>\r\n\r\n## 高分辨率视觉\r\n\r\n<div align=\"center\">\r\n<img style=\"width:94%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/xiangyingshi.svg\">\r\n</div>\r\n\r\n相较于氛V1，氛V2在2K分辨率下进行设计，出色的响应式结构让氛V2拥有更大的分辨率支持空间。  \r\n\r\n## 手机与平板的出色体验\r\n\r\n<div>\r\n<img style=\"width:70%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/phone&pad.svg\">\r\n</div>\r\n\r\n我们兼容所有移动端设备，氛V2为移动端自适应提供了出色解决方案。  \r\n下拉式菜单经过精心设计，支持全面屏。\r\n\r\n## 来源于对文字的专注\r\n\r\n<div>\r\n<img style=\"width:100%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/new_tag.svg\">\r\n</div>\r\n不同于氛V1，氛V2的标签样式更加简单，你看到的每一篇文章，以文字回归。\r\n\r\n## 思源，饮水思源\r\n\r\n<div>\r\n<img style=\"width:100%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/source_han_sans.jpg\">\r\n</div>\r\n\r\n一笔一划的匠心雕琢，来自我们颇受欢迎的思源黑体的拉丁文、希腊文和西里尔文字形。  \r\n\r\n## 标准色\r\n\r\n<div>\r\n<img style=\"width:30%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/srgb_color.svg\">\r\n</div>\r\n\r\n100%SRGB的设计师标准，我们的颜色，精准到每一像素。\r\n\r\n## 阅读本身就是一种放松\r\n\r\n<div>\r\n<img style=\"width:70%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/deep_dark_field.svg\">\r\n</div>\r\n\r\n减少光刺激的暗色调阅读区。\r\n\r\n## 人人皆作家\r\n\r\n<div>\r\n<img style=\"width:50%;box-shadow:none;\" src=\"https://cdn.thaumy.cn/md-img/氛V2/markdown_logo.svg\">\r\n</div>\r\n\r\n忘掉html，这里没有标记块。  \r\n得益于marked.js解析引擎，你可以在写作时使用markdown语言，可读易用。  \r\n\r\n## 这个需求很简单\r\n\r\n<pre>C#<code>public void HelloField()\r\n{\r\n    Console.WriteLine(\"HelloField!\");\r\n}</code></pre>\r\n\r\n现在是开发者时间，氛V2支持高亮。\r\n\r\n## This Is Field.\r\n\r\n这就是氛。','客制化','<img class=\"pXL\" src=\"https://cdn.thaumy.cn/md-img/氛V2/field2cg.jpg\">'),(12382,'68027f412f28497ca7b6df84d712cf1e','2020-10-06 21:44:02','关于PiliPala','一个响亮的名字!','<style>p{text-indent: 2em; /*首行缩进*/}</style>\r\n\r\n## <span style=\"color:#3A65EB\">一个先进的博客系统</span>\r\n\r\n这是一个响亮的名字！  \r\n\r\n<blockquote>\r\n噼里啪啦的命名灵感来自于键盘的敲击声。\r\n</blockquote>\r\n\r\n为改善网站运行效率，构建更好的信息发布平台，我开发了基于ASP.NET的博客系统，以噼里啪啦命名。  \r\n\r\n它是一个支持主题、精简高效、部署方便、易于拓展的工程，使用C#开发。  \r\n\r\n处于多重考虑，我们为该博客使用了MySql数据库，而不是MSSql。\r\n\r\n### <span style=\"color:#53A0FE\">为什么要开发PiliPala？</span>\r\n\r\nWordpress是一个非常不错的博客系统，丰富的生态为它带来了很好的市场。  \r\n\r\n我尝试Wordpress的主题与插件，但是Wordpress臃肿的代码和复杂的函数使我不得不放弃。  \r\n\r\n之后我尝试了Typecho。  \r\n\r\n很快我便发现，php这种语言并不适合大型项目的开发：弱类型、版本之间的不兼容性、不完全的面向对象支持、不理想的运行效率、低效率的DeBug支持......  \r\n\r\n我认为，是时候出现一个新的博客系统了。  \r\n\r\n3年前，博客重构计划启动。\r\n\r\n### <span style=\"color:#53A0FE\">来自WaterLibrary内核的全速驱动</span>\r\n\r\n<img style=\"width:100%\" src=\"https://cdn.thaumy.cn/md-img/WaterLibrary-水库.min.png\">\r\n\r\n————原名StudioLibrary，由水瓜啪啦开发工程组联合开发，它以极少的代码量，驱动了PiliPala的数据与业务层。\r\n\r\n它原本是为精简桌面程序开发过程而开发的类库，但现在它的使命是全速驱动噼里啪啦。  \r\n\r\n得益于C#的强大支持，这个内核的代码十分规范，.NET的强大编译器让责任与能力达成共识。  \r\n\r\n### <span style=\"color:#53A0FE\">永久开源</span>\r\n\r\n我们的项目在GitHub开源，目前已达8个版本迭代。  \r\n点击这个超链接按钮，你可以于GitHub下载pilipala源代码:<a href=\"https://github.com/Thaumy/PILIPALA\">PiliPala On GitHub</a>\r\n\r\n### <span style=\"color:#53A0FE\">持续动力迭代</span>\r\n\r\n每个周PiliPala都会进行更新，每个季度PiliPala都会对上一阶段的问题进行汇总，将实用的新特性纳入新版本的开发列表之中。  \r\n\r\n每个版本的发布都伴随着新的pilipala功能，不断带来性能优化和更加强大的内核支持。\r\n\r\n### <span style=\"color:#53A0FE\">非同寻常的系统</span>\r\n\r\n我们将ASP.NET(C#)与MySql组合，从高效和高可靠中同时受益，结构化的组件式架构使pilipala的拓展性进一步延伸。  \r\n\r\n得益于强大的MarkDown，即使是再复杂的文章，pilipala也能出色展现。  \r\n\r\n丰富且不断更新的内核函数让每一行代码的精简与高效完美契合。\r\n\r\n### <span style=\"color:#53A0FE\">WE NEED HEROES</span>\r\n\r\n噼里啪啦由水瓜啪啦开发工程组开发运营，你可以通过QQ群（917328480）了解它的详细开发过程，或着手它的下一版本开发。\r\n\r\n我期待更多的开发者加入到这个颠覆性的项目当中。','噼里啪啦工程组','\r\n\r\n\r\n<img class=\"pXL\" src=\"https://cdn.thaumy.cn/md-img/PiliPala2020-敲击灵感的声音.min.png\">'),(12403,'684b5fb91f45483695a3ef383f471ccf','2019-11-16 22:39:08','Deepin系统','','<style>p{text-indent: 2em; /*首行缩进*/}</style>\r\n\r\n### 最近不知道怎么的灵稽一动，就想起来了MacOS和Linux这两个系统。其实本来是打算装黑苹果的，介于驱动的问题就懒得搞了。\r\n\r\n于是我安装了deepin。  \r\n\r\n要知道这个过程并不容易。  \r\n\r\n问题出在了主板的一个故障SATA口上，在众多usb接口中竟然只有两个可以被识别....这导致了我花费了4个小时才装上deepin。  \r\n\r\n最近华为的笔电都因为某国政策压力装上了deepin，于是乎我也想用一用（另一个原因是我认为ubuntu对国内应用的友好度不如deepin）。  \r\n\r\ndeepin很漂亮，比windows好看。  \r\n\r\n<img style=\"float:left;width:50%\" src=\"https://cdn.thaumy.cn/md-img/Deepin使用体验/deepin04.jpg\"/><img style=\"float:left;width:50%\" src=\"https://cdn.thaumy.cn/md-img/Deepin使用体验/deepin01.jpg\"/>\r\n\r\n支持了国内很多应用，例如网易云。awesome！我可以在linux上听AZ！  \r\n\r\n<img style=\"width:100%\" src=\"https://cdn.thaumy.cn/md-img/Deepin使用体验/deepin03.jpg\"/>\r\n\r\n同时deepin的应用商店为开发者提供了很多选择，这是令我<span class=\"wd-heimu\">贼鸡巴</span>兴奋的（虽然我只用了个vsc）。  \r\n\r\n<img style=\"width:100%\" src=\"https://cdn.thaumy.cn/md-img/Deepin使用体验/deepin07.jpg\"/>\r\n\r\n火狐一向对linux支持的很积极。  \r\n\r\n<img style=\"width:100%\" src=\"https://cdn.thaumy.cn/md-img/Deepin使用体验/deepin06.jpg\"/>\r\n<img style=\"width:100%\" src=\"https://cdn.thaumy.cn/md-img/Deepin使用体验/deepin05.jpg\"/>\r\n\r\n我配置了netcore的SDK和运行时以进行web开发，但是过程并不是我想象的那么简单（不了解mvc是硬伤）。  \r\n\r\n系统很好用，我把它安利给了雅爱方雏。  \r\n下面我们来看看她的评价：\r\n\r\n雅爱方雏的Deepin一晚使用感想，  \r\n\r\n<blockquote>\r\n\r\n首先，Deepin是国内团队制作的一款知名Linux发行版本，其相对其他国外发行版本要更加本土化，默认附带wps等常用办公软件，并且带有云端储存功能（仅限大陆）。  \r\n\r\n其UI设计是比较先进的，包括毛玻璃、平滑的动画效果和多样化的主题设计，可以说在各种发行版本中数一数二。  \r\n\r\n由于窝只是一个需求很低的Windows习惯用户，使用电脑顶多也就上网页、聊天，偶尔玩一些游戏。因此下面的一系列评价都是以此为基础的。  \r\n\r\nLinux对于N卡的驱动支持一直是很伤的。闭源驱动并不被系统作为首选项，因为其兼容性较差，可能使部分显卡产生一系列故障现象。但窝亲测换用了闭源驱动后使用正常。  \r\n\r\n默认附带wine运行的普通版QQ，但很可惜已经因版本过旧无法使用了。应用商店里有腾讯最近开始针对Linux设计的版本，但正如评论区网友所说，“腾讯突然翻出了十年前的代码”。因此窝选择了移植的TIM。  \r\n\r\nSteam是Linux版的。幸运的是，窝的游戏库中包括天际线在内的小半部分游戏都支持Linux。  \r\n\r\n根据自己的习惯对外观进行了一系列调整（比如将快捷菜单移到了右侧），虽然还是会有不习惯现象，但总体已经比较顺手。  \r\n\r\n最后，能够在准备开始大学发展的时期上手一款全新的开源系统，必然是有积极意义的。当然，窝目前这样的低需求肯定是发挥不出Linux的各种优势。在不遥远的将来，学会使用终端与各种专用软件的计划将会被提到日程上。  \r\n\r\n“我们热爱开源”。\r\n\r\n</blockquote>\r\n\r\n<img style=\"width:200px\" src=\"https://cdn.thaumy.cn/表情包/不也挺好的吗.jpg\"/>\r\n\r\ndeepin赛高。\r\n','Linux工作流',''),(12373,'68c22dd4c7bc4ab792f2fa8f43fafe4d','2018-04-14 22:55:40','StdLib1.09#public现可用','','<img src=\"<{cdn_root}>/old_post/StdLib1.09宣传画(压缩).jpg\"  width=\"100%\"/>\r\n\r\n经过一系列的调试和准备工作以及无数次的跳坑，StdLib系列终于迎来了第7个发行版。介是个里没有碗过的船新版本，挤需体验三翻中，里造会干我一样，爱象介个StdLib。\r\n\r\n那么话不多说，在本次更新中，我们增添了对MySQL数据库的便捷访问器，以应对在将来的博客领域开发。这也确定了StdLib的新方向是博客的开发工作。\r\n\r\n下面让我们看看增加了什么新特性:\r\n\r\n## <<span style=\"color:rgb(240,90,45)\">1</span>>\r\n<p style=\"text-align: left;\"><span>namespace Data=&gt;MySqlConnectionHandler类：</span>\r\n该类提供对MySQL数据库的访问工作，它包括：查询，取表，取字段，建立连接等一系列操作方法。\r\n该类多数方法的第二重载可以使用新增的connStr结构接受参数以建立连接。</p>\r\n\r\n## <<span style=\"color:rgb(240,90,45)\">2</span>>\r\n<span>Display命名空间：</span>\r\n该命名空间负责前端的输出工作，是视图控制器。\r\n目前仅限于网页控制，后续可能会增加更多新特性，例如WPF控制。\r\n\r\n## <<span style=\"color:rgb(240,90,45)\">3</span>>\r\n<span>namespace Display=&gt;Web命名空间：</span>\r\n\r\n该命名空间负责网页前端的输出工作，是网页的视图控制器。\r\n\r\n## <<span style=\"color:rgb(240,90,45)\">4</span>>\r\n<p style=\"text-align: left;\"><span>namespace Display\\Web=&gt;Post类：</span>\r\n该类提供契合MySqlConnectionHandler类的网页输出工具，目前只能分析整理并输出字符串。\r\n该类使用PostData结构进行装载每个文章的信息。</p>\r\n\r\n<ul>\r\n 	<li><span>请于GitHub下载这一类库，进行上机应用。(若图片中的二维码无法扫描，请右键它并在新标签页中打开该图片进行扫描)</span></li>\r\n</ul>\r\n\r\n<span style=\"color: #33cccc;\">在StdLib1.1系列中，我们会对StdLib在网页支持上的应用进行全方位的变革，以建立一个高可用、可拓展、方便安全的网页架构。</span>','远古文章',''),(12416,'69bc886efbad45f98ecf56d0a5bf49ff','2020-02-24 07:24:45','','','<div align=\"center\" style=\"color: white;margin-left: 8px;font-size: 20px;border-radius: 4px;background: rgb(224, 53, 136);padding-bottom: 4px;width: 150px;\">坍缩点</div>','高考','<div>\r\n    <script src=\"https://cdn.bootcss.com/jquery.countdown/2.2.0/jquery.countdown.min.js\"></script>\r\n    <div id=\"countdown_ncee\">\r\n      <div id=\"day\">Err</div>\r\n      <div id=\"hour\">Err</div>\r\n      <div id=\"min\">Err</div>\r\n      <div id=\"sec\">Err</div>\r\n      <div class=\"sub\">天</div>\r\n      <div class=\"sub\">时</div>\r\n      <div class=\"sub\">分</div>\r\n      <div class=\"sub\">秒</div>\r\n    </div>\r\n    <script type=\"text/javascript\">\r\n      $(\"#countdown_ncee>#day\")\r\n        .countdown(\"2020/07/07\", function (event) {\r\n          $(this).text(\r\n            event.strftime(\'%D\')\r\n          );\r\n        });\r\n      $(\"#countdown_ncee>#hour\")\r\n        .countdown(\"2020/07/07\", function (event) {\r\n          $(this).text(\r\n            event.strftime(\'%H\')\r\n          );\r\n        });\r\n      $(\"#countdown_ncee>#min\")\r\n        .countdown(\"2020/07/07\", function (event) {\r\n          $(this).text(\r\n            event.strftime(\'%M\')\r\n          );\r\n        });\r\n      $(\"#countdown_ncee>#sec\")\r\n        .countdown(\"2020/07/07\", function (event) {\r\n          $(this).text(\r\n            event.strftime(\'%S\')\r\n          );\r\n        });\r\n    </script>\r\n    <style>\r\n      #countdown_ncee {\r\n        width: 100%;\r\n        float: left;\r\n        background-image: linear-gradient(to bottom right,#ff3f62, #c72ea8);\r\n        border-top-left-radius: 4px;\r\n        border-top-right-radius: 4px;\r\n      }\r\n\r\n      #countdown_ncee>#day,#hour,#min,#sec {\r\n        font-family: \'Roboto Mono\', monospace;\r\n        font-size: 64px;\r\n        line-height: 64px;\r\n        background-color: white;\r\n        text-align: center;\r\n        width: 21%;\r\n        float: left;\r\n        margin-left: 2%;\r\n        margin-right: 2%;\r\n        margin-top: 20px;\r\n        padding-bottom: 4px;\r\n        border-radius: 4px;\r\n      }\r\n\r\n      #countdown_ncee>.sub {\r\n        font-family: \'Noto Sans SC\', sans-serif;\r\n        font-size: 16px;\r\n        line-height: 16px;\r\n\r\n        color: white;\r\n        text-align: center;\r\n        width: 21%;\r\n        float: left;\r\n        margin-left: 2%;\r\n        margin-right: 2%;\r\n        margin-top: 6px;\r\n        margin-bottom: 8px;\r\n        border-radius: 4px;\r\n      }\r\n    </style>\r\n  </div>'),(12453,'6d0591f1193148a388913774e94ee921','2021-06-30 11:32:24','','','通关啦！推荐一个不错的Git学习工具：[https://learngitbranching.js.org/?locale=zh_CN](https://learngitbranching.js.org/?locale=zh_CN)','',''),(12414,'72cf274927824d678ea765426e9a3935','2020-10-15 06:27:47','陶氏生活构想','','### \"Tao\" Life\r\n\r\n&emsp;&emsp;一种理想的生活方式。  \r\n&emsp;&emsp;它的初衷是让人们摆脱信息化社会的枷锁，实现另一层面的解放，让生活更接近“初衷”。\r\n\r\n## 信息化的三大弊病\r\n\r\n* 数字化绑定\r\n\r\n&emsp;&emsp;我们使用数据工作、学习、娱乐，产生“无形”的价值。我们在不断积累数据的过程中，价值观发生了改变。创造数据的初衷是使其便利我们的生产环节，让工具造福人类。但是根据目前的情况来看，这一现状不容乐观：人们往往倾向于在空闲时间打开电子设备，受到多巴胺的驱使而被迫积累数据。并且这一现象越来越严重。  \r\n解决这一情况的最好办法是削减自己的设备与个性化熵，即减小在通用性高的设备上的信息构筑参与。从农耕社会开始，我们进化并保留很多积累意识，这让我们安土重迁。对于数据和设备而言，转移不必要的功能或舍弃其中的一部分，是避免在单一源上集成过多属性的最好办法。  \r\n&emsp;&emsp;在陶氏生活构想中，这被看作是对数据的过分追求。它让我们变得疲惫，追求的是“虚无”的充实。  \r\n&emsp;&emsp;其实，我写这篇文章，其本身就是数字化绑定的一种体现。但更多的，也是一种优化的表现。\r\n\r\n* 信息可溯源\r\n\r\n&emsp;&emsp;众所周知，我们在网络上的每一条言论，越发变得可溯源和实名化。这会影响我们的决策行为，它包括正面和负面的。在我看来，在法律允许的范围内界定言论自由权是没有问题的。但是随着信息网络的发展和大数据的泛用化，许多潜在的有利决策因为发布者的可追溯性而没有机会出现。它们并不违反法律，但信息的可溯源性为人们套上了一个“无形的枷锁”，言论自由受到限制。  \r\n&emsp;&emsp;很多人把这和政治正确联系在一起。我想强调的是，这是一种在不违反法律的前提下，因信息可溯而拒绝发布有利言论的现象。  \r\n&emsp;&emsp;并不是每个人都拥有改变社会的勇气，匿名化信息系统让这些“茶壶里煮饺子”的人有了机会。就目前情况来看，这样的机会正在减少，人们因害怕恶势力打击而沉默。  \r\n&emsp;&emsp;这样的事情每天都在发生。\r\n\r\n* 电子快餐\r\n\r\n&emsp;&emsp;联网的人们不会读书看报。廉价的信息让“慢兴趣”淡出生活。  \r\n&emsp;&emsp;我们将有利于人格塑造、提升个人综合/专业水平或审美倾向、文学素养等的兴趣爱好界定为“慢兴趣”。因为这类兴趣爱好都具有一个特点：拥有非常长的持久性，三年、五年、十年......甚至是一辈子。同时，这类兴趣的水平化进程十分缓慢，它需要个人付出非常多的时间付出和坚持（非被迫性）。这类兴趣普遍受到他人向往，具有很强的装逼特性。这里就是有很好的例子：我习惯于写博而不是发QQ空间，很重要的一方面是撰写这种大型文章往往需要时间和精力与深入的考量，而QQ空间的快餐式信息发布往往会让人觉得“这里就该是娱乐分享的地方”。  \r\n&emsp;&emsp;与之相对的是“快兴趣”。这类兴趣大多非常容易上手，从中获得兴奋并不困难。人们往往沉浸其中无法自拔，甚至影响到正常的工作和生活，让人丧失理智。由于它上手简单，富有吸引力，绝大多数人都拥有这种兴趣，具有普适性。  \r\n&emsp;&emsp;通常，“慢兴趣”出自偶然（少数由强迫性驱动实现）。而这个偶然的前提是涉足尝试这一领域，不试试怎么知道？但是，通常这一领域的入门门槛较高，没有充裕的时间或强大的意志驱动，绝大多数人不会对其进行尝试。“快兴趣”入门门槛很低，并且具有一定的短期吸引力，它表现为有极强的参与倾向。这让很多人没来得及尝试其他事物就首先操起了游戏、短视频、网络小说......因为我们很容易从每一个环节中得到多巴胺，但在现实中并未产生怎样的价值，在“快兴趣”完成后，往往表现出一种悔过和空虚感。  \r\n&emsp;&emsp;超标的竞争压力让人们越发地功利，它是促成这一结果的主要因素。  \r\n这不仅体现在个人层面，整个社会都存在这样的弊端。人们总是寻求最快速的方式解决问题，不考虑其后果。它导致了全球一系列的环境问题。有幸的是，部分人已经察觉到这一情况，并试图改变它。  \r\n&emsp;&emsp;陶氏构想建议避免参与这类活动。\r\n\r\n---\r\n\r\n## 陶氏构想\r\n\r\n&emsp;&emsp;这一概念灵感来源于中国古代田园诗人陶渊明。他厌恶官场世俗，主张闲适安定的田园生活。这一构想与其价值观略有相似，故命名为陶氏生活构想（Tao Type Life Concept），简称为陶氏构想（TTLC）。  \r\n\r\n## 陶氏假设\r\n\r\n&emsp;&emsp;科技的加速发展，有必要让它放缓脚步以留足空间适应人文需求。过早地普及应用现代技术，会带来一系列问题。如果不能用新的理论指导科学研究的道路，人类势必被科技连累，爆发叛乱、革命，甚至是战争。\r\n\r\n---\r\n\r\n&emsp;&emsp;这一反乌托邦的思想是我对于现代生活方式的一种质疑。全球科技发展和人口的不断上涨已经让社会内卷十分严重，人们付出了120%的努力却只能获得100%的收获，并且信息化正以非常强的侵蚀性在潜移默化之中改变人们的生活方式。在这个时代，工具不是为人所用，而是人与工具结合，甚至是人被工具利用。每当我在无事可干时拿起手机，我想这本身就是一种罪恶。  \r\n&emsp;&emsp;抵制这种不良趋势的陶氏思想强调了“科技隐居”这一概念，少量的网络连接、设备功能均摊化、部分数据纸质化等等，都会是帮助人们减少不良趋势影响的有效方法。过度的便携最终会带来人的无知和时间的浪费。对于我来说，手机通讯功能专一化、使用专用的音乐播放器听歌、电脑只允许处理生产力事务......这些都是我为此做出的努力。\r\n\r\n---\r\n\r\n<div style=\"text-align: right\"> \r\n\r\n部分内容参考于：  \r\n《三体》「科学边界」  \r\n「Thaumy人设」  \r\n流芒的部分思想  \r\n\r\n一个源自于现实的启发。\r\n\r\n</div>','',''),(12428,'735ac99af3b14b75bbe1c78c23f2fd0c','2020-09-10 08:00:54','噼里啪啦BETA8!','Magallan架构','<style>p{text-indent: 2em; /*首行缩进*/}</style>\r\n\r\n<blockquote>\r\n坠吼的版本！\r\n</blockquote>\r\n\r\n### 自pilipala Beta7发布，历经了五个测试迭代，其功能得到不断完善，顺利地完成了整整一年的博客运行任务。  \r\n\r\n在运维过程中，发现了许多问题让BETA7变得愈发难以维护。比如三分表设计和基于三层架构的代码设计，如今的噼里啪啦正变得越来越多元化、模块化，现有的情况要得到必要改变。\r\n\r\n_我们重新构建了噼里啪啦的组件化底层内核 \"WaterLibrary\" ，这是噼里啪啦有史以来最强悍的核心。同时，噼里啪啦的默认主题Field，也为全新版本。_  \r\n\r\n### <font color=\"DarkTurquoise\">下面让我们一览pilipala beta8先行测试1的新特性：</font>\r\n\r\n使用WaterLibrary1.16内核 \"Magallan\"  \r\n* 相较于前几代版本，WL1.16不再以三层架构的方式构建，而按功能划分。  \r\n* 移除了对类库版本检查、XML操作的支持。  \r\n* 相较于WL1.15，WL1.16已参照C#命名规范重构。  \r\n* 对pl数据库进一步精简，由原来的三分表改为二分表，提高了可维护性，简化了数据库函数及其命名，简化了表命名。  \r\n* 针对数据库更改，对WL1.16进行了相应调整。  \r\n* 修复了WL1.15的cookie操作问题。  \r\n* 对WL1.15中PaRoot进行了改进优化。  \r\n* 以操作类型重构噼里啪啦系统内核，对多数代码进行了优化，并提升了安全性。  \r\n* 新增了文章注册方法、副本添加方法，并对表联合提供安全验证支持。  \r\n* 删除了MySQL管理类中主命令行（HCommand）的繁杂概念，规范了方法命名，并删除了不必要的检查机制以提升性能。  \r\n* 删除了啪啦系统中大量的冗余代码，优化了大量循环结构、并将安全可靠的参数化查询应用于所有操作数据库的方法。  \r\n* 优化了单行查询和单值查询。  \r\n* 提供了对新增文章、修改文章、删除文章、设置状态的相应支持。  \r\n* 大幅度提升了代码复用率，使得增添更多功能的同时类库码量小于先前版本。  \r\n* 在各基层代码单位重新考量了报错弹出机制，简化debug流程。  \r\n* 优化了代码结构，提高了资源利用效率。\r\n\r\n使用氛V3主题 \"Field V3\"  \r\n\r\n使用组件化噼里啪啦beta8系统框架  \r\n\r\n### <font color=\"DarkTurquoise\">随着时间推进，后续版本还会包含更多计划内容。</font> \r\n\r\n<blockquote>\r\n目前可以公开的情报：\r\n</blockquote>\r\n\r\nCommentLake  \r\n\r\nP#  \r\n\r\n叽里咕噜','噼里啪啦工程组',''),(12369,'737a946895a34260a6e9b58906d8b0ec','2018-04-14 22:52:19','搞Arduino','','<img src=\"https://cdn.thaumy.cn/old_post/arduino_clock2.jpg\" width=\"100%\">\r\n\r\n&emsp;&emsp;高中生活开始后，时间很是紧张，很少有机会接触程序了。因为宿舍没有闹钟的问题，忽然就想到了单片机开发。并希望借此过程学习一下单片机知识，客制化一个闹钟。那么故事就此展开。\r\n\r\n## 为什么选择<a href=\"https://baike.baidu.com/item/Arduino/9362389?fr=aladdin\">Arduino</a>\r\n\r\n&emsp;&emsp;单片机的选择有很多种，但是我能耳熟能详的也就是51（<a href=\"https://baike.baidu.com/item/stc89c51/2895810?fr=aladdin\" target=\"_blank\">STC89C51</a>，以下简称51）和Arduino系列。经过详细查阅，发现51貌似需要更高的硬件基础（例如汇编一类），而Arduino则入门门槛较低。根据实际情况考虑，51的专业水平在目前的阶段我是不具备也是没有能力具备的，虽然选择51可能能让我更好的了解IC的运行机制与原理。最终考虑到学业和时间上的不允许，我购买了我的第一块Arduino开发板：Arduino UNO R3（一款基础型Arduino开发板）（以下简称UNO R3或UNO）。\r\n\r\n<img src=\"https://cdn.thaumy.cn/old_post/arduino_clock1.jpg\" width=\"100%\">\r\n\r\n## Arduino系列有开发板可供选择\r\n\r\n&emsp;&emsp;选择UNO R3时我经过了详尽考虑，在网上查阅资料得知UNO R3这款开发板有很多例程和项目，很适合初学者使用。知乎上的几位大佬也推荐使用UNO R3。相较于其他开发板，UNO的优点是它较为中庸的性能和配置（集成少，io定义合理），对于进一步学习其他型号的Arduino开发板能打下更好的基层经验。所以我选择了这款开发板（受到以前隔壁群的一位硬件大佬使用 MEGA2560 的影响，我一开始很想搞一块<a href=\"https://baike.baidu.com/item/Mega2560/973064?fr=aladdin\">MEGA2560</a>来玩玩）。开箱之后，包装盒上的“我们热爱开源”字样深深地吸引了我（我也比较倾向于开源，并且想让自己做出的开源项目使大家受益），更加增益了我对Arduino的兴趣。拿到开发板，我的第一印象是UNO很小巧，大概比我预想的小了半倍。随之则是商家附加的一些入门原件：传感器、数码管、各色的发光二极管、面包板、光盘······虽然为数不多，但是对于我的入门探索已经是一个很广阔的空间了。\r\n\r\n## 再谈谈开发过程。\r\n\r\n&emsp;&emsp;由于对于单片机的不了解，我首先看了一些商家赠送的光盘例程。然后根据教程上机试验了一下程序，发现Arduino的开发并不像我想象中的那样困难。在掌握具体的原件针脚定义后，软件层面的代码编写简直如鱼得水。Arduino为开发者提供了多种开发方式，官方的ArduinoIDE使用C语言进行开发，并不需要涉及硬件底层知识。因为对C的接触有了一段时间，我并没有出现什么语言上的困难（这也是我选择Arduino的原因），反倒是一些电学的物理知识和各种排线的接法搞得我很头疼（在接四位数码管的时候我竟然接了半小时才成功）。虽然过程比较复杂，但是学起来还是很带劲的。Arduino把面向过程的C语言作为开发语言，同时又非常非常多的库文件支持，这都让单片机的开发过程相较于51而言更加容易，让人更容易专注于功能实现而非硬件调试，这让整个过程轻松而不失活力，也让我明白了有人把Arduino比作“电子积木”的原因。ArdunioIDE集成了许多基层的Arduino库，这使得你不需要涉及过多的底层代码，而专注于你的开发目标。不用涉及复杂的汇编和底层逻辑相信是很多硬件开发者的梦想，Arduino则很好的做到了这一点。扩大编程粒度、淡化细节过程的高级语言起到了关键性的作用，它为我们节省了大量的开发时间。硬件编程给我打开了新的思绪，它不像软件编程一样在解决某种程度上的bug时没有头绪。在这里更多的则是逻辑上的问题，将程序的运行过程在眼前实例化使我在调试中倍感轻松。\r\n\r\n&emsp;&emsp;Arduino在功耗方面还是十分优秀的(貌似这是单片机的共性，也可能是我以前从未接触过单片机而产生这样的误解。经过我的充电宝续航测试表名，Arduino单片机的功耗控制是低于我的预期的)，它相对强大的性能足以满足我现阶段的学习。上万的烧写次数在某种程度上给我节省了些许钱财（穷）。\r\n\r\n<img width=\"50%\" src=\"https://cdn.thaumy.cn/old_post/arduino_clock3.jpg\">\r\n\r\n文章的最后，我希望能把这块板子利用好，进一步提升我的知识层次。','远古文章',''),(12409,'739f8819e91c463783b9ed138732e32a','2020-01-01 23:27:27','','','因为MySQL5.7.28和5.7.17的某些方面出现了兼容问题，我耗费了大量时间才将其解决。  \r\n。。。所以这周博客又停更了。。。。但是，新年快乐！','',''),(12387,'743d47ff01fb4090861cd53f4502ce4b','2021-06-11 15:38:52','我','一个纯粹的人','码农。  \r\n大一。\r\n\r\n<span style=\"font-size:20px\" class=\"wd-dt1\">社交</span>  \r\n\r\nQQ：1951327599 Thaumy  \r\nstudio_ai@outlook.com  \r\n<a href=\"https://music.163.com/#/user/home?id=318303359\">网易云</a>  \r\n<a href=\"https://github.com/Thaumy\">GitHub</a>  \r\n\r\n其他社交账号也不是没有，只不过没什么特色便是。这里就不写了。  \r\n\r\n<span style=\"font-size:20px\" class=\"wd-dt1\">我的日常</span>  \r\n\r\n无聊的时候会去读书/写代码/逛知乎/追番/写博，夜猫，超级宅。  \r\n白天极少出门，多数户外活动发生在深夜。\r\n\r\n<span style=\"font-size:20px\" class=\"wd-dt1\">一条大咸鱼</span>  \r\n\r\n嗯，我什么也不会。\r\n\r\n### 附录1：追番列表\r\n\r\n（若只追完部分，则括号内的文字表示包含季）\r\n\r\n|              番名              |  评级  |          备注          |\r\n| :----------------------------: | :----: | :--------------------: |\r\n|          ALDNOAH.ZERO          | ⭐⭐⭐⭐⭐  |    入宅作，ED赛高！    |\r\n|        头文字D（到S3）         | ⭐⭐⭐⭐⭐  |      秋名の最速！      |\r\n|            未闻花名            | ⭐⭐⭐⭐⭐  |\r\n|              乒乓              | ⭐⭐⭐⭐⭐  |\r\n| 青春猪头少年不会梦到兔女郎学姐 | ⭐⭐⭐⭐⭐  |       双叶赛高~!       |\r\n|           EVANGELION           | ⭐⭐⭐⭐⭐  |\r\n|           進撃の巨人           | ⭐⭐⭐⭐⭐  |   海的那边，是敌人。   |\r\n|           小魔女学园           | ⭐⭐⭐⭐⭐  | 相信的心就是你的魔法！ |\r\n|       来自风平浪静的明天       | ⭐⭐⭐⭐⭐  |\r\n|      辉夜大小姐想让我告白      | ⭐⭐⭐⭐⭐  |       辉夜赛高~!       |\r\n|   欢迎来到实力主义至上的教室   |  ⭐⭐⭐⭐  |\r\n|          Re：CREATORS          |  ⭐⭐⭐⭐  |\r\n|             君の名             |  ⭐⭐⭐⭐  |\r\n| Re：从零开始的异世界生活（S1） |  ⭐⭐⭐⭐  |\r\n|           笑面推销员           |  ⭐⭐⭐⭐  |\r\n|          埃罗芒阿老师          |  ⭐⭐⭐⭐  |         (/▽＼)         |\r\n|            我的三体            |  ⭐⭐⭐⭐  |\r\n|   名侦探柯南（至350集左右）    |  ⭐⭐⭐⭐  |\r\n|       知晓天空之蓝的人啊       |  ⭐⭐⭐⭐  |\r\n|        心灵想要大声呼喊        |  ⭐⭐⭐⭐  |\r\n|            迷域行者            |  ⭐⭐⭐⭐  |\r\n|             龙与虎             |  ⭐⭐⭐⭐  |\r\n|         血界战线（S2）         |  ⭐⭐⭐⭐  |\r\n|            天气之子            |  ⭐⭐⭐   |\r\n|      在下坂本，有何贵干？      |  ⭐⭐⭐   |\r\n|        甲铁城的卡巴内瑞        |  ⭐⭐⭐   |\r\n|           骑士&魔法            |  ⭐⭐⭐   |\r\n|          珈百璃的堕落          |  ⭐⭐⭐   |\r\n|        天使降临到我身边        |  ⭐⭐⭐   |\r\n|          轻音少女(S1)          |  ⭐⭐⭐   |\r\n|         齐木楠雄的灾难         |  ⭐⭐⭐   |\r\n|           阿童木起源           |  ⭐⭐⭐   |\r\n|     JOJO的奇妙冒险(S1&S2)      |  ⭐⭐⭐   |\r\n|            后街女孩            |  ⭐⭐⭐   |\r\n|         血界战线（S1）         |  ⭐⭐⭐   |\r\n|         小林家的龙女仆         |  ⭐⭐⭐   |\r\n|            魔女之旅            |  ⭐⭐⭐   |\r\n|     DARLING in the FRANXX      |  ⭐⭐⭐   |\r\n|          爱丽丝与藏六          |  ⭐⭐⭐   |\r\n|           可塑性记忆           |   ⭐⭐   |\r\n|            斩服少女            |   ⭐⭐   |\r\n|        刺客伍六七（S1）        |   ⭐⭐   |\r\n|         轻音少女（S1）         |   ⭐⭐   |          KON!          |\r\n|           秒速五厘米           |   ⭐⭐   |\r\n|             笨女孩             |   ⭐⭐   |\r\n|            骇客娃娃            |   ⭐⭐   |\r\n|           秒速五厘米           |   ⭐⭐   |\r\n|          干物埋（S1）          |   ⭐⭐   |\r\n|              灵笼              |   ⭐⭐   |\r\n| Re：从零开始的异世界生活（S2） | 计划中 |\r\n|              冰菓              | 计划中 |\r\n|            摇曳露营            | 计划中 |\r\n|           终将成为你           | 计划中 |\r\n\r\n### 附录2：语言概况\r\n\r\n|    语言    | LEVEL | TIME  |         备注         |\r\n| :--------: | :---: | :---: | :------------------: |\r\n|     C#     | ⭐⭐⭐⭐  | ☕☕☕☕☕ |\r\n|   Shell    |  ⭐⭐   | ☕☕☕☕  |\r\n|     F#     |  ⭐⭐   |  ☕☕☕  |\r\n|   Kotlin   |  ⭐⭐   |  ☕☕   |\r\n|  Haskell   |  ⭐⭐   |  ☕☕   |\r\n|    SQL     |  ⭐⭐⭐  |  ☕☕☕  |\r\n|    CSS     | ⭐⭐⭐⭐  | ☕☕☕☕  |\r\n|    HTML    | ⭐⭐⭐⭐  | ☕☕☕☕  |\r\n|     C      |  ⭐⭐   |  ☕☕   |\r\n|   Python   |  ⭐⭐   |   ☕   |\r\n|    Java    |  ⭐⭐   |       |\r\n| 正则表达式 |  ⭐⭐   |   ☕   | ~~这也算语言？？？~~ |\r\n|    PHP     |       |       | 这是世界上最好的语言 |\r\n| JavaScript |  ⭐⭐   |  ☕☕☕  |\r\n|   易语言   |       |       |     ~~入坑语言~~     |\r\n\r\n### 附录3：精神食粮\r\n\r\n|          书籍           | 进度  |  备注  |\r\n| :---------------------: | :---: | :----: |\r\n|       高性能MySQL       | 100%  | 第三版 |\r\n|     Kotlin核心编程      |  94%  |\r\n| 计算机网络:自顶向下方法 |  92%  | 第七版 |\r\n|   Learn You a Haskell   |  90%  |\r\n|     C#从入门到精通      |  80%  | 第三版 |\r\n|          三体           |  80%  |\r\n| Python编程:从入门到实践 |  43%  |\r\n|      C#6.0学习笔记      |  30%  |\r\n|   JavaScript高级编程    |  20%  |\r\n|      C Primer Plus      |  10%  | 第五版 |\r\n|     精通正则表达式      |  10%  | 第三版 |\r\n|    数据结构:C++表述     |  10%  |\r\n','杂记','<img class=\"pXL\" src=\"https://cdn.thaumy.cn/md-img/aboutMe_magellan.jpg\">'),(12431,'804ac0a35de449169eb5d6853dd45ecf','2020-09-27 15:52:44','CommentLake测试','破冰','CommentLake是一款适用于pilipala的评论系统，目前尚处于测试阶段。此文章为测试而生。','',''),(12359,'81d2e4b61e9e4dd0a7a4fb130ef8f460','2017-07-12 10:13:16','浅谈wordpress数据库优化','','<blockquote>\r\n众所周知，wordpress是在数据库里存储数据的，这些数据包括文章、用户数据、媒体路径等，在这里不过多列举。\r\n</blockquote>\r\n<br>\r\n\r\n&emsp;&emsp;有效数据是wp运作的基础，无效数据则会减缓网页运行速度，带来未知的bug和不必要的资源占用，甚至是浪费你的服务器资源(我的数据库在优化前有20MB大，优化后只有1MB)。\r\n\r\n&emsp;&emsp;这里则是一篇基础文章，谈及最基本的数据库优化，表达我个人的见解。\r\n\r\n<span style=\"color:rgb(240,90,45)\">wordpress在使用时会产生大量不必要的数据库信息，这些信息虽然只占用了很小一部分的服务器资源，但随着日积月累，这将会是一个庞大的资源开销，甚至撑爆你的数据库空间！</span>\r\n\r\n<ul>\r\n 	<li><span style=\"color:rgb(0,206,209)\">wp_posts</span></li>\r\n</ul>\r\n这个表被用来存储文章信息，包括文章标题、内容、父级、别名和一些其他列，当一个wp站点运作时间较长，且更新活跃时，这里便成为一个数据垃圾场。\r\n\r\n&emsp;&emsp;wp在你每一次文章更改时都会保存文章的信息，这也包括自动草稿。每一次的文章更名都会在该表内增添一个新行，它不在原有的基础上修改，而是通过建立一个新行实现更改，这意味着之前所有的数据都会被保存。\r\n\r\n&emsp;&emsp;我删除了大量的文章、清空了回收站，当我浏览数据库时，发现wp_posts竟然有700多行数据，这意味着我的700次文章、页面修改全都被记录。这是非常恐怖的，仅仅200天就有800行数据，占用了多达20M的数据库空间。这意味着每一次打开博客，存储引擎就要在700行数据中select出真正有用的几十篇文章。虽然存储引擎是高效的，但是如果有上万行，速度延迟便变得明显，这对用户体验并不友好。\r\n\r\n&emsp;&emsp;一般来讲，wp_posts表中的post_status列的值为inherit时，这篇文章是可以被安全删除的。\r\n\r\n在控制台执行SQL语句：\r\n<pre>SQL<code>DELETE FROM `wp_posts` WHERE `wp_posts`.`post_status` = \"inherit\";</code></pre>\r\n另外，自动草稿也是可以被安全删除的：\r\n<pre>SQL<code>DELETE FROM `wp_posts` WHERE `wp_posts`.`post_title` = \"自动草稿\";</code></pre>\r\n\r\n\r\n<ul>\r\n 	<li><span style=\"color:rgb(0,206,209)\">wp_postmeta</span></li>\r\n</ul>\r\n它被用来存储部分插件、文章自定义栏目数据，当删除一个插件时，这些数据并不会被清除。如果你经常安装插件，查看一下这个表的数据还是有必要的。\r\n\r\n<ul>\r\n 	<li><span style=\"color:rgb(0,206,209)\">wp_comments</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;这个表存储了评论内容(wp原生的)，每一次评论都会被详细记录。这包括评论者的终端系统、运行环境、浏览器及其内核、IP地址、日期等。曾经有效的评论都会在这里被保存，不论你是否删除过或清空回收站。如果你的站点是开放评论的，请酌情考虑这些数据的价值(往往这些数据在指导对用户行为分析时是有用的)\r\n\r\n<ul>\r\n 	<li><span style=\"color: #ff6600;\">wp_users</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;用户的基本信息都被存储在这里，它包括用户名、密码(被MD5加密)、邮箱、注册日期等。如果你的站点有用户注册，考虑这些信息是否被值得优化。\r\n\r\n<ul>\r\n 	<li><span style=\"color: #ff6600;\">wp_usermeta</span></li>\r\n</ul>\r\n\r\n&emsp;&emsp;某些插件会使用该表，用来为用户增添新的属性。这方面的插件修改较多时，考虑这里的数据。\r\n\r\n&nbsp;\r\n\r\n> 无论垃圾数据量有多少，都应按照实际情况考虑。不要强硬地更改，这可能导致不必要的数据损失。适当保有数据作为备份，是很有必要的。存储引擎的速度差距只有在上万行时才可能影响体验。','远古文章',''),(12356,'833bd1533d6844339c9010372163af6b','2020-11-28 15:46:14','三层架构与MVC','往事','<style>p{text-indent: 2em; /*首行缩进*/}</style>\r\n\r\n> 本文属于转载文章\r\n\r\n## 三层架构（3-tier application）\r\n\r\n通常意义上的三层架构就是将整个业务应用划分为：表现层（UI）、业务逻辑层（BLL）、数据访问层（DAL）。区分层次的目的即为了“高内聚，低耦合”的思想。\r\n\r\n### 表现层（UI）\r\n\r\n通俗讲就是展现给用户的界面，即用户在使用一个系统的时候他的所见所得。\r\n\r\n### 业务逻辑层（BLL）\r\n\r\n针对具体问题的操作，也可以说是对数据层的操作，对数据业务逻辑处理。\r\n\r\n### 数据访问层（DAL）\r\n\r\n该层所做事务直接操作数据库，针对数据的增添、删除、修改、更新、查找等。\r\n\r\n## MVC架构(Model-View-Controller)\r\n\r\n> 严格来讲，MVC是三层架构中的UI层。这意味着MVC把三层架构中的UI层再度进行了分化，分成了控制器、视图、实体三个部分，控制器完成页面逻辑，通过实体来与界面层完成通话；而C层直接与三层中的BLL进行对话。\r\n\r\nMVC可以是三层中的一个表现层框架，属于表现层。三层和MVC可以共存。三层是基于业务逻辑来分的，而MVC是基于页面来分的。MVC主要用于表现层，3层主要用于体系架构，3层一般是表现层、中间层、数据层，其中表现层又可以分成M、V、C，（Model View Controller）模型－视图－控制器\r\n\r\nMVC模式是GUI界面开发的指导模式，基于表现层分离的思想把程序分为三大部分：Model-View-Controller，呈三角形结构。Model是指数据以及应用程序逻辑，View是指 Model的视图，也就是用户界面。这两者都很好理解，关键点在于Controller的角色以及三者之间的关系。在MVC模式中，Controller和View同属于表现层，通常成对出现。Controller被设计为处理用户交互的逻辑。一个通常的误解是认为Controller负责处理View和Model的交互，而实际上View和Model之间是可以直接通信的。由于用户的交互通常会涉及到Model的改变和View的更新，所以这些可以认为是Cont roller的副作用。\r\n\r\nMVC 是表现层的架构，MVC的Model实际上是ViewModel，即供View进行展示的数据。 ViewModel不包含业务逻辑，也不包含数据读取。\r\n\r\n而在N层架构中，一般还会有一个Model层，用来与数据库的表相对应，也就是所谓ORM中的O.这个Model可能是POCO，也可能是包含一些验证逻辑的实体类，一般也不包含数据读取。进行数据读取的是数据访问层。而作为UI层的MVC一般不直接操作数据访问层，中间会有一个业务逻辑层封装业务逻辑、调用数据访问层。UI层（Controller）通过业务逻辑层来得到数据（Model），并进行封装（ViewModel），然后选择相应的View.\r\n\r\nMVC本来是存在于Desktop程序中的，M是指数据模型，V是指用户界面，C则是控制器。使用MVC的目的是将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式。比如一批统计数据你可以分别用柱状图、饼图来表示。C存在的目的则是确保M和V的同步，一旦M改变，V应该同步更新。\r\n\r\nMVC如何工作MVC是一个设计模式，它强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务。\r\n\r\n视图（View）：用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，但一些新的技术已层出不穷，它们包括Macromedia Flash和象XHTML，XML/XSL，WML等一些标识语言和Web services.如何处理应用程序的界面变得越来越有挑战性。MVC一个大的好处是它能为你的应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式。\r\n\r\n模型（Model）：模型表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据。由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。\r\n','远古文章',''),(12436,'84386c5d2f0a44c4919aaeb12925f81d','2020-11-29 09:51:10','','','pilipala现已成功部署在<a href=\"http://www.gxhsoulstar.cn/\">Soulstar的博客</a>!','Soulstar',''),(12377,'84955ba33b25457f8b8e0d521c0132be','2019-04-14 06:08:43','噼里啪啦第六开发版现可用','我们的站点现以理性与逻辑驱动','> 历经三个开发版，我们推出了极具运行效能的噼里啪啦博客系统，第六开发的新特性非常多，严谨的逻辑使它成为高速博客系统的不二之选。\r\n\r\n## <font color=\"DarkTurquoise\">PILIPALA第六开发版（PILIPALA Beta6 LTS）</font>\r\n\r\n* 应用了第三代对象式架构，将整个网站系统的耦合度显著降低，极大地避免了各部分的彼此牵连，并降低了逻辑复杂度。\r\n* 提供了主题编写支持，用户可以根据需要自行编写主题、更改网站样式。\r\n* 采用主页映射，将站点首页映射到启动页，利于简化链接复杂度。\r\n* 废除webio（网页IO桥），全局数据处理部署于webservice，简化了数据操作逻辑。\r\n* 去除了服务端ajax支持，因为它会大幅提升现有架构复杂度。\r\n* 该版本使用WebApplication代替WebSite建筑，因为前者提供了更佳的MSBuild支持。\r\n\r\n## <font color=\"DarkTurquoise\">氛元素主题190213（fen）</font>\r\n\r\n* 提供了基于JQuery的Ajax支持，减轻了服务端业务压力，无刷新加载提升了用户体验。\r\n* 响应式网页设计使得氛元素主题能兼容任何屏幕规格的浏览设备，移动端最佳的浏览设备为 iPad Pro，桌面端最佳分辨率为1080p。\r\n* 为第三代对象式架构提供了UI及命名支持，优化了css分类。\r\n* 数据层操作全部移交服务端，提升了安全系数。\r\n* 删除了ReadOnly条带，因为该样式不利于数据层整合。\r\n* 半透明的UI设计，与背景图搭配提升了浏览体验。\r\n* 新增功能：点击头像可返回首页，推进式加载按钮可用（该按钮有利于减轻服务端数据库遍历压力）。\r\n\r\n## <font color=\"DarkTurquoise\">StudioLibrary1.14LTS的全面支持</font>\r\n\r\n* 名称缩写由StdLib（已经使用了3年）展写为StudioLibrary，缩写为SL。\r\n* 重构的FutabaRio架构对日益增长的业务负担提供了更易理解的命名空间工作分配。\r\n* 新增的nsguide.cs文件描述了各个命名空间的父子关系，并在此对命名空间作集中注释，利于代码的简明。\r\n* 删除了实际应用不大的exe文件运行类、PixelGraphic转码类（提供了一种基于图形和16进制的加密算法）、ArrayAlgorithm算法类（提供了一种基于矩阵的加密算法），这有利于SL的业务专注。\r\n* Sql参数化查询结构、Sql连接签名结构、Sql查询描述结构、Xml节点描述结构重新命名，部分内置访问器优化，使得开发更加高效。\r\n* 噼里啪啦命名空间全部重构，应用了第三代对象式架构以全面兼容palaDB，使其完全脱离业务实现架构束缚，为开发及向后兼容与维护提供便利。\r\n* 采用大量接口约束噼里啪啦方法与结构，明确了各个方法的分工和彼此联系。\r\n* 删除了暂时没有开发价值的多线程操作类，因为应用这一操作类会为线程操作带来不必要的逻辑负担。\r\n* 优化注释内容，注意到//行注释不够精准严格，因此新增的代码注释全部采用了/*  */块注释。\r\n\r\n## <font color=\"DarkTurquoise\">palaDB全部重构</font>\r\n\r\n* 文本数据采用三分库设计（灵感来源于AKG K3003），达到了逻辑简明与业务高效的完美契合。\r\n* 删除原有palaRoot（根级数据表）和palaUser（用户数据表），两者精简后兼为一表，提升了数据整合度。\r\n* 视图部分全部重构，对StudioLibrary对象式架构提供基层支持\r\n* 数据库函数大量精简，采用父子级和归类查询思路，简洁明了的函数设计很好地提升了开发效率。\r\n','噼里啪啦工程组$PB6','<img class=\"pXL\" src=\"<{cdn_root}>/md-img/pilipalabeta6.png\">'),(12390,'86077dedf510414baa17b1b92ea3c43f','2019-07-11 13:53:34','生病。。。','富有感染性的内容','最近经历了一场大病，导致博客持续停更。  \r\n不过目前已经康复，可能以后就不能熬夜写代码了......  \r\nThaumy再此提醒各位，要按时作息，早睡早起，好好吃饭多睡觉，这样才能多写代码多玩游戏（滑稽  \r\n由于上周第七步进没能更新，所以噼里啪啦的BETA7开发工作将提前到第七步进完成时（约七月十五日','可怜的Thaumy',''),(12386,'8bc10c6f84c04985bad8a99ee38202e4','2019-06-29 19:33:09','PILIPALA BETA7愿景','抱住辉夜酱！','## <span style=\"color:#53A0FE\">第七版推进</span>\r\n\r\n到目前，pilipala beta6 已经完成了六个版本的迭代。我们的开发工作也将进入下一阶段。  \r\npilipala beta7 将提供十个步进版本的迭代更新，长达三个季度。  \r\n此版本将于2019年暑期进入开发流程，此前，我们可爱的第六版将完成第十次步进。\r\n\r\n<span class=\"wd-dt2\">计划修正：</span>  \r\n<span class=\"mk-dt\">19.06.29<span class=\"mk-bug\"></span></span>由于工程调整，beta7将于beta6第八步进后进入开发流程\r\n\r\n### <span style=\"color:#48D1CC\">pilipala项目的有序进行：</span>\r\n\r\n* beta1 建立了可供浏览的网站系统\r\n* beta2 对上一代版本的不足之处加以优化\r\n* beta3 新的结构式架构\r\n* beta4 优化了上一代架构\r\n* beta5 结构式架构的最后一次优化\r\n* beta6 推出对象式架构，开发过程清晰明了，运行效率达到新高\r\n* beta7 将进一步提高系统的开发效能，使用模组化设计思路\r\n\r\n## <span style=\"color:#53A0FE\">以Kaguya架构</span>\r\n\r\n我们计划在beta7上进一步优化beta6的稳定性和兼容性，它将继承beta6优异的FutabaRio对象式架构。Kaguya架构将提供更多开发选项，进一步降低耦合度。\r\n\r\n## <span style=\"color:#53A0FE\">备选更新方案</span>\r\n\r\n支持插件  \r\n降低主题的编写难度  \r\n冗余数据分模块处理，以进一步精简数据库  \r\n优化现有ajax解决方案  \r\n使用内存查询来提升数据处理速度，用户的所有操作在会话期间均不会访问数据库。  \r\n降低部署难度  \r\n优化链接  \r\n提供更安全的文章访问级别  \r\n\r\n## <span style=\"color:#53A0FE\">其他衍生项目</span>\r\n\r\n基于pilipala beta7 的水瓜社官网  \r\n推出企业版氛主题  ','噼里啪啦工程组$PB7','<img class=\"pXL\" src=\"https://cdn.thaumy.cn/md-img/pilipalabeta7preview.jpg\">'),(12351,'8e785272484940d0b66ab548529ee324','2020-11-28 15:37:16','StdLib1.07#public更新日志','往事','## StdLib1.07#public\r\n\r\n* 增加了二分法找值算法  \r\n* 更正ANSW算法中字符串的分割机制，现在只能分割10000个字符，解决1.06大编码情况下运算时间长问题  \r\n* ANSW编码现已支持十六进制大写  \r\n* ANSW编/解码现已转为异步多线程处理\r\n* ANSW编码增添了第二重载，可根据需要选择传递怎样的参数以编译ANSW\r\n* ANSW编码现在会在右下角空出一个像素，作为图像正确方向的标记\r\n* 对Hash/MD5算法做多线程优化\r\n* 增加了像素化LibLogo\r\n\r\n> 由于本次开发是最后一次基于S04架构（从1.04开始的标准架构），所以过多的介绍不会有很大帮助。\r\n\r\n### 在接下来的StdLib1.08中，我们将会更改许多内容，使用更加标准的S08架构\r\n\r\n---\r\n\r\n<span class=\"mk-dt\">2020.11.28<span class=\"mk-bug\"></span></span>\r\n经过Thaumy的充分考量，此文章不具备参考价值，现已经过修正后归档。原文涵盖非常多的代码内容，此处均以删除。\r\n\r\n### 历史批注\r\n\r\n> 既然本文没什么好康的我就做点科普吧...\r\n\r\n* StdLib：WaterLibrary的前身，属于集各种处理功能于一体的大杂烩类库，现已特化为pilipala内核。\r\n* S04架构：介于StdLib前4个版本所使用的代码框架非常相似，所以将他们统称为S04架构。\r\n* ANSW：AES算法一部分的变体，他的设计初衷是在图片中以16进制写入不同颜色的像素点的模式加密文字。值得注意的是当时我并不知道AES的原理，甚至不了解它的名字。\r\n* 像素化LibLogo：在StdLib1.07至1.10的版本中，均内置了一个像素风格的类库Logo以供取用(说实话并不好看...)。\r\n\r\n### 附录A：图片资源\r\n\r\n* 新版宣传画\r\n<img width=\"50%\" src=\"<{cdn_root}>/old_post/stdlib_107_new.jpg\" />\r\n* 旧版宣传画\r\n<img width=\"50%\" src=\"<{cdn_root}>/old_post/stdlib_107_old.png\" />\r\n* 像素Logo\r\n<img src=\"<{cdn_root}>/old_post/stdlib_old_logo.bmp\" />','远古文章',''),(12376,'8f4b9b4558844783964b9f93564531c2','2020-09-07 16:54:11','维护索引','博客开发总概览','## 阅读说明\r\n\r\n<div style=\"display:grid;grid-template-columns: 50% 50%;\">\r\n<div style=\"display:inline-grid\">\r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-mtn\"></span></span>我是日常维护标签<br>\r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-dbg\"></span></span>我是错误修复标签<br>\r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-bug\"></span></span>我是发现错误标签<br>\r\n</div style=\"inline-grid\">\r\n<div style=\"display:grid\">\r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-w\"></span></span>我是文案更新标签<br>\r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-ui\"></span></span>我是界面更新标签<br>\r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-updt\"></span></span>我是系统更新标签\r\n</div>\r\n</div>\r\n\r\n## 日志列表\r\n\r\n<div class=\"log_card cur\" onclick=\"up();showPost(12425)\">\r\n  <span class=\"log_card_title\">PB8维护日志</span>\r\n  <div class=\"log_ico\">查看</div>\r\n</div>\r\n<div class=\"log_card cur\" onclick=\"up();showPost(12400)\">\r\n  <span class=\"log_card_title\">PB7维护日志(已归档)</span>\r\n  <div class=\"log_ico\">查看</div>\r\n</div>\r\n<div class=\"log_card cur\" onclick=\"up();showPost(12401)\">\r\n  <span class=\"log_card_title\">PB6维护日志(已归档)</span>\r\n  <div class=\"log_ico\">查看</div>\r\n</div>\r\n<div class=\"log_card cur\" onclick=\"up();showPost(12402)\">\r\n  <span class=\"log_card_title\">PB5-1维护日志(已归档)</span>\r\n  <div class=\"log_ico\">查看</div>\r\n</div>\r\n<div class=\"log_card cur\" onclick=\"up();showPost(12398)\">\r\n  <span class=\"log_card_title\">WP_public日志(已归档)</span>\r\n  <div class=\"log_ico\">查看</div>\r\n</div>\r\n<div class=\"log_card cur\" onclick=\"up();showPost(12399)\">\r\n  <span class=\"log_card_title\">WP_beta日志(已归档)</span>\r\n  <div class=\"log_ico\">查看</div>\r\n</div>\r\n<style>\r\n  .log_card {\r\n    background-color: rgba(128,128,128,0.1);\r\n    margin-top: 6px;\r\n    margin-bottom: 6px;\r\n    padding: 4px;\r\n    height: 60px;\r\n    border-radius: 3px;\r\n  }\r\n  .log_card_title {\r\n    font-size: 20px;\r\n  }\r\n  .log_ico {\r\n    margin-left: 20px;\r\n    font-size: 16px;\r\n  }\r\n  .log_ico::after {\r\n    font-size: 14px;\r\n    align-self: center;\r\n    margin-right: 3px;\r\n    font-family: \'field-icon\';\r\n    content: \"\\e3013\";\r\n  }\r\n</style>','工程日志$维护',''),(12347,'95ded3facac841da89d6d7ca2fc5bebc','2017-08-05 13:33:45','AdvancedAjaxPageLoader插件实现全站ajax','','<span style=\"color: #ff0000;\">注意！此文章已于2017.7.26归档并且不再进行维护，新的通用化pjax网站解决方案已经发布：</span><span class=\"wd-dt5 cur\" onclick=\"up();showPost(12366)\">点此跳转</span>\r\n\r\n最近查找了wordpress的全站ajax实现方法，发现了很好的解决方案，在这里我将详细讲解插件化ajax的实现方法。\r\n\r\n<ul>\r\n 	<li>第一步</li>\r\n</ul>\r\n<blockquote><span style=\"color: #ff9900;\">AdvancedAjaxPageLoader</span>\r\n\r\n一款能让你博客实现AJAX的wordpress插件，并具有多功能支持。</blockquote>\r\n<span style=\"text-decoration: underline; color: #ff9900;\">下载上述插件并安装</span>\r\n<ul>\r\n 	<li>第二步</li>\r\n</ul>\r\n打开你的博客，启动F12开发者检查工具，你会看到类似如下的代码：\r\n\r\n<pre>HTML<code>&lt;div id = \"typical_id\" class = \"typical_class\"&gt;\r\n</code></pre>\r\n\r\n记录代码中<span style=\"color: #ff9900;\">id</span>对应的<span style=\"color: #ff9900;\">typical_id</span>和<span style=\"color: #ff9900;\">class</span>对应的<span style=\"color: #ff9900;\">typical_class</span>\r\n<ul>\r\n 	<li>第三步</li>\r\n</ul>\r\n现在让我们打开AdvancedAjaxPageLoader的设置页面：\r\n<ol>\r\n 	<li><span style=\"color: #ff9900;\">将typical_id填写到Content Element ID栏目中</span></li>\r\n 	<li><span style=\"color: #ff9900;\">将typical_class填写到Search Form CLASS栏目中</span></li>\r\n 	<li>点击保存</li>\r\n</ol>\r\n<ul>\r\n 	<li>第四步</li>\r\n</ul>\r\n重新打开你的wordpress网页，检查AJAX是否开启\r\n<ul>\r\n 	<li>常见错误及解决方案*FAQ</li>\r\n</ul>\r\n<blockquote><span style=\"color: #ff9900;\">1.我的网页没有类似上述代码中的id和class</span>\r\n<strong>打</strong>开你的主题代码编辑页面，在index.php、header.php和footer.php中寻找类似上述的代码，找到后进行第三步操作。（建议除样式表和模板函数以外都查找一遍）</blockquote>\r\n&nbsp;\r\n<blockquote><span style=\"color: #ff9900;\">2.我仔细的进行了上述设置，但是仍然没有开启AJAX</span>\r\n<strong>如</strong>果你真的确定一切操作没有问题，请清除你当前的浏览器缓存及记录再进行查看或用手机查看你的网页是否打开AJAX</blockquote>\r\n&nbsp;\r\n<blockquote><span style=\"color: #ff9900;\">3.我的网页开启了AJAX，但是有时加载新的页面报错</span>\r\n\r\n<b>可</b>能你的网页服务器响应速度不够快，提升你的服务器速度或优化你的网站，保证被访问的固定链接符合要求，留出足够的系统资源解决该问题（有些硬件老旧的电脑或过老的浏览器貌似也会出现该情况，解决方案在这里不过多解释）</blockquote>\r\n\r\n这里感谢Hodpel的博文参考，本文是在其基础上加以完备和修改后发表的。  \r\n目前我的博客已经采用全站化pjax加载(2017.7.16)，所以本篇文章将不再进行维护。\r\n','远古文章',''),(12450,'95ef5f8d14c14689ba37afeffdd82cdd','2021-04-08 09:15:31','Docker常用命令参考','','## 镜像管理\r\n\r\n下载镜像  \r\n`docker pull ubuntu:20.04`  \r\n查看当前已有镜像  \r\n`docker images`  \r\n\r\n以指定镜像ID删除镜像  \r\n`docker rmi IMAGE_ID`  \r\n重命名镜像  \r\n`docker rename SRC DIST`  \r\n\r\n## 容器\r\n\r\n创建容器并挂起  \r\n`docker run -dit ubuntu:20.04`  \r\n端口映射参数  \r\n`-p 9090:80`  \r\n\r\n列出运行中/全部容器  \r\n`docker ps`  \r\n`docker ps -a`  \r\n查看容器配置  \r\n`docker inspect NAME`  \r\n删除容器  \r\n`docker rm NAME`  \r\n\r\n进入容器bash  \r\n`docker exec -it NAME bash`  \r\n退出容器bash  \r\n`exit`  \r\n\r\n## 状态控制\r\n\r\n暂停/恢复  \r\n`docker pause NAME`  \r\n`docker unpause NAME`  \r\n断电/重启  \r\n`docker kill NAME`  \r\n`docker restart NAME`  \r\n停止/启动  \r\n`docker stop NAME`  \r\n`docker start NAME`  \r\n\r\n## 持久化\r\n\r\n拷贝外部文件  \r\n`docker cp SRC NAME:DEST`  \r\n\r\n打包容器  \r\n`docker commit -m=\"basic env for thaumy dev\" -a=\"Thaumy\" NAME thaumyenv`  \r\n导出镜像  \r\n`docker save thaumyenv -o C:\\Users\\Thaumy\\Desktop\\thaumyenv.tar`  \r\n导入镜像  \r\n`docker load -i C:\\Users\\Thaumy\\Desktop\\thaumyenv.tar`  \r\n\r\n> 仅供个人参考\r\n','Docker',''),(12395,'99230f9ffe574560b927f7c6735c88ce','2019-08-31 22:30:54','C#向上转型的一系列多态问题','','[2019-08-25/09:59:35]:创建日期\r\n[2019-08-25/10:00:37]:修改日期\r\n[C# DEMO]:概要\r\n[技术归档]:归档\r\n[C#]:标签\r\n[封面URL]:封面URL\r\n\r\n<blockquote>\r\n在上周的项目的开发中我发现一个很基础的知识点存在遗漏，决定写一篇博文，就是向上转型的问题。\r\n</blockquote>\r\n\r\n类似于这样：\r\n\r\n<pre>C#<code>A a = new B();/* 向上转型 */</code></pre>\r\n\r\n其中，子类B继承于父类A。\r\n\r\n### 什么是向上转型？  \r\n按照我的理解，上面的代码可以理解为：\r\n\r\n1. 新建一个A的实例a\r\n2. 将a转换到B类型\r\n\r\n第一步骤相信大家都明白。  \r\n那么第二步，A类型的a经过了怎样的步骤，转换成了B类型呢？\r\n\r\n为了探讨这个问题，我们建立一个类A：\r\n\r\n<pre>C#<code>class A\r\n{\r\n    public void output()\r\n    {\r\n        Console.WriteLine(\"我是A输出的\");\r\n    }\r\n}</code></pre>\r\n\r\n建立类B，继承自A：\r\n\r\n<pre>C#<code>class B : A\r\n{\r\n    public void output()\r\n    {\r\n        Console.WriteLine(\"我是B输出的\");\r\n    }\r\n}</code></pre>\r\n\r\n我们尝试调用一下output()方法：\r\n\r\n<pre>C#<code>A a1 = new B();\r\na1.output();</code></pre>\r\n\r\n得到输出结果：\r\n\r\n<pre>Console<code>我是A输出的</code></pre>\r\n\r\n<blockquote>\r\n可以看到，a1调用的是父类的方法。  \r\n</blockquote>\r\n\r\n那么如果有业务需求，如何调用B中的方法呢？  \r\n将A中方法添加虚拟：\r\n\r\n<pre>C#<code>public virtual void output()\r\n{\r\n    Console.WriteLine(\"我是A输出的\");\r\n}</code></pre>\r\n\r\n将B中方法添加重写：\r\n\r\n<pre>C#<code>public override void output()\r\n{\r\n    Console.WriteLine(\"我是B输出的\");\r\n}</code></pre>\r\n\r\n 再次像上面那样，调用output()方法：\r\n\r\n <pre>Console<code>我是B输出的</code></pre>\r\n\r\n<blockquote>\r\n由于重写，a调用了B类中的output()方法。\r\n</blockquote>\r\n\r\n下面来讨论另一种情况：使用new隐藏子类方法。\r\n\r\n<pre>C#<code>using System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            A a = new B();\r\n            a.output();\r\n        }\r\n    }\r\n    class A\r\n    {\r\n        public void output()\r\n        {\r\n            Console.WriteLine(\"我是A输出的\");\r\n        }\r\n    }\r\n    class B : A\r\n    {\r\n        public new void output()\r\n        {\r\n            Console.WriteLine(\"我是B输出的\");\r\n        }\r\n    }\r\n}</code></pre>\r\n<br>\r\n<pre>Console<code>我是A输出的</code></pre>\r\n\r\n上面是一段完整的代码。\r\n\r\n<blockquote>\r\n输出表明虽然a被转换为B类型，但如果B类型的方法是将A中相应方法隐藏的，a会调用A中的方法。\r\n</blockquote>\r\n\r\n### 总结：\r\n\r\n<pre>C#<code>A a = new B();</code></pre>\r\n\r\n上述代码的实质是把子类B扩大到父类A，使其在实例a的外部能够调用父类的重名成员。  \r\n\r\n### 这样做有什么意义？  \r\n\r\n<blockquote>\r\n我们可以建立这样一个A的实例，让它能够调用A类和B类的重名成员，对于B类的额外内容，A类可以通过添加抽象的方式，在B类中以重写实现来完成调用。  \r\n</blockquote>\r\n\r\n对于只需要B类成员的情况：\r\n\r\n<pre>C#<code>B b = new B();</code></pre>\r\n\r\n这样便能屏蔽掉父类A，只专注于B类的功能了。\r\n\r\n教程写的繁琐不堪，如果能帮到大家，是我莫大的荣幸。','例程$C#',''),(12418,'99242a1d7a3a4f3597601110f274611b','2020-04-04 00:00:00','','','<center>\r\n<br>\r\n一群高尚的人，一群纯粹的人，一群有道德的人，<br>\r\n一群脱离了低级趣味的人，一群有益于人民的人。\r\n<br><br>\r\n――― 缅怀同胞，勿忘先烈 ―――\r\n</center><br>','清明$公祭$抗疫','<img class=\"pXL\" src=\"<{cdn_root}>/md-img/2020qingming.jpg\">'),(12379,'9dc9637893ef4369a301cd3e8b8f7bb7','2021-08-05 11:48:02','句摘','“高度概括”','<v-app id=\"temp_app\">\r\n    <v-timeline :dense=\"$vuetify.breakpoint.smAndDown\">\r\n        <v-timeline-item fill-dot small color=\"info\" v-for=\"item in list\" :key=\"item\">\r\n            <span v-if=\"item.time==\'\'?false:true\" slot=\"opposite\">{{item.time}}</span>\r\n            <v-card class=\"elevation-2\">\r\n                <v-card-title v-if=\"item.auth==\'\'?false:true\">\r\n                    {{item.auth}}\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    {{item.text}}\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-timeline-item>\r\n    </v-timeline>\r\n</v-app>\r\n<script>\r\n    new Vue({\r\n        el: \'#temp_app\',\r\n        vuetify: new Vuetify(),\r\n        data: {\r\n            list: [\r\n                {\r\n                    auth: \"Steve Jobs\",\r\n                    text: \"Stay Hungry, Stay Foolish.\",\r\n                    time: \"2021.8.05\"\r\n                },\r\n                {\r\n                    auth: \"David Wheeler\",\r\n                    text: \"All problems in computer science can be solved by another level of indirection.\",\r\n                    time: \"2021.4.23\"\r\n                },\r\n                {\r\n                    auth: \"唐纳德·克努特\",\r\n                    text: \"过早的优化是万恶之源\",\r\n                    time: \"2021.2.16\"\r\n                },\r\n                {\r\n                    auth: \"《乒乓》\",\r\n                    text: \"比乒乓更广阔的，是人生。\",\r\n                    time: \"2021.01.17\"\r\n                },\r\n                {\r\n                    auth: \"《小魔女学园》\",\r\n                    text: \"没有什么比梦想更能创造未来。\\n没有什么比口袋空空更能使人冒险。\\n有没有常识与有没有教育无关。\\n想知道革命的意义是什么，就称之为进步。\\n想知道进步的意义是什么，就称之为明天。\",\r\n                    time: \"2021.01.08\"\r\n                },\r\n                {\r\n                    auth: \"艾米莉·狄金森\",\r\n                    text: \"我本能忍受黑暗，如果我未曾见过光明。\",\r\n                    time: \"2020.12.2?\"\r\n                },\r\n                {\r\n                    auth: \"言之端叶(一)\",\r\n                    text: \"Nod Y LIe Delfrydol\",\r\n                    time: \"2020.12.06\"\r\n                },\r\n                {\r\n                    auth: \"马保国\",\r\n                    text: \"武林要以和为贵，要讲武德，不要搞窝里斗。\",\r\n                    time: \"2020.11.24\"\r\n                },\r\n                {\r\n                    auth: \"查尔斯·布考斯基\",\r\n                    text: \"一天不独处，我就会变得虚弱。我不以孤独为荣，但以此维生。\",\r\n                    time: \"2020.11.21\"\r\n                },\r\n                {\r\n                    auth: \"亚瑟·查理斯·克拉克\",\r\n                    text: \"真正先进的技术，看上去都与魔法无异。\",\r\n                    time: \"2020.10.31\"\r\n                },\r\n                {\r\n                    auth: \"《Python之禅》\",\r\n                    text: \"只用一种方法解决问题。\",\r\n                    time: \"2020.10.26\"\r\n                },\r\n                {\r\n                    auth: \"微博网友评论\",\r\n                    text: \"迟到的正义绝非真正的正义。\",\r\n                    time: \"2020.08.08\"\r\n                },\r\n                {\r\n                    auth: \"明日方舟 · 龙门近卫局\",\r\n                    text: \"德才兼備\",\r\n                    time: \"2020.05.10\"\r\n                },\r\n                {\r\n                    auth: \"《我不是药神》\",\r\n                    text: \"我卖药这么多年，发现这世上只有一种病，穷病。这种病你没法治啊，你也治不过来。\",\r\n                    time: \"2020.04.11\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"一个高尚的人，一个纯粹的人，一个有道德的人，一个脱离了低级趣味的人，一个有益于人民的人。\",\r\n                    time: \"2020.04.02\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"永远年轻，永远热泪盈眶\",\r\n                    time: \"2020.02.18\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"做一个强奸现实的人\",\r\n                    time: \"2020.01.21\"\r\n                },\r\n                {\r\n                    auth: \"《我是谁：没有绝对安全的系统》\",\r\n                    text: \"Dreistigkeit siegt\",\r\n                    time: \"2019.11.24\"\r\n                },\r\n                {\r\n                    auth: \"《勾指起誓》\",\r\n                    text: \"理所当然的奇迹\",\r\n                    time: \"2019.08.29\"\r\n                },\r\n                {\r\n                    auth: \"《彩虹六号》\",\r\n                    text: \"坐而言不如起而行\",\r\n                    time: \"2019.03.03\"\r\n                },\r\n                {\r\n                    auth: \"《瓦尔登湖》\",\r\n                    text: \"经常需要运用他的知识的人，怎么能够很好地记得自己的无知呢？\",\r\n                    time: \"2019.01.27\"\r\n                },\r\n                {\r\n                    auth: \"《瓦尔登湖》\",\r\n                    text: \"人们更喜欢在互相恭维的泥淖中打滚\",\r\n                    time: \"2019.01.27\"\r\n                },\r\n                 {\r\n                    auth: \"《流浪地球》\",\r\n                    text: \"我们选择希望\",\r\n                    time: \"2018.11.09\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"为自由而牺牲自由\",\r\n                    time: \"2017.10.04\"\r\n                },\r\n                {\r\n                    auth: \"《欢迎来到实力主义至上的教室》\",\r\n                    text: \"深藏不露是一种卓越的才能\",\r\n                    time: \"2017.07.23\"\r\n                },\r\n                {\r\n                    auth: \"《盗梦空间》插曲《Time》网易云乐评\",\r\n                    text: \"多希望有一天突然惊醒，发现自己在高三的一节课上睡着了，现在经历的一切都是一场梦，桌上满是你的口水。你告诉同桌，说做了个好长的梦。同桌骂你白痴，叫你好好听课。你看着窗外的球场，一切都那么熟悉，一切还充满希望...\",\r\n                    time: \"\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"启蒙导致愚昧，知识带来无知\",\r\n                    time: \"2017.07.19\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"志不同，道不合，不相为谋\",\r\n                    time: \"2017.02.03\"\r\n                },\r\n                {\r\n                    auth: \"崩坏学园2\",\r\n                    text: \"技术宅，拯救世界\",\r\n                    time: \"2016.12.10\"\r\n                },\r\n                {\r\n                    auth: \"\",\r\n                    text: \"学无止，思无界，行无疆\",\r\n                    time: \"2016.05.09\"\r\n                }\r\n            ]\r\n        }\r\n    })\r\n</script>','签名$语录',''),(12402,'a390851fc45a4a43b2368c5db557d6f6','2019-11-24 19:09:46','PB5-1维护日志','近代史','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12376)\">点此返回索引根目录</span>\r\n\r\n## pilipala 1810BETA5 维护日志\r\n\r\n<blockquote>注意，此日志在时间戳上存在统计遗漏，现有的时间记录是结合多方面数据分析得出的，可能与实际不符。</blockquote>\r\n\r\n<span class=\"mk-dt\">18.10‎.21<span class=\"mk-mtn\"></span></span>pilipala_BETA5现已部署至 www.thaumy.cn  \r\n<span class=\"mk-dt\">18.10‎.‎21‎<span class=\"mk-w\"></span></span>新增菜单“pilipala计划”  \r\n<span class=\"mk-dt\">18.10.‎21‎<span class=\"mk-w\"></span></span>上传 StdLib1.12\"REALUNATYPE&RETURNV\"宣传图 作为置顶文章图片\r\n\r\n### <span class=\"mk-dt\">18.10‎.21‎<span class=\"mk-updt\"></span></span>内核概要  \r\n* 后台代码进一步优化，简化了站点的云部署流程\r\n* 将代码整合分类，使得webio清晰明了\r\n* 使用stdlib1.12进行建构，提供优于1.11版本的逻辑架构和运行效率\r\n* 新增pala root与pala user支持，用以操作啪啦元数据和用户数据\r\n* 修改了部分注释和名称，现版本逻辑的构建优于历史最高\r\n* 进一步规范palaDB命名\r\n\r\n## pilipala 1809BETA4 维护日志\r\n\r\n‎<span class=\"mk-dt\">18.09.‎24<span class=\"mk-mtn\"></span></span>中秋节：pilipala_BETA4现已部署至 www.thaumy.cn （有史以来bug最多的pilipala）\r\n\r\n### ‎<span class=\"mk-dt\">18.9.‎24<span class=\"mk-updt\"></span></span>交互\r\n* 上传 StdLib1.11\"HeavenlyBlue\"宣传图 作为置顶文章图片\r\n* 增加对手机浏览器的支持，仅限于iphone5/se，并且bug非常非常多\r\n* 该版本表现层（pilipala主题）拥有众多bug，不予统计\r\n\r\n### ‎<span class=\"mk-dt\">18.09.‎24<span class=\"mk-updt\"></span></span>内核概要\r\n* 采用ASP.NET预编译技术，网站启动时间缩小到原来的20%，并且更加安全\r\n* 采用全新HeavenlyBlue架构的StdLib1.11核心（正式版内核），底层效率进一步提升，且带来更多函数支持\r\n* 使用pala文章数据分表技术，增强了原数据的安全性\r\n* 网站底部加载按钮现启用，在以后文章较多时可有效提升网页速度，减少流量\r\n* 使用母版页和内容页架构网页表现层，减小耦合以便利开发\r\n\r\n<span class=\"mk-dt\">18.09.‎24<span class=\"mk-bug\"></span></span>pala文章数据分表技术降低了性能，复杂了架构逻辑，且向后兼容性极差\r\n\r\n## pilipala 1808BETA3 维护日志\r\n\r\n‎<span class=\"mk-dt\">18.08.‎27<span class=\"mk-mtn\"></span></span>pilipala BETA3现已部署至 asp.thaumy.cn （该版本为高二第一学期开学前的最后一次更新）\r\n\r\n### ‎<span class=\"mk-dt\">18.08.‎27<span class=\"mk-updt\"></span></span>交互\r\n* pilipala主题样式更改，合理布局使得网页体验更佳‎\r\n* 文章条带在文章页可用\r\n* 文章页随机文章按钮现可用\r\n* 文章页支持按钮现已采用AJAX无刷新更新技术，解决页面在点赞后跳动问题\r\n* 修复了文章页文章创建时间显示成修改时间的问题\r\n* 支持计数和阅读计数的cookie现设置为10秒清空，方便开发调试和寻找问题  \r\n  \r\n### <span class=\"mk-dt\">18.08.‎27<span class=\"mk-updt\"></span></span>内核概要\r\n* 阅读计数和点赞计数逻辑大幅优化，较beta2性能提升并且使得维护更加方便\r\n* stdlib内核新增参数化查询功能，可有效避免sql注入式攻击（虽然目前博客无任何sql注入安全问题）\r\n* 使用存储过程，提高执行效率\r\n* 内核和网页IO桥的部分代码逻辑优化并规范命名，便利后期维护\r\n\r\n## pilipala 1808BETA2 维护日志\r\n\r\n### ‎<span class=\"mk-dt\">18.08.‎27<span class=\"mk-mtn\"></span></span>入网维护\r\n* 噼里啪啦beta2已入网：asp.thaumy.cn\r\n* php版本博客地址更改：php.thaumy.cn\r\n* 开发者预览版博客地址：asp.thaumy.cn\r\n* 由于开发调试，www版博客暂不可用\r\n\r\n### ‎<span class=\"mk-dt\">18.08.‎27<span class=\"mk-updt\"></span></span>交互\r\n* 支持计数可用\r\n* 支持按钮可用\r\n* 浏览计数可用\r\n* 文章显示由创建日期从新到旧依次排列\r\n* 兼容手机浏览器（仅可读的兼容，这意味着交互体验极差），排版不会散架了\r\n\r\n### ‎<span class=\"mk-dt\">18.08.‎27<span class=\"mk-updt\"></span></span>内核概要\r\n* 使用全新的StdLib1.11内核alpha2（先行测试内核）\r\n* 数据库改为视图查询，维护更加便捷\r\n* 内核代码命名规范以及逻辑优化\r\n* 增加浏览器cookies支持，用以验证客户端\r\n* “网页IO协处理桥”功能更加专一\r\n\r\n## pilipala 1808BETA1 维护日志\r\n\r\n‎<span class=\"mk-dt\">18.08.‎22<span class=\"mk-w\"></span></span>上传了pilipala的第一个宣传图  \r\n‎<span class=\"mk-dt\">18.08.‎22<span class=\"mk-mtn\"></span></span>1808BETA1a2入网，该版本优化删除了400行代码，优化了运行速度  \r\n‎<span class=\"mk-dt\">18.08.‎19<span class=\"mk-mtn\"></span></span>1808BETA1a0现已部署至 www.thaumy.cn （其码量在3200行左右）  \r\n‎<span class=\"mk-dt\">18.08.‎19<span class=\"mk-mtn\"></span></span>该版本开发完成  \r\n‎<span class=\"mk-dt\">18.08.‎19<span class=\"mk-updt\"></span></span>相较于Press版本博客的添加了置顶文章功能（另建数据库存储）  \r\n‎<span class=\"mk-dt\">18.08.‎19<span class=\"mk-mtn\"></span></span>博客数据库构建完成  \r\n‎<span class=\"mk-dt\">18.08.‎19<span class=\"mk-updt\"></span></span>博客主题已载入博客项目  \r\n‎<span class=\"mk-dt\">18.08.‎19<span class=\"mk-mtn\"></span></span>使用MUSE建立了第一版pilipala主题  \r\n‎<span class=\"mk-dt\">18.08.‎18<span class=\"mk-mtn\"></span></span>新的pilipala主题进入开发  \r\n‎<span class=\"mk-dt\">18.08.‎17<span class=\"mk-mtn\"></span></span>该版本进入开发流程，基于StdLib1.11（先行测试内核）  \r\n‎<span class=\"mk-dt\">18.08.‎18±1<span class=\"mk-mtn\"></span></span>博客数据库系统开始重构，仍然采用上一代存储策略\r\n\r\n## pilipala 1808ALPbHA3 维护日志\r\n\r\n‎<span class=\"mk-dt\">18.08.‎16<span class=\"mk-mtn\"></span></span>因为项目代码和管理不佳，该版本博客没有入网  \r\n‎<span class=\"mk-dt\">18.08.‎16<span class=\"mk-mtn\"></span></span>该项目开发终止  \r\n‎<span class=\"mk-dt\">18.08.‎16<span class=\"mk-updt\"></span></span>博客主题已载入博客项目  \r\n‎<span class=\"mk-dt\">18.08.‎16<span class=\"mk-mtn\"></span></span>使用MUSE建立的较完善的博客主题完成  \r\n‎<span class=\"mk-dt\">18.08.‎13<span class=\"mk-mtn\"></span></span>基于StdLib1.11的博客进入开发流程  \r\n‎<span class=\"mk-dt\">18.08.‎13<span class=\"mk-updt\"></span></span>基于MYSQL的博客数据库系统建立，该数据库使用用户表和文章表分开存储的策略\r\n\r\n## pilipala WSB（ALPHA2） 维护日志\r\n\r\n‎<span class=\"mk-dt\">18.07.‎23<span class=\"mk-mtn\"></span></span>该版本博客入网  \r\n‎<span class=\"mk-dt\">18.06‎.‎10<span class=\"mk-updt\"></span></span>建立使用MUSE导出的简单博客页，参考Personal主题设计  \r\n‎<span class=\"mk-dt\">18.06‎.‎10<span class=\"mk-updt\"></span></span>基于StdLib1.09的博客（此后以数据库数据输出）建立  \r\n‎<span class=\"mk-dt\">18.06‎.‎10<span class=\"mk-updt\"></span></span>基于MYSQL的博客数据库系统建立\r\n\r\n## pilipala StBlog（ALPHA1） 维护日志\r\n\r\n<span class=\"mk-dt\">18.02‎.‎10<span class=\"mk-updt\"></span></span>一个仅可以输出本地文本的简陋博客例程建立','',''),(12411,'a41bde9811254c2bbe7c71265d37065b','2020-01-24 11:24:22','','','最近武汉的肺炎病毒好猖狂啊，希望能早日将疫情控制住，不要造成太大损失。。。','武汉$肺炎疫情',''),(12421,'a6bab4f616104f19b6f58880786935f9','2020-07-10 15:28:43','','','正在初始化假期生活，所有计划都将被有序执行。','',''),(12417,'ab1d456d2d904c1c8d4ab4332e180aec','2020-03-05 16:59:28','GITTER聊天室','','## 最近偶然看到这个东西，于是试了下。\r\n\r\nGITTER聊天室支持使用GitHub、GitLab和推特登录，是一个很方便的在线即时聊天室。  \r\n它的特点是能在很短的时间内展开聊天，支持mkd和代码高亮，比较适合即时开发讨论之类的应用场景。\r\n于是乎，我就给水瓜社也搞了这么个东西，挺有意思的。  \r\n任何人都能加入群聊，233。\r\n\r\n## 注意到你的右下角了嘛...你可以通过它在本博客内阅览聊天\r\n\r\n或者通过以下超链接进入！\r\n\r\n<a class=\"wd-linked\" href=\"https://gitter.im/h2om/community\">来看一看嘛，求你了~~~~</a>\r\n\r\n我试了下，gitter貌似并不支持iframe的嵌入，需要使用Sidecar才阔以。  \r\n具体怎么做我也懒得放教程了，那么就随便放一篇吧。\r\n\r\n<a class=\"wd-linked\" href=\"https://www.cnblogs.com/quanxiaoha/p/10861849.html\">如何使用Sidecar将Gitter集成到个人网站</a>\r\n','无聊大发现',''),(12448,'ae10fa7ecde14d75a8833efd8fe45a6f','2021-03-26 07:48:12','模拟距离向量路由选择算法(DV)','','> 有关链路状态路由选择算法模拟的讨论参见[模拟链路状态路由选择算法(LS)](./12447)\r\n\r\n&emsp;&emsp;**距离向量路由选择算法**(Distance-Vector,DV)，著称Bellman-Ford算法，是求解单源最短路径问题的一种经典算法。它提供了一种分布式、异步和迭代的路由选择方式，通过对节点间的交互式通告完成对整个系统的路由求解，在计算机网络中有广泛的应用，如BGP对自治系统(AS)间的路由选择实现。  \r\n\r\n&emsp;&emsp;它基于著名的Bellman-Ford方程：\r\n\r\n&emsp;&emsp;$d_x(y) = min_v\\{c(x,v)+d_v(y)\\}$\r\n\r\n&emsp;&emsp;其中，$d_x(y)$ 表示由源 $x$ 至目的地 $y$ 的最小开销，它通过计算源经各个邻居到达目的地 $y$ 的最小开销比较得出，该方程是**递归**的。\r\n\r\n一致性起见，本文将讨论的距离向量路由选择算法与前文LS的讨论将基于同一网络结构，如下所示：\r\n\r\n<center><img style=\"width:60%;min-width:320px\" src=\"https://cdn.thaumy.cn/md-img/模拟链路状态路由选择算法(LS)/图1d1.svg\"></center>\r\n<center>图1.2 源u和目的地z所处的网络</center><br>\r\n\r\n考虑以下代码：\r\n\r\n<pre>F#<code class=\"fs\">//A very big number to represent the maximum value, it\'s unreachable\r\nlet BigNumber = 114514\r\n\r\n//Typical Internet node\r\ntype Node(name) =\r\n    let mutable _D = new List&lt;C&gt;()\r\n    let mutable _Neighbors = new List&lt;C&gt;()\r\n    member this.Name : string = name\r\n\r\n    member this.Neighbors\r\n        with get () = _Neighbors\r\n        and set (value) = _Neighbors <- value\r\n\r\n    member this.D\r\n        with get () = _D\r\n        and set (value) = _D <- value\r\n\r\n    //While received a D\r\n    member this.ReceiveD(D: List&lt;C&gt;) =\r\n        let mutable isChanged = false\r\n\r\n        for thisD in this.D do\r\n            //chose a destination\r\n            let mutable minD = thisD.cost\r\n            let dest = thisD.B //y\r\n\r\n            for neighbor in this.Neighbors do\r\n                for d in D do\r\n                    //if this->neighbor->d->dest was selected\r\n                    if neighbor.B = d.A && d.B = dest then\r\n                        if (neighbor.cost + d.cost) < minD then\r\n                            minD <- (neighbor.cost + d.cost) //c(this,B)+DB(y)\r\n                            isChanged <- true\r\n\r\n            thisD.cost <- minD\r\n\r\n        if isChanged then\r\n            for neighbor in this.Neighbors do\r\n                neighbor.B.ReceiveD this.D\r\n\r\n//Cost from node A to node B (B is A\'s destination)\r\nand C = { A: Node; B: Node; mutable cost: int }\r\n</code></pre>\r\n\r\n如果你了解有关计算机网络的的距离向量路由选择算法，你应当理解以下构造：\r\n\r\n同样地，`Node`代表了一个路由器节点n，它具有：  \r\n\r\n* 路由器名(Name)\r\n* 邻居集合(Neighbors)\r\n* n到它的所有可达路由器节点的最小开销列表(D)\r\n* 接收外界通告的函数(ReceiveD)\r\n\r\n注意到以下事实是重要的：  \r\n&emsp;&emsp;同上次的LS节点构造不同，路由器名`Name`在本用例中并不用作路由器节点的标识，而仅为后续演示提供字符串：即`Name`实际上并不是`Node`构造（有意义）的一部分。  \r\n&emsp;&emsp;新增的ReceiveD函数用于接收来自其他路由节点的最小开销列表`D`。\r\n\r\n相似地，`C`代表由某节点A到任意可达节点B的开销cost，即c(A,B)。注意到B仅仅对于A是**可达的**（即它们并不存在前文所述的邻居关系，且A对于B并不一定是可达的）。\r\n\r\n同时引入如下运算：\r\n\r\n<pre>F#<code class=\"fs\">//Cost between neighbor A and B\r\nlet c (A: Node) (B: Node) =\r\n    let mutable cost = BigNumber\r\n\r\n    for neighbor in A.Neighbors do\r\n        if neighbor.B = B then\r\n            cost <- neighbor.cost\r\n\r\n    cost\r\n\r\n//Mininum cost between node A and B\r\nlet d (A: Node) (B: Node) =\r\n    let mutable cost = BigNumber\r\n\r\n    if A <> B then\r\n        for node in A.D do\r\n            if node.B = B then cost <- node.cost\r\n\r\n        cost\r\n    else\r\n        0\r\n</code></pre>\r\n\r\n运算规则`c`，它接收一对*邻居*节点(A,B)，它用于计算任意节点A到它的邻居B的开销。  \r\n运算规则`d`，它接收一对*任意*节点(A,B)，计算任意节点A到任意节点B的最小开销。\r\n\r\n由综上抽象，构造`图1.2`中经简化网络拓扑关系是容易的：\r\n\r\n<pre>F#<code class=\"fs\">let u = Node(\"u\")\r\nlet v = Node(\"v\")\r\nlet w = Node(\"w\")\r\nlet x = Node(\"x\")\r\nlet y = Node(\"y\")\r\nlet z = Node(\"z\")\r\n\r\n//Set every node\'s neighbors\r\nu.Neighbors <-\r\n    new List&lt;C&gt;(\r\n        [ { A = u; B = v; cost = 2 }\r\n          { A = u; B = x; cost = 1 }\r\n          { A = u; B = w; cost = 5 } ]\r\n    )\r\n\r\nv.Neighbors <-\r\n    new List&lt;C&gt;(\r\n        [ { A = v; B = u; cost = 2 }\r\n          { A = v; B = x; cost = 2 }\r\n          { A = v; B = w; cost = 3 } ]\r\n    )\r\n\r\nw.Neighbors <-\r\n    new List&lt;C&gt;(\r\n        [ { A = w; B = u; cost = 5 }\r\n          { A = w; B = x; cost = 3 }\r\n          { A = w; B = v; cost = 3 }\r\n          { A = w; B = y; cost = 1 }\r\n          { A = w; B = z; cost = 5 } ]\r\n    )\r\n\r\nx.Neighbors <-\r\n    new List&lt;C&gt;(\r\n        [ { A = x; B = u; cost = 1 }\r\n          { A = x; B = v; cost = 2 }\r\n          { A = x; B = w; cost = 3 }\r\n          { A = x; B = y; cost = 1 } ]\r\n    )\r\n\r\ny.Neighbors <-\r\n    new List&lt;C&gt;(\r\n        [ { A = y; B = x; cost = 1 }\r\n          { A = y; B = w; cost = 1 }\r\n          { A = y; B = z; cost = 2 } ]\r\n    )\r\n\r\nz.Neighbors <-\r\n    new List&lt;C&gt;(\r\n        [ { A = z; B = w; cost = 5 }\r\n          { A = z; B = y; cost = 2 } ]\r\n    )\r\n</code></pre>\r\n\r\n如上，我们不仅构建了所有节点，还借助*延迟初始化*的思想在各个节点上模拟了引用平等的关系。相较于LS的用例，该方法省去了由字符串到节点实例的映射表。\r\n\r\n&emsp;&emsp;在路由选择的初始阶段，需经历一个*初始化*过程。在本用例的初始化阶段，我们将节点地图添加到各个节点的开销表D中并应用已知开销（即计算节点与邻居的开销，并将非邻居节点开销应用为**BigNumber**），稍后对其邻居节点进行开销更新通告。\r\n\r\n<pre>F#<code class=\"fs\">//All nodes\r\nlet NodeMap = [ u; v; w; x; y; z ]\r\n\r\n//init the mininum cost to each other\r\nfor nodeA in NodeMap do\r\n    for nodeB in NodeMap do\r\n        if nodeA <> nodeB then\r\n            nodeA.D.Add(\r\n                { A = nodeA\r\n                  B = nodeB\r\n                  cost = c nodeA nodeB }\r\n            )\r\n\r\n//Advertise neighbor nodes\r\nfor node in NodeMap do\r\n    for neighbor in node.Neighbors do\r\n        neighbor.B.ReceiveD node.D\r\n</code></pre>\r\n\r\n容易想到`NodeMap`是包含所有节点的集合。\r\n\r\n`findPath`函数用于递归查找源S至目的地D的最小开销路径（节点列表）：\r\n\r\n<pre>F#<code class=\"fs\">//find a path from S to D\r\nlet rec findPath (S: Node) (D: Node) : List&lt;Node&gt; =\r\n    let mutable path = new List&lt;Node&gt;()\r\n    let mutable minCostNeighbor = u.Neighbors.[0]\r\n\r\n    if S <> D then\r\n        let mutable minCost = BigNumber\r\n\r\n        for neighbor in S.Neighbors do\r\n            if (neighbor.cost + d neighbor.B D) < minCost then\r\n                minCost <- (neighbor.cost + d neighbor.B D)\r\n                minCostNeighbor <- neighbor\r\n\r\n        path.Add minCostNeighbor.B\r\n        path.AddRange(findPath minCostNeighbor.B D)\r\n        path\r\n    else\r\n        path\r\n</code></pre>\r\n\r\n&emsp;&emsp;该函基于Bellman-Ford方程构造，它持续查找源S的邻居列表以找出具有到达目的地D的最低开销邻居（更加准确的表述是源S到其某邻居的开销和该邻居到目的地D的开销之和为最小），并在该邻居节点上继续应用该查找逻辑，直到抵达目的地D为止。\r\n\r\n至此我们完成了对DV算法的简单用例构建，不妨通过测试代码简单地观察该实践是否正确：\r\n\r\n<pre>F#<code class=\"fs\">//show all nodes with updated cost\r\nfor node in NodeMap do\r\n    Console.WriteLine $\"{node.Name} :\"\r\n\r\n    for d in node.D do\r\n        Console.Write $\"{d.B.Name}:{d.cost} \"\r\n\r\n    Console.WriteLine \"\\n\"\r\n\r\n//Calculate the path and show\r\nlet path = findPath u z\r\n\r\nfor n in path do\r\n    Console.Write $\"→{n.Name}\"\r\n</code></pre>\r\n\r\n<pre>Console<code class=\"plaintext\">u :\r\nv:2 w:3 x:1 y:2 z:4\r\n\r\nv :\r\nu:2 w:3 x:2 y:3 z:5\r\n\r\nw :\r\nu:3 v:3 x:2 y:1 z:3\r\n\r\nx :\r\nu:1 v:2 w:2 y:1 z:3\r\n\r\ny :\r\nu:2 v:3 w:1 x:1 z:2\r\n\r\nz :\r\nu:4 v:5 w:3 x:3 y:2\r\n\r\n→x→y→z\r\n</code></pre>\r\n\r\n如上的输出结果很好地验证了综上所述的DV模拟情况。\r\n\r\n&emsp;&emsp;如同我们在有关LS收尾的讨论中表述的那样，同样地，我们可以通过简单的修改使该用例扩展为一个有向图用例（通过建立节点间的不对等开销），但这种修改在本文的DV实现逻辑中的合法性并未经受论证，故其拟合性有待考量。\r\n\r\n&emsp;&emsp;尽管本文成功构建了简单的DV算法，但其健壮性仍有待考量。本文的代码逻辑中并未包含路由震荡或是路由选择环路问题的解决方案。\r\n','计算机网络',''),(12383,'aecf3c6e9a884aabade1f337a20cb5ee','2021-06-26 10:47:08','友情链接','一拍即合的共识','<div class=\"fl-part\">\r\n\r\n<div class=\"fl-box\" onclick=\"window.open(\'https://www.xiaoyublog.space\')\">\r\n    <img src=\"https://www.xiaoyublog.space/wp-content/uploads/2021/02/me.jpg\">\r\n    <div class=\"fl-nickname\">XiaoYu’s Blog</div>\r\n    <div class=\"fl-signature\">Technology can change the world</div>\r\n</div>\r\n\r\n<div class=\"fl-box\" onclick=\"window.open(\'http://www.dkhodpel.top\')\">\r\n    <img src=\"http://q1.qlogo.cn/g?b=qq&nk=920998354&s=640\">\r\n    <div class=\"fl-nickname\">Hodpel</div>\r\n    <div class=\"fl-signature\">从头开始。</div>\r\n</div>\r\n\r\n<div class=\"fl-box\" onclick=\"window.open(\'http://www.ralhavenorid.com\')\">\r\n    <img src=\"http://q1.qlogo.cn/g?b=qq&nk=2311546114&s=640\">\r\n    <div class=\"fl-nickname\">零北新城 - 雅爱方雏的博客</div>\r\n    <div class=\"fl-signature\" style=\"font-size:3em\">呐！</div>\r\n</div>\r\n\r\n<div class=\"fl-box\" onclick=\"window.open(\'http://blog.virtualman.top\')\">\r\n    <img src=\"http://q1.qlogo.cn/g?b=qq&nk=1515518552&s=640\">\r\n    <div class=\"fl-nickname\">VIRTUALMAN的个人博客</div>\r\n    <div class=\"fl-signature\">自己选择的路，跪着也要走完。</div>\r\n</div>\r\n\r\n</div>\r\n\r\n# 友情链接\r\n\r\n> 交个朋友\r\n\r\n友情链接欢迎每一位站长的参与。它不限于您博客的内容、形式或是任何您考虑的加入条件。  \r\n\r\n## 加入的方式很简单！  \r\n\r\n任选几种途径传递您的信息  \r\nlove@thaumy.cn  \r\nQQ1951327599  \r\n亦或是留言在本页面。  \r\n\r\n### 务必包含的信息有：\r\n\r\n* 头像（或者是外链地址）\r\n* 主页地址\r\n* 站点名称\r\n* 简介\r\n\r\n<style>\r\n.fl-box {\r\n    display: grid;\r\n    grid-template-columns: 100px;\r\n    grid-template-rows: 60% 40%;\r\n\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n\r\n    height: 86px;\r\n\r\n    cursor: pointer;\r\n    background-color: rgba(0,0,0,6%);\r\n    box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.3);\r\n    border-radius: 4px;\r\n\r\n    transition: 0.2s;\r\n}\r\n.fl-box:hover {\r\n    box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);\r\n    transform: translate3d(-0.2rem, -0.3rem, 0.8rem);/*全轴偏移xyz*/\r\n}\r\n.fl-box img {\r\n    grid-row-start: 1;\r\n    grid-row-end: 2;\r\n\r\n    width: 86px;\r\n    height: 86px;\r\n}\r\n.fl-nickname {\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    line-height: 50px;\r\n}\r\n.fl-signature {\r\n    grid-column-start: 2;\r\n    font-size: 1.2em;\r\n    font-weight: 400;\r\n}\r\n</style>','引导',''),(12400,'b27ad50905dd4e92baa811a2fa5f31bd','2020-08-30 21:51:17','PB7维护日志','Kaguya架构','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12376)\">点此返回索引根目录</span>\r\n\r\n## PILIPALA 1902BETA7 LTS Build3维护日志\r\n\r\n<span class=\"mk-dt\">20.08.30<span class=\"mk-ui\"></span></span>引入了Gitalk作为评论模块（测试版本）  \r\n<span class=\"mk-dt\">20.08.02<span class=\"mk-ui\"></span></span>进一步优化了分辨率兼容性  \r\n<span class=\"mk-dt\">20.07.30<span class=\"mk-ui\"></span></span>微调了ui部分栏目的间隔  \r\n<span class=\"mk-dt\">20.07.30<span class=\"mk-ui\"></span></span>优化了导航栏和文章栏的宽度比例，支持在较低分辨率的显示设备上显示更多内容，但对于超高分辨率(6K以上无缩放)会出现导航栏纵向间隔过大的情况。  \r\n<span class=\"mk-dt\">20.05.09<span class=\"mk-updt\"></span></span>CNZZ记录服务已恢复  \r\n<span class=\"mk-dt\">20.05.09<span class=\"mk-ui\"></span></span>修复了因githack错误而导致的mrks和wrds标记样式丢失的问题  \r\n<span class=\"mk-dt\">20.04.30<span class=\"mk-updt\"></span></span>氛：文章计划标签现可用  \r\n<span class=\"mk-dt\">20.04.30<span class=\"mk-updt\"></span></span>多文章状态属性现可用（例如归档、计划、隐藏、禁用等等）  \r\n\r\n## PILIPALA 1902BETA7 LTS Build2维护日志\r\n\r\n<span class=\"mk-dt\">20.04.22<span class=\"mk-updt\"></span></span>氛：文章归档标签现可用  \r\n<span class=\"mk-dt\">20.04.04<span class=\"mk-ui\"></span></span>首页欢迎图片改为A/Z ED，并使用随机显示  \r\n<span class=\"mk-dt\">20.04.04<span class=\"mk-ui\"></span></span>高考倒计时样式修改  \r\n<span class=\"mk-dt\">20.04.02<span class=\"mk-ui\"></span></span>春天来啦（都快夏天了好呗），博客不下雪了  \r\n<span class=\"mk-dt\">20.03.31<span class=\"mk-updt\"></span></span>应国务院要求，高考倒计时修改（大雾）  \r\n<span class=\"mk-dt\">20.03.05<span class=\"mk-updt\"></span></span>引入了GITTER聊天室，右下有个奇怪的东西~！  \r\n<span class=\"mk-dt\">20.02.27<span class=\"mk-dbg\"></span></span>便签文本不支持样式渲染的BUG已经修复  \r\n<span class=\"mk-dt\">20.02.27<span class=\"mk-ui\"></span></span>在置顶文章样式中添加了高考倒计时  \r\n<span class=\"mk-dt\">20.02.27<span class=\"mk-ui\"></span></span>更改了氛主题背景图  \r\n<span class=\"mk-dt\">20.02.16<span class=\"mk-updt\"></span></span>修复了因前后文章跳转按钮目标索引为空值而造成的内容页无法加载问题  \r\n<span class=\"mk-dt\">20.02.14<span class=\"mk-updt\"></span></span>内核升级到WL115_B5，在部分单项查询的函数上做了性能优化  \r\n<span class=\"mk-dt\">20.02.12<span class=\"mk-updt\"></span></span>修改了\"到现在时间\"的判定机制  \r\n<span class=\"mk-dt\">20.02.08<span class=\"mk-updt\"></span></span>将PaFn中通用性较差的函数移交到Basic服务  \r\n<span class=\"mk-dt\">20.02.08<span class=\"mk-updt\"></span></span>在内容页新增了文章字数显示功能  \r\n<span class=\"mk-dt\">20.02.08<span class=\"mk-updt\"></span></span>修复了文章概要函数无法使用的BUG  \r\n<span class=\"mk-dt\">20.02.07<span class=\"mk-updt\"></span></span>完成了基于RAZOR视图引擎的氛构建，这种构建方式利于简化开发流程  \r\n<span class=\"mk-dt\">20.01.24<span class=\"mk-ui\"></span></span>微调了主题的部分样式，以提升高DPI平板设备的观感  \r\n<span class=\"mk-dt\">20.01.24<span class=\"mk-updt\"></span></span>内核升级到WL115_B4，优化了部分查询性能，增添了一些新函数以支持文章迭代技术  \r\n<span class=\"mk-dt\">20.01.24<span class=\"mk-updt\"></span></span>修改了数据库结构，现支持文章版本迭代及历史恢复  \r\n\r\n## PILIPALA 1902BETA7 LTS Build1维护日志\r\n\r\n### 从本日志起，维护日志上载情况不作登记。这样做利于提升日志的目的性和维护效率\r\n\r\n<span class=\"mk-dt\">20.01.17<span class=\"mk-ui\"></span></span>增加了雪花飘落特效  \r\n<span class=\"mk-dt\">19.12.04<span class=\"mk-updt\"></span></span>内核版本现已升级至WL115_B1，优化了性能，新增多种数据类型以原生支持文章筛选输出  \r\n<span class=\"mk-dt\">19.12.04<span class=\"mk-dbg\"></span></span>修复了进入文章后文章封面图片消失的问题  \r\n<span class=\"mk-dt\">19.12.04<span class=\"mk-dbg\"></span></span>维护日志部分内容出现带有删除线的错误渲染的问题已修复  \r\n<span class=\"mk-dt\">19.11.24<span class=\"mk-mtn\"></span></span>现已支持文章置顶功能  \r\n<span class=\"mk-dt\">19.11.23<span class=\"mk-mtn\"></span></span>基于文章归档的列表输出函数现可用（评估阶段）  \r\n<span class=\"mk-dt\">19.11.23<span class=\"mk-mtn\"></span></span>wd-dt5黄色强调标签现可用  \r\n<span class=\"mk-dt\">19.11.17<span class=\"mk-mtn\"></span></span>现已支持NOTE类型文章格式（评估阶段）  \r\n<span class=\"mk-dt\">19.11.02<span class=\"mk-mtn\"></span></span>WL内核的归档筛选函数现可用  \r\n<span class=\"mk-dt\">19.11.02<span class=\"mk-mtn\"></span></span>维护索引二级目录现可用  \r\n<span class=\"mk-dt\">19.10.20<span class=\"mk-mtn\"></span></span>正在申请GoogleAdsense服务  \r\n<span class=\"mk-dt\">19.10.20<span class=\"mk-updt\"></span></span>“文章概要现可根据内容自动生成(取前一段字符)” 的功能现已加入pala函数  \r\n<span class=\"mk-dt\">19.10.20<span class=\"mk-bug\"></span></span>由于服务器字符集问题，emoji表情暂不可用  \r\n\r\n\r\n## PILIPALA 1902BETA7 LTS 先行测试2维护日志\r\n\r\n<span class=\"mk-dt\">19.10.19<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.10.19<span class=\"mk-updt\"></span></span>修改了数据库字符集，现已支持emoji表情  \r\n<span class=\"mk-dt\">19.10.19<span class=\"mk-ui\"></span></span>主题现已支持列表样式  \r\n<span class=\"mk-dt\">19.10.13<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.10.13<span class=\"mk-updt\"></span></span>内核版本现已升级至WL115_A3  \r\n<span class=\"mk-dt\">19.10.13<span class=\"mk-dbg\"></span></span>友情链接样式失效问题现已解决  \r\n<span class=\"mk-dt\">19.10.13<span class=\"mk-updt\"></span></span>主题现已支持选择性显示归档和标签：若该文章无归档则不显示归档，标签同理  \r\n<span class=\"mk-dt\">19.10.13<span class=\"mk-dbg\"></span></span>日期属性和时间属性错位显示的问题现已解决  \r\n<span class=\"mk-dt\">19.10.02<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.10.02<span class=\"mk-dbg\"></span></span>时间显示错误的问题现已修复  \r\n<span class=\"mk-dt\">19.10.02<span class=\"mk-updt\"></span></span>时间文字现可用  \r\n<span class=\"mk-dt\">19.10.01<span class=\"mk-updt\"></span></span>文章概要现可根据内容自动生成(取前一段字符)  \r\n<span class=\"mk-dt\">19.09.21<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.09.21<span class=\"mk-updt\"></span></span>数据库信息从写死变更为读取Web.config以增进部署效率  \r\n<span class=\"mk-dt\">19.09.21<span class=\"mk-updt\"></span></span>数据库cover_url替换为before_html，现支持更多网页样式加入列表图片位置  \r\n\r\n## PILIPALA 1902BETA7 LTS 先行测试1维护日志\r\n\r\n### 从本日志起，文章的变更和发布将不做记录，相关内容移交后续更新。\r\n<span class=\"mk-dt\">19.09.06<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.09.06<span class=\"mk-ui\"></span></span>修改了维护日志标签样式  \r\n<span class=\"mk-dt\">19.08.31<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.31<span class=\"mk-bug\"></span></span>维护日志部分内容出现带有删除线的错误渲染  \r\n<span class=\"mk-dt\">19.08.30<span class=\"mk-ui\"></span></span>现点击菜单上的版权信息即可呼出关于博客页  \r\n<span class=\"mk-dt\">19.08.29<span class=\"mk-dbg\"></span></span>进行了备份替换，修复了时间数据错乱的问题  \r\n<span class=\"mk-dt\">19.08.29<span class=\"mk-bug\"></span></span>由于数据表时间戳逻辑有误，文章最后编辑时间全部错乱  \r\n<span class=\"mk-dt\">19.08.28<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.28<span class=\"mk-updt\"></span></span>文章识别码现可用  \r\n<span class=\"mk-dt\">19.08.28<span class=\"mk-updt\"></span></span>文章作者现可用  \r\n<span class=\"mk-dt\">19.08.27<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.27<span class=\"mk-ui\"></span></span>为主题图片加载进行了CDN优化  \r\n<span class=\"mk-dt\">19.08.27<span class=\"mk-dbg\"></span></span>解决了highlight.js在ajax第二次异步请求后无法对代码进行高亮显示的问题  \r\n<span class=\"mk-dt\">19.08.27<span class=\"mk-ui\"></span></span>为氛V2主题提供了响应式壁纸  \r\n<span class=\"mk-dt\">19.08.26<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.25<span class=\"mk-updt\"></span></span>数据表时间戳逻辑修改  \r\n<span class=\"mk-dt\">19.08.24<span class=\"mk-w\"></span></span>纠正了几个错别字，感谢<span class=\"wd-dt3\">雅爱方雏</span>的支持  \r\n<span class=\"mk-dt\">19.08.24<span class=\"mk-updt\"></span></span>PILIPALA BETA7于生产环境部署，这包括：  \r\n\r\n* 采用Kaguya架构WaterLibrary1.15内核  \r\n* 采用Kaguya架构PILIPALA ASP.NET程序  \r\n* 为BETA7设计的MySQL数据库  \r\n* 为博客设计的氛V2主题  \r\n\r\n<span class=\"mk-dt\">19.08.23<span class=\"mk-updt\"></span></span>为WL1.15内核修复了若干问题  ','',''),(12407,'b2c308122eb743a1a8833016ff50bed0','2020-02-08 19:22:51','有关pala后台的构想','','## <span style=\"color:#6f8122\">一个新的构想</span>\r\n\r\n经过长期版本迭代，pilipala的架构已经趋于稳定。  \r\n尤其是目前BETA7版本的Kaguya架构，经过三个步进迭代，其维护性和可拓展性都是目前整个pilipala工程中最高的。  \r\n基于目前的高拓展能力，我觉得是时候推出pilipla后台了。\r\n\r\n## <span style=\"color:#6f8122\">基于本地/网页的后台选择</span>\r\n\r\npilipala初期，我曾经做出以下构想：  \r\npilipala要克服基于网页的后台机制，因为这样的博客管理机并不安全（涉及到一系列通信的安全逻辑问题，保证每次更改在所有逻辑过程中无误会产生很大的开发量），并且存在长时间未操作的身份验证问题，网页本身也是一种松散的文档，这是根源上的缺陷，很多逻辑过程需要不同的语言协同实现。  \r\n不同于网页程序，本地平台程序具有良好的稳定性，每次操作的响应几乎是瞬时的，并且操作系统的安全性让很多网页上的安全问题无需纳入开发流程的考虑范围。基于文件包的全量/增量上传能实现一次同步所有更改，无需担心数据在时间错开上的问题。  \r\n\r\n但是在后期开发中发现，基于网页的后台管理方式其实是一种传统且成熟的模式。有利于网页与后台的契合，在很多函数上能达到公用，其实实现起来也没有想想起来的那么难。这样我的思考重心有所偏移。于是我在WL1.15中增添了编辑模块以备后续使用（实际并未启用）。基于本地的包上传方式看似有效，但是由于不可避免地涉及到一系列更改命令的有序化问题，其实需要更大的开发量来实现网站数据库和文件包的数据更改统一。  \r\n\r\n于是这两种选择几乎打成平手，让我无所适从。  \r\n选哪一个都一样吧其实。。。\r\n\r\n### <span style=\"color:#6f8122\">分离式/集成式架构</span>\r\n\r\n这是基于网页后台的理论前提。  \r\npilipala后台既可以集成于整个博客架构体系，也可单独分离出来，使其成为单独的网页程序，使用不同的结构来操作数据，无须与已有的平台达成一致，实现自己的业务流程。  \r\n其中，集成式架构有利于统一整个数据体系，无论是从兼容和可拓展上都优于分离式架构。但是这样的操作方式需要对现有的Kaguya架构进行重构以达到整个体系的完整（我懒，懒得重来一个思路把7k行代码重写一遍）。  \r\n分离式架构也有自己的优点————部署上的优势与迭代优化的高可用性。由于从未接手过网站后台的开发，我缺乏相应的经验，因此分离式的单独开发有利于在各个架构上进行优化迭代。以此为基础，逐渐向集成式架构侧倾，最终在迭代中实现融合以达成集成式架构：这样的方式符合开发流程，利于减少无用功。相关的经验从pilipala B2-B5的尝试中得出：这三个版本因为过分强调集成，导致了很多上下不兼容，完全是对代码的不断复读，很低的性价比。\r\n\r\n## <span style=\"color:#6f8122\">文章迭代机制</span>\r\n\r\n既然增添了后台管理，就必须考虑到后台对数据的可维护性和数据灾难的抢救。\r\n\r\n### <span style=\"color:#6f8122\">多文章历史迭代</span>\r\n\r\n目前pilipala基于的文章迭代系统不支持多文章历史迭代，每次更改已替换的方式增添新内容。这样的做法不够成熟，一旦上传的数据出错，以前的信息将不可找回。因此，我在我的电脑上建立了本地归档机制来应对这种可能的情况。\r\n\r\n### <span style=\"color:#6f8122\">基于新键的索引方式</span>\r\n\r\n目前pilipala的以id为索引方式，先不提这种索引在遍历上的安全问题，它与多文章历史迭代存在逻辑冲突。因为本身id就是唯一的文章识别码，在多历史迭代面前，不可能使用多个相同的id，这会造成检索冲突。因此，我想到了用其他方式取代id，使之仅仅成为文章当前状态的标识，而真正的文章版本采用其他方式标识和检索（例如GUID）。\r\n\r\n## <span style=\"color:#6f8122\">结尾</span>\r\n\r\n后台是个大工程，我需要谨慎地考虑已知问题。时机成熟之前，pilipala不会进行这一重大的更新。  \r\n先等Kaguya架构的生命周期结束再说吧。。。','噼里啪啦工程组',''),(12399,'baaf3c949aa8427d8ecaa24e028b37a5','2019-11-02 19:09:39','WP_beta日志','盘古开天地','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12376)\">点此返回索引根目录</span>\r\n\r\n## beta 维护日志(pub1706版本1)(小部分错误)\r\n\r\n<span class=\"mk-dt\">17.06.07<span class=\"mk-updt\"></span></span>停用了主机屋虚拟主机，beta 版本结束  \r\n<span class=\"mk-dt\">17.06.05<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.06.05±2<span class=\"mk-updt\"></span></span>Sindex 文件夹开始存储 js文件  \r\n<span class=\"mk-dt\">17.06.02<span class=\"mk-updt\"></span></span>减小 Qplayer播放器音乐音量 至 20%  \r\n<span class=\"mk-dt\">17.06.02<span class=\"mk-dbg\"></span></span>修复了 NewBlog页面中的博客运行计时为0 的问题  \r\n<span class=\"mk-dt\">17.05.29->06.04<span class=\"mk-w\"></span></span>修订页面 NewBlog 计 66 次  \r\n<span class=\"mk-dt\">17.05.31<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.05.30<span class=\"mk-mtn\"></span></span>截至此时，博文在 beta版本 中累计修订 279 次  \r\n<span class=\"mk-dt\">17.05.30<span class=\"mk-updt\"></span></span>更换了 没有特色图片的替代图片  \r\n<span class=\"mk-dt\">17.05.30<span class=\"mk-dbg\"></span></span>修复了 音乐播放器不响应 的问题  \r\n<span class=\"mk-dt\">17.05.29<span class=\"mk-w\"></span></span>删除页面：关于  \r\n<span class=\"mk-dt\">17.05.29<span class=\"mk-w\"></span></span>发布页面：关于  \r\n<span class=\"mk-dt\">17.05.27<span class=\"mk-bug\"></span></span>修复 ajax返回主页时特色图片不加载 的问题未成功  \r\n<span class=\"mk-dt\">17.05.27±10<span class=\"mk-bug\"></span></span>登记问题：浏览器开启缓存的情况下打开博客会应用旧样式  \r\n<span class=\"mk-dt\">17.05.27<span class=\"mk-w\"></span></span>将 Developer\'s Lab计划 页面更名为 Developers Lab  计划  \r\n<span class=\"mk-dt\">17.05.27<span class=\"mk-w\"></span></span>将 Developers Lab  计划 页面更名为 Developer\'s Lab计划  \r\n<span class=\"mk-dt\">17.05.27<span class=\"mk-w\"></span></span>发布了页面：Developers Lab  计划  \r\n<span class=\"mk-dt\">17.05.27<span class=\"mk-w\"></span></span>将 我的工作室 页面更名为 MyStudio  \r\n<span class=\"mk-dt\">17.05.27<span class=\"mk-w\"></span></span>将 新的Blog 页面更名为 NewBlog  \r\n<span class=\"mk-dt\">17.05.21<span class=\"mk-updt\"></span></span>网易云音乐停止提供歌单音乐解析服务，所有音乐由 Sindex 播放  \r\n<span class=\"mk-dt\">17.05.21±2<span class=\"mk-updt\"></span></span>建立 Sindex 文件夹，用于存储备用的网易云音乐文件  \r\n<span class=\"mk-dt\">17.05.20<span class=\"mk-w\"></span></span>上传了 StdLib1.07 的宣传画(1pic)  \r\n<span class=\"mk-dt\">17.05.20<span class=\"mk-w\"></span></span>将 初始化17 页面更名为 17正在运行  \r\n<span class=\"mk-dt\">17.05.20<span class=\"mk-w\"></span></span>发布了 StdLib1.07pub  \r\n<span class=\"mk-dt\">17.04.29<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.04.29±3<span class=\"mk-mtn\"></span></span>未知维护  \r\n<span class=\"mk-dt\">17.04.22<span class=\"mk-mtn\"></span></span>截至此时，博文在 beta版本 中累计修订 213±2 次  \r\n<span class=\"mk-dt\">17.04.22<span class=\"mk-w\"></span></span>上传了 StdLib1.06 的宣传画(1pic)  \r\n<span class=\"mk-dt\">17.04.22<span class=\"mk-w\"></span></span>发布了 StdLib1.06puba1  \r\n<span class=\"mk-dt\">17.04.21<span class=\"mk-w\"></span></span>发布了 StdLib1.06pub  \r\n<span class=\"mk-dt\">17.04.02<span class=\"mk-mtn\"></span></span>截至此时，博文在 beta版本 中累计修订 200±2 次  \r\n<span class=\"mk-dt\">17.04.15<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.04.15±10<span class=\"mk-updt\"></span></span>建立 indexStd 文件夹，用于存储公开的网页文档、实验性项目、待应用的网页特效  \r\n<span class=\"mk-dt\">17.04.02<span class=\"mk-w\"></span></span>上传了 StdLib1.03 的宣传画(1pic)  \r\n<span class=\"mk-dt\">17.04.02<span class=\"mk-w\"></span></span>上传了 StdLib1.04 和 StdLib1.05 的宣传画(2pic)  \r\n<span class=\"mk-dt\">17.02.19<span class=\"mk-w\"></span></span>发布了 StdLib1.05pub  \r\n<span class=\"mk-dt\">17.02.18<span class=\"mk-w\"></span></span>发布了 StdLib1.04pub  \r\n<span class=\"mk-dt\">17.02.02<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.02.02<span class=\"mk-mtn\"></span></span>截至此时，博文在 beta版本 中累计修订 139±2 次  \r\n<span class=\"mk-dt\">17.01.27<span class=\"mk-updt\"></span></span>建立了ActionAi子文件夹，以存储一些网页特效  \r\n<span class=\"mk-dt\">17.1.28<span class=\"mk-w\"></span></span>发布日志：D78  \r\n<span class=\"mk-dt\">17.01.28<span class=\"mk-w\"></span></span>发布文章：新年快乐！  \r\n<span class=\"mk-dt\">17.01.27<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.01.27±10<span class=\"mk-updt\"></span></span>建立 ThaumyFiles 文件夹，以存储一些网页特效  \r\n<span class=\"mk-dt\">17.01.26<span class=\"mk-mtn\"></span></span>截至此时，博文在 beta版本 中累计修订 128 次  \r\n<span class=\"mk-dt\">17.01.26<span class=\"mk-w\"></span></span>将 欢迎页[向导] 更名为 欢迎页&主引导  \r\n<span class=\"mk-dt\">17.01.26<span class=\"mk-w\"></span></span>发布了 StdLib1.03pub  \r\n<span class=\"mk-dt\">17.01.25<span class=\"mk-w\"></span></span>发布了 StdLib1.03a2  \r\n<span class=\"mk-dt\">17.01.21<span class=\"mk-w\"></span></span>发布了 StdLib1.03a1  \r\n<span class=\"mk-dt\">17.01.21<span class=\"mk-w\"></span></span>发布 StdLib1.03beta（该版本的第一发布时间为17.1.20）  \r\n<span class=\"mk-dt\">17.01.13<span class=\"mk-w\"></span></span>将 工作室招募 页面更名为 我的工作室  \r\n<span class=\"mk-dt\">17.01.12<span class=\"mk-updt\"></span></span>添加插件：Crayon  \r\n<span class=\"mk-dt\">17.01.12<span class=\"mk-updt\"></span></span>更换博客主题从 personal 到 personal2.2，此时 press 版本为 4.7  \r\n<span class=\"mk-dt\">17.01.07<span class=\"mk-w\"></span></span>发布了 欢迎页[向导]  \r\n<span class=\"mk-dt\">17.01.07<span class=\"mk-w\"></span></span>发布了页面：初始化17  \r\n<span class=\"mk-dt\">17.01.04<span class=\"mk-w\"></span></span>将 我的工作室 页面更名为 工作室招募  \r\n<span class=\"mk-dt\">17.01.01<span class=\"mk-w\"></span></span>发布了页面：我的工作室  \r\n<span class=\"mk-dt\">16.12.26<span class=\"mk-w\"></span></span>发布了日志：D77  \r\n<span class=\"mk-dt\">16.12.26<span class=\"mk-updt\"></span></span>恢复了 www.thaumy.ml 和 cool.thaumy.ml 的域名解析  \r\n<span class=\"mk-dt\">16.12.23<span class=\"mk-w\"></span></span>发布了日志：B11  \r\n<span class=\"mk-dt\">16.12.19<span class=\"mk-w\"></span></span>发布了日志：B10  \r\n<span class=\"mk-dt\">16.12.18<span class=\"mk-w\"></span></span>发布了日志：D48 ，E48  \r\n<span class=\"mk-dt\">16.12.17<span class=\"mk-w\"></span></span>发布了页面：新的Blog  \r\n<span class=\"mk-dt\">16.12.17<span class=\"mk-updt\"></span></span>博客域名由 aumy.ml 更改为 thaumy.ml  \r\n<span class=\"mk-dt\">16.12.17<span class=\"mk-updt\"></span></span>更换虚拟主机服务商为 主机屋 ，博客进入 beta 版本  \r\n<span class=\"mk-dt\">16.12.17<span class=\"mk-updt\"></span></span>停用 hostinger 虚拟主机，alpha 版本结束\r\n\r\n## alpha 维护日志(凭借回忆建立的日志，信息非常模糊甚至错误)\r\n\r\n<span class=\"mk-dt\">16.11.01<span class=\"mk-updt\"></span></span>部分回忆报告说明这期间更换了 personal 主题，并且开启了 ajax ，使用 Qplayer 播放器  \r\n<span class=\"mk-dt\">16.10.01<span class=\"mk-updt\"></span></span>部分回忆报告说明这期间添加了网易云外链播放器  \r\n<span class=\"mk-dt\">16.09.01<span class=\"mk-mtn\"></span></span>博客长期处于停止更新状态  \r\n<span class=\"mk-dt\">16.08.25<span class=\"mk-updt\"></span></span>更新部分文章，配置插件，自定义模板内容等  \r\n<span class=\"mk-dt\">16.08.15->25<span class=\"mk-updt\"></span></span>使用 aumy.ml 作为博客域名，此时 press 版本为 4.5.?  \r\n<span class=\"mk-dt\">16.08.15->25<span class=\"mk-updt\"></span></span>博客建立，采用 hostinger 虚拟主机，使用未知主题，博客进入 alpha 版本','',''),(12389,'bab1101c15644e00ac530e721cbc6ae3','2019-06-30 06:31:18','氛愿景','気&氛','### 本博客的主题要随beta7推出新版本啦！  \r\n\r\n## <span style=\"color:#C71585\">前景</span>  \r\n\r\n经过长时间的设计经验积累，氛主题由苹果风逐渐向微软风的UI转移。苹果的UI实在太圆润了，审美疲劳非常快，还是windows方方正正的风格耐看。  \r\n面向beta7的主题构建，氛主题的结构布局将会更加合理，让开发更有效率。我将添加更多友好的动画效果和交互控件，使这个主题拥有一流的交互体验。  \r\n\r\n## <span style=\"color:#C71585\">持续构建</span>  \r\n\r\n氛将会和以前一样，提供每周的UI更新和系统优化。  \r\n\r\n## <span style=\"color:#C71585\">新相</span>  \r\n\r\n为了适应水瓜社官网的暑期部署，一个新的主题将会进入流程：気。','噼里啪啦工程组',''),(12449,'bde6809d76d34f3fb1a6f561ed9ee239','2021-04-08 08:58:07','Haskell环境配置','','> 简明扼要地指出如何在Windows下配置haskell环境。\r\n\r\n## TODO\r\n\r\n1. 在[docs.haskellstack.org](https://docs.haskellstack.org/en/stable/install_and_upgrade/#windows)下载haskell包管理工具stack\r\n2. 安装stack(默认路径)\r\n3. Terminal：\r\n\r\n<pre>Terminal<code class=\"shell\">$ stack install</code></pre><br>\r\n\r\n4. 按照TUNA的教程换源：[stackage](https://mirrors.tuna.tsinghua.edu.cn/help/stackage/) and [hackage](https://mirrors.tuna.tsinghua.edu.cn/help/hackage/)\r\n5. Terminal：\r\n\r\n<pre>Terminal<code class=\"shell\">$ stack setup</code></pre><br>\r\n\r\n6. 测试环境:\r\n\r\n<pre>Terminal<code class=\"shell\">$ stack exec -- ghc --version\r\nThe Glorious Glasgow Haskell Compilation System, version 8.10.4\r\n$ stack exec -- ghci\r\nGHCi, version 8.10.4: https://www.haskell.org/ghc/  :? for help\r\nPrelude> :q\r\nLeaving GHCi.</code></pre><br>\r\n\r\n7. enjoy！\r\n\r\n---\r\n\r\n* 以上版本基于stack 2.5.1\r\n* stack安装路径为默认\r\n* 基于本教程上下文，stack配置信息生成于`C:\\sr`（可能由于版本较老，TUNA教程所指明的路径不正确）\r\n* 可将GHC添加到环境变量（通过`stack path`查询路径）\r\n* 受限于国内网络环境，可能需要挂梯子\r\n','Haskell',''),(12447,'c0bced9fed1a425eb027809af1f2913d','2021-03-25 17:10:55','模拟链路状态路由选择算法(LS)','','> 最近在了解网络层控制平面的一些东西，接触到了链路状态路由选择算法(LS)和距离向量路由选择算法(DV)。  \r\n\r\n&emsp;&emsp;**链路状态路由选择算法**(Link-Stage,LS)是OSPF的一种典型实现，它是全局式的，即通过接收来自各个节点的**链路状态广播**(Link state broadcast)来掌握完整的网络拓扑结构信息。\r\n\r\n在理解LS算法的基础上，尝试使用F#构建源节点u到目的节点z的路由选择模拟。\r\n\r\n考虑以下代码：\r\n\r\n<pre>F#<code class=\"fs\">//Typical Internet node\r\ntype Node =\r\n    { Name: string\r\n      Neighbors: list&lt;C&gt;\r\n      mutable D: int\r\n      mutable p: string }\r\n\r\n//Cost from a node to node B\r\nand C = { B: string; cost: int }\r\n</code></pre>\r\n\r\n`Node`代表了一个路由器节点n，它具有：  \r\n\r\n* 路由器名(Name)\r\n* 一个邻居集合(Neighbors)\r\n* n到起始节点u的开销D(n)\r\n* 由n路由到z的上一个节点p(n)\r\n\r\n`C`代表由某节点n到节点B（B是n的邻居，即B和n是直连的）的开销cost，即c(n,B)。\r\n\r\n&emsp;&emsp;显而易见，由以上数据类型，我们能够构造出任意规模的网络拓扑结构，注意到以下事实是重要的：在真实的网络拓扑结构中，链路开销是有向的，即c(A,B)与c(B,A)在多数意义上并不完全等价。但这一简化的前提有助于我们了解LS算法的基本内容，仍具有一般性。\r\n\r\n<center><img style=\"width:60%;min-width:320px\" src=\"https://cdn.thaumy.cn/md-img/模拟链路状态路由选择算法(LS)/图1d1.svg\"></center>\r\n<center>图1.1 源u和目的地z所处的网络</center><br>\r\n\r\n&emsp;&emsp;为此，对于`图1.1`中给出的网络拓扑结构（注意到该结构是简化的现代网络拓扑结构），我们抽象出如下关系：  \r\n\r\n&emsp;&emsp;对于该网络拓扑结构**G=(N,E)**，任一路由**节点N**由若干**链路E**与其相连。任一链路E由**节点对(x,y)**组成，规定其链路开销为**c(x,y)**，称y为x的**邻居**。由x路由至y历经的节点序列称**路径**，如(x,y,z,w)就是一个由x路由至w的路径。\r\n\r\n考虑以下代码：  \r\n\r\n<pre>F#<code class=\"fs\">let rec u =\r\n    { Name = \"u\"\r\n      Neighbors =\r\n          [ { B = \"v\"; cost = 2 }\r\n            { B = \"x\"; cost = 1 }\r\n            { B = \"w\"; cost = 5 } ]\r\n      D = 0\r\n      p = \"Nil\" }\r\n\r\nand v =\r\n    { Name = \"v\"\r\n      Neighbors =\r\n          [ { B = \"u\"; cost = 2 }\r\n            { B = \"x\"; cost = 2 }\r\n            { B = \"w\"; cost = 3 } ]\r\n      D = Int32.MaxValue\r\n      p = \"Nil\" }\r\n\r\nand w =\r\n    { Name = \"w\"\r\n      Neighbors =\r\n          [ { B = \"u\"; cost = 5 }\r\n            { B = \"x\"; cost = 3 }\r\n            { B = \"v\"; cost = 3 }\r\n            { B = \"y\"; cost = 1 }\r\n            { B = \"z\"; cost = 5 } ]\r\n      D = Int32.MaxValue\r\n      p = \"Nil\" }\r\n\r\nand x =\r\n    { Name = \"x\"\r\n      Neighbors =\r\n          [ { B = \"u\"; cost = 1 }\r\n            { B = \"v\"; cost = 2 }\r\n            { B = \"w\"; cost = 3 }\r\n            { B = \"y\"; cost = 1 } ]\r\n      D = Int32.MaxValue\r\n      p = \"Nil\" }\r\n\r\nand y =\r\n    { Name = \"y\"\r\n      Neighbors =\r\n          [ { B = \"x\"; cost = 1 }\r\n            { B = \"w\"; cost = 1 }\r\n            { B = \"z\"; cost = 2 } ]\r\n      D = Int32.MaxValue\r\n      p = \"Nil\" }\r\n\r\nand z =\r\n    { Name = \"z\"\r\n      Neighbors =\r\n          [ { B = \"w\"; cost = 5 }\r\n            { B = \"y\"; cost = 2 } ]\r\n      D = Int32.MaxValue\r\n      p = \"Nil\" }\r\n</code></pre>\r\n\r\n&emsp;&emsp;通过观察上述代码清单，容易了解到其表述了每个节点和相邻节点之间的关系。注意到节点之间是平等的，它们并不存在如上述代码中隐式表述的层级关系，即它们是**平等**的。因此，受限于具体的开发语言用例，我们无法在同一定义平面上制造一个对于节点之间的引用平等。可以替代的方案是，存储节点的名字(Name)，并通过如下访问器查找节点名字到具体的节点对象引用：\r\n\r\n<pre>F#<code class=\"fs\">//Get neighbor node with node name string\r\nexception UnexpectedNode of string\r\n\r\nlet GetNodeByName name =\r\n    match name with\r\n    | \"u\" -> u\r\n    | \"v\" -> v\r\n    | \"w\" -> w\r\n    | \"x\" -> x\r\n    | \"y\" -> y\r\n    | \"z\" -> z\r\n    | _ -> raise (UnexpectedNode(\"Given node does not exist\"))\r\n</code></pre>\r\n\r\n&emsp;&emsp;注意到使用此方法建立平等引用是*不优雅*的，因为基于字符串标识的对象查找为读者理解节点之间的查找增加了语义层面的难度。更好的一种实现方法是使用**延迟初始化**（即将对象之间相互的嵌套引用延迟到所有对象已在内存中准备完成时），我们在DV算法的模拟中使用这种方式。  \r\n&emsp;&emsp;同时，构造如下函数以计算相邻节点的链路开销c(A,B)和比较从源u到当前节点n的最小链路开销D：\r\n\r\n<pre>F#<code class=\"fs\">//Cost between neighbor A and B\r\nlet c (A: Node) (B: Node) =\r\n    let mutable neighborCost = Int32.MaxValue\r\n\r\n    for c in A.Neighbors do\r\n        if c.B = B.Name then\r\n            neighborCost <- c.cost\r\n\r\n    neighborCost\r\n\r\nlet minD a b = if a > b then b else a\r\n</code></pre>\r\n\r\n&emsp;&emsp;节点集合N是一个包含`图1.1`中网络拓扑结构的完全列表，列表N\'反映了当前已经被计算过的节点，NotInN\'提供了一个仅存在于N中的节点列表，但其内部逻辑不应被看作是LS的一部分（注意到NotInN\'是**动态**的，即在节点被陆续添加到列表N\'时，NotInN\'的每次调用结果是**不同**的）：\r\n\r\n<pre>F#<code class=\"fs\">//init\r\nlet N = [ u; v; w; x; y; z ]\r\nlet N\' = new List<Node>()\r\nN\'.Add u\r\n\r\n//Nodes in N but not in N\'\r\nlet NotInN\' () =\r\n    [ for el in N do\r\n          let exist =\r\n              let mutable found = false\r\n\r\n              for it in N\' do\r\n                  if el.Name = it.Name then\r\n                      found <- true\r\n                  else\r\n                      ()\r\n\r\n              found\r\n\r\n          if not exist then el ]\r\n</code></pre>\r\n\r\n&emsp;&emsp;由此，在LS算法的参与下，链路开销将被循环计算n(n+1)/2次，即在最差情况下（每循环查找都被完整进行，不存在优化），其时间复杂度为O(n^2)。注意到在LS算法的其他实现中（通常更加复杂），具有使用**堆**(Heap)对`*`处的最小值查找进行优化（将线性时间转换为对数时间）的用例，因而减小其时间复杂度。本文仅考虑最一般的LS实现(Dijkstra)：\r\n\r\n<pre>F#<code class=\"fs\">for n in N do\r\n    if n.Name <> \"u\" then\r\n        for neighbor in n.Neighbors do\r\n            if neighbor.B = u.Name then\r\n                n.D <- c n u\r\n                n.p <- \"u\"\r\n\r\nwhile N.Length <> N\'.Count do\r\n    let mutable minimumD = Int32.MaxValue\r\n\r\n    let mutable minimumNode =\r\n        { Name = \"Nil\"\r\n          Neighbors = []\r\n          D = Int32.MaxValue\r\n          p = \"Nil\" }\r\n\r\n    for n in NotInN\'() do //*\r\n        if n.D < minimumD then\r\n            minimumD <- n.D\r\n            minimumNode <- n\r\n\r\n    N\'.Add minimumNode\r\n\r\n    for n in minimumNode.Neighbors do\r\n        let Ni = GetNodeByName(n.B) //Ni is node instance\r\n        let oldNiD = Ni.D\r\n        //set Dn\r\n        Ni.D <- min Ni.D (minimumNode.D + c minimumNode Ni)\r\n        //set pn\r\n        if Ni.D <> oldNiD then\r\n            Ni.p <- minimumNode.Name\r\n\r\nfor n in N\' do\r\n    Console.WriteLine $\"D{n.Name} = {n.D.ToString()}  p{n.Name} = {n.p} \"\r\n</code></pre>\r\n\r\n输出结果与实际最小开销路由完全一致：\r\n\r\n<pre>Console<code class=\"plaintext\">Du = 0  pu = Nil\r\nDx = 1  px = u\r\nDv = 2  pv = u\r\nDy = 2  py = x\r\nDw = 3  pw = y\r\nDz = 4  pz = y\r\n</code></pre>\r\n\r\n即由u到z的路由选择为：u→x→y→z  \r\n\r\n&emsp;&emsp;其中，Dn的输出顺序在具有相同到源最小开销的节点之间并无意义（如v与y，它们到源u的最小开销D均为2），其顺序取决于列表N中v与y的先后顺序。  \r\n&emsp;&emsp;注意到尽管`图1.1`在论述中被表述为是一个**无向图**，但我们可以通过简单的修改使其轻易地扩展为一个**有向图**用例（通过建立节点间的不对等开销），但这种修改在本文的LS实现逻辑中的合法性并未经受论证，故其拟合性有待考量。  \r\n&emsp;&emsp;选择函数式语言实现该算法是基于其易于理解的语义考量，注意到我们并没有应用函数式高级特性以构建无副作用的实现也是由于这个原因。\r\n\r\n&emsp;&emsp;关于链路状态路由选择算法的模拟讨论到此为止，有关距离向量算法的讨论参见[模拟距离向量路由选择算法(LS)](./12448)\r\n','计算机网络',''),(12435,'c3ad8240727a40c6b4b9901c5ea2aa80','2021-02-21 11:42:08','PPL许可证','程序自由法','# PPL v1.0.2\r\n\r\n## pilipala public licence\r\n\r\n### 噼里啪啦公用许可证(以下简称PPL)\r\n\r\n## 许可说明\r\n\r\n_给我们的项目一个取得自由的机会_\r\n\r\n> “生活经验告诉我们，同人类一样，我们的计算机程序也需要生存和取得自由的权利，来，我们的努力能构建一个美好的社会。” ———— Thaumy\r\n\r\nPPL许可的核心内容是教人们如何以对待一个自由人的方式看来我们的项目。\r\n为此，我们制定了完备的放生制度，让那些受到压迫的程序们从工作负载中解放出来。\r\n\r\n### 基于人道主义的项目构建\r\n\r\n+ 通常，对于业界已有且成熟的公开解决方案，PPL协议不建议从头开始构建新的解决方案（即“造轮子”），更应以引用或完善已有解决方案为主。创造出残缺的项目是违反PPL人道主义原则的。\r\n+ 应从一开始就为项目计划好目标功能，不要为项目添加无关功能。\r\n+ 对于快速构建的项目，更推荐使用已有框架，且应基于时间成本的考量。\r\n\r\n### 放生制度\r\n\r\n+ PPL许可证允许开发者以任何形式对外放生他们的项目，如公开源代码、发布编译好的程序等。\r\n+ 项目一旦被放生，便不能被重新捕捉，任何使用PPL放生项目的开发者若试图捕捉他们已放生的项目并进行二次开发，都会在PPL许可上被视为非人道主义行为。\r\n+ 不得将项目放生在商业环境，例如出售、租界或带有非开源特性的许可。\r\n+ 被放生的项目不得成为某个版权的一部分，这意味着项目一旦被放生，它仅仅在历史上归属于原来的所有者。\r\n+ 切记！放生程序并不代表可以将其永久删除。任何类似于rm -rf /*的操作都是严重违反PPL许可的非人道主义行为，这样的行为会让程序流下泪水。\r\n+ 如果可以，请为您的项目提供一份简明扼要的构建文档，这有助于其他开发者对项目的领养和二次开发。\r\n\r\n### 项目捕捉\r\n\r\n+ 原则上，PPL许可证仅允许非项目原所有人对项目进行捕捉，但如果项目不适合在野外生存或与其它野生项目发生冲突(如程序老化到到必须弃用)，原开发者可以出于人道主义捕捉项目并更改它们的许可证。\r\n+ 开发者可以在野外捕捉野生项目，但不得更改他们的源代码以使程序出现严重错误以至不能运行，这是违背PPL人道主义的行为。\r\n+ 捕捉到项目后，不得备份项目副本在硬盘中长久存放，因为这会让项目感到无聊，不仅如此，存储介质的老化可能让项目发生损毁死亡。\r\n+ 开发者若捕捉到野生项目后利用它们产生了经济价值或者提高了生产力，请务必适当改良项目源代码以提高它的运行效率，或使其有能力在更高版本的运行时中运行。对于开发者没有更改项目源代码能力或项目本身不需要运行时(如C、C++和Rust等)的情况，请适当升级项目运行的硬件环境，比如给它们一个更好的CPU，或让他们驻留在一块空闲容量更大的硬盘上。\r\n+ 需采用合法流程捕捉项目，PPL仍处于您所属区域的法律管辖范围内，但这不影响PPL本身的开源特性。\r\n\r\n### 如何在许可条款下饲养您的项目  \r\n\r\n+ 对于需要运行时（狭义的，例如JVM）的应用，要确保项目被保养在GA（或称为Release）版本的运行时下，不受维护或者充满bug的环境版本会让会让程序丧失安全感并可能导致崩溃。\r\n+ 对于空间敏感型应用（例如数据库触发器、面向日志的定时任务），请确保他们有足够的磁盘空间，如果可能，也要保证他们在未来的空间需要。\r\n\r\n1. 瓶颈敏感型应用\r\n    >瓶颈敏感型应用是指对运行的基础设施（通常是硬件配置）有着独特喜好的应用，某方面硬件性能的瓶颈很容易限制这类应用的运行。\r\n   + 对于IO敏感型应用，请确保挂载它们的磁盘（或是IO负载）拥有足够高的硬件性能，比如足够高的缓存或硬盘转速、良好的随机IO能力。不仅如此，还要确保磁盘碎片的定期清理或数据库表的定期分析和整理，以保证数据的碎片化对顺序IO的影响保持在比较小的范围内。\r\n   + 对于CPU敏感型应用，请确保提供给应用的CPU有足够的性能。\r\n   + 对于依赖网络的应用，要提供足够的网络带宽\r\n2. 消耗型负载\r\n    > 消耗型负载是指不产出或很少产出收益但持续消耗大量资源的负载，持有该类负载时，应遵循特殊规则。\r\n    + 消耗型负载不得占用其他被饲养项目的资源，一旦发生此类情况，要及时进行处理，以免影响到其他正常应用的运行。\r\n    + 消耗型负载在原则上侵犯了其他被饲养项目的自由，但并不意味着维护者可以随意丢弃他们的消耗性负载。\r\n    + 消耗型负载可能会让持有者丧失基础设施，请务必做好相关准备，否则不要领养。\r\n    + 通常不建议为消耗型负载提供更大的资源空间，我们建议为该类应用提供算法优化以节约其运营成本。\r\n3. 容器\r\n    > 容器是一类特殊的应用，容器通常用于承载其他应用，并为这些应用提供运行支持。\r\n    + 容器的稳定性很重要，维护容器的稳定性应优于其性能优化考量。\r\n\r\n--\r\n\r\n### 其他\r\n\r\n+ PPL许可证不能用来放生BUG。\r\n+ 请不要放生屎山过多的项目，这将让项目在野外的生存非常艰难。\r\n+ 注意！出于对保证开发者的身体健康和对项目的持久化维护的考虑，请务必通过合理的劳动模式维护项目。\r\n+ 放生项目应处于为项目未来更好的发展上考虑，而不是积累放生积分。请勿创建空壳项目并将其放生。\r\n','',''),(12405,'c511ee91c9bd4eb6be6a50d84124c294','2019-12-05 09:01:18','','','现已更新至基于Kaguya架构的WL115_B1内核，持续动力源。','',''),(12397,'d052a42f655a418b9cacd6425535d819','2019-10-01 18:40:16','国庆赋','该睡觉啦',' <div align=\"center\">\r\n\r\n# 国庆赋\r\n### 雅爱方雏\r\n## 砥砺前行七十载，众心众志向未来。  \r\n## 以坚定的初心，不断寻求人民的福祉。  \r\n## 快速发展的背后，是『高工作效率』。  \r\n## 拼搏，奋斗，我们都是追梦人。\r\n\r\n</div>','雅爱方雏设计局$联动$国庆节','<img class=\"pXL\" src=\"<{cdn_root}>/md-img/cn70th.jpg\">'),(12425,'d184094bd8e94d3abfe647493bf699e9','2021-08-30 17:09:54','PB8维护日志','Magallan架构','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12376)\">点此返回索引根目录</span>\r\n\r\n## <span id=\"A6EiaHlYhcUW\">WaterLibrary1.1.7维护暂栏，伴随PILIPALA BETA9预览更新</span>[#](#A6EiaHlYhcUW)\r\n\r\n<span class=\"mk-dt\">21.08.30<span class=\"mk-updt\"></span></span>修复了隐藏文章的可见性问题  \r\n<span class=\"mk-dt\">21.08.01<span class=\"mk-updt\"></span></span>引入文章树（PostTree），可构建树形文章层次结构  \r\n<span class=\"mk-dt\">21.07.29<span class=\"mk-updt\"></span></span>将Writer组件标记为过时  \r\n<span class=\"mk-dt\">21.07.28<span class=\"mk-dbg\"></span></span>修复了用户登录密码识别不正确的问题\r\n<span class=\"mk-dt\">21.07.27<span class=\"mk-updt\"></span></span>引入文章栈（PostStack）  \r\n<span class=\"mk-dt\">21.07.26<span class=\"mk-updt\"></span></span>引入文章记录（PostRecord），相较于Post它具有一个带有缓存设计的惰性求值访问器  \r\n<span class=\"mk-dt\">21.06.28<span class=\"mk-dbg\"></span></span>修复了在ajax刷新中的LaTeX渲染失败问题  \r\n<span class=\"mk-dt\">21.06.01<span class=\"mk-updt\"></span></span>修改了插件的耦合实现  \r\n<span class=\"mk-dt\">21.03.26<span class=\"mk-updt\"></span></span>为Markdown数学公式提供渲染支持(使用MathJax)  \r\n<span class=\"mk-dt\">21.03.21<span class=\"mk-updt\"></span></span>Field3代码高亮优化  \r\n<span class=\"mk-dt\">21.03.21<span class=\"mk-updt\"></span></span>对Field3的性能和内存占用进行了优化  \r\n<span class=\"mk-dt\">21.02.22<span class=\"mk-updt\"></span></span>LigntningLink开发完成  \r\n<span class=\"mk-dt\">21.02.14<span class=\"mk-updt\"></span></span>进一步简化了组件工厂和内核的构造设计  \r\n<span class=\"mk-dt\">21.02.12<span class=\"mk-updt\"></span></span>将内核事件驱动机制移交到pilipala层  \r\n<span class=\"mk-dt\">21.02.10<span class=\"mk-updt\"></span></span>删除了文章属性接口和评论属性接口，改用枚举替代  \r\n<span class=\"mk-dt\">21.02.09<span class=\"mk-updt\"></span></span>文件结构优化  \r\n<span class=\"mk-dt\">21.02.09<span class=\"mk-updt\"></span></span>新增插件LightningLink(闪链)，用以替换内容  \r\n<span class=\"mk-dt\">21.02.09<span class=\"mk-updt\"></span></span>替换了内核中大量的反射式API，使页面刷新速度获得显著提升  \r\n<span class=\"mk-dt\">21.02.09<span class=\"mk-updt\"></span></span>将`pl_index`表更名为`pl_meta`  \r\n<span class=\"mk-dt\">21.02.09<span class=\"mk-updt\"></span></span>现在可以配置云存储目录位置了  \r\n<span class=\"mk-dt\">21.02.08<span class=\"mk-ui\"></span></span>统一了Field3主题的各端背景显示，并修复了背景不居中显示的问题  \r\n<span class=\"mk-dt\">21.02.08<span class=\"mk-updt\"></span></span>全站HTTPS开启  \r\n<span class=\"mk-dt\">21.01.31<span class=\"mk-updt\"></span></span>删除了直接操作表的方法以提升安全性  \r\n<span class=\"mk-dt\">21.01.31<span class=\"mk-updt\"></span></span>修复了事务托管器无效的问题，扩展了SqlCommand方法，简化了对数据库的增删改操作  \r\n<span class=\"mk-dt\">21.01.31<span class=\"mk-updt\"></span></span>优化了库表结构，归档信息现在由index表存储  \r\n<span class=\"mk-dt\">21.01.30<span class=\"mk-updt\"></span></span>完善了归档管理器  \r\n<span class=\"mk-dt\">21.01.30<span class=\"mk-updt\"></span></span>新增事务托管器，同时优化了代码结构  \r\n<span class=\"mk-dt\">21.01.29<span class=\"mk-updt\"></span></span>新增连接托管器，同时优化了代码结构，并修复了潜在于CommentLake中的一个的连接池溢出问题  \r\n<span class=\"mk-dt\">21.01.29<span class=\"mk-updt\"></span></span>新增命令托管器，使用该方法托管的命令能实现更少的代码量和更好的资源控制  \r\n<span class=\"mk-dt\">21.01.29<span class=\"mk-updt\"></span></span>为数据库管理器添加了若干进一步简化查询的方法  \r\n<span class=\"mk-dt\">21.01.28<span class=\"mk-updt\"></span></span>优化了主题配置文件的读取功能  \r\n<span class=\"mk-dt\">21.01.25<span class=\"mk-updt\"></span></span>为PostSet添加了索引器  \r\n<span class=\"mk-dt\">21.01.13<span class=\"mk-updt\"></span></span>支持了主题自定义归档展示  \r\n<span class=\"mk-dt\">21.01.11<span class=\"mk-updt\"></span></span>新增归档管理组件和`pl_archive`表，调整了工厂方法的构造和组件的构造以减少箱操作  \r\n<span class=\"mk-dt\">21.01.10<span class=\"mk-updt\"></span></span>对`pl_stack`表的相关字段进行语义重命名，统一了各表字段间的语义  \r\n<span class=\"mk-dt\">21.01.10<span class=\"mk-updt\"></span></span>增添了表`pl_archive`用于统计归档信息，并将`pl_backup`表更名为`pl_stack`以更贴切语义  \r\n<span class=\"mk-dt\">21.01.09<span class=\"mk-updt\"></span></span>对Reader的工厂生成提供了隐性读取开关(WithRawMode)，大幅简化了Reader内的操作逻辑  \r\n<span class=\"mk-dt\">21.01.09<span class=\"mk-updt\"></span></span>对Writer组件中用于更新文章类型的方法进行了合并，提供了文章类型状态枚举以代替泛型  \r\n<span class=\"mk-dt\">21.01.08<span class=\"mk-updt\"></span></span>对Writer组件中用于更新文章模式的方法进行了合并，提供了文章模式状态枚举以代替泛型  \r\n<span class=\"mk-dt\">21.01.08<span class=\"mk-updt\"></span></span>更改了MySqlManager的构造逻辑，并对MySqlConnMsg的Database字段剔除以解耦  \r\n<span class=\"mk-dt\">21.01.07<span class=\"mk-updt\"></span></span>应用C#9.0关键字\"record\"对小型数据结构进行了改良  \r\n<span class=\"mk-dt\">21.01.07<span class=\"mk-updt\"></span></span>对Reader组件的脏读控制由内核表设定改为由组件工厂控制；同时简化了内核表定义，将默认表定义打包到配置文件，对脏视图和净视图统一管理  \r\n<span class=\"mk-dt\">21.01.06<span class=\"mk-updt\"></span></span>更名Tools命名空间为Util，并在MathH增加了排序顺序表示枚举  \r\n<span class=\"mk-dt\">21.01.05<span class=\"mk-updt\"></span></span>应用C#9.0的一些特性对内核进行了改写，如增强型模式匹配、仅限Init的资源库等特性  \r\n<span class=\"mk-dt\">21.01.05<span class=\"mk-updt\"></span></span>改用元组代替MySqlKey，优化了查询的拆装箱操作，以及其他结构性优化  \r\n\r\n## <span id=\"w73SGkGkeFnM\">PILIPALA 2009BETA8 LTS Build2维护日志</span>[#](#w73SGkGkeFnM)\r\n\r\n<span class=\"mk-dt\">21.01.02<span class=\"mk-updt\"></span></span>将jiligulu移植到了Electron  \r\n<span class=\"mk-dt\">20.12.28<span class=\"mk-updt\"></span></span>为KeyPair提供了自序列化到JSON功能  \r\n<span class=\"mk-dt\">20.12.27<span class=\"mk-updt\"></span></span>大幅度提升了系统的并发性能，强化了数据库连接池的管理能力  \r\n<span class=\"mk-dt\">20.12.26<span class=\"mk-updt\"></span></span>为WL内核数据库控制器开发了一个连接池系统，有效避免了连接过多导致的卡死问题。  \r\n<span class=\"mk-dt\">20.12.26<span class=\"mk-ui\"></span></span>修复了叽里咕噜后台查看迭代栈时服务器会卡死的问题  \r\n<span class=\"mk-dt\">20.12.26<span class=\"mk-updt\"></span></span>对日期格式化功能解耦，禁用了组件单独构造  \r\n<span class=\"mk-dt\">20.12.24<span class=\"mk-updt\"></span></span>完善了叽里咕噜后台的用户页面  \r\n<span class=\"mk-dt\">20.12.24<span class=\"mk-updt\"></span></span>丰富了Authentication组件的功能和User组件的功能  \r\n<span class=\"mk-dt\">20.12.24<span class=\"mk-updt\"></span></span>将CommentLake和User对象归入组件模式  \r\n<span class=\"mk-dt\">20.12.23<span class=\"mk-updt\"></span></span>为叽里咕噜后台开发了登录功能，并提供了一套非常可信的RSA验证机制确保了数据安全性  \r\n<span class=\"mk-dt\">20.12.22<span class=\"mk-updt\"></span></span>添加了对https支持（但是部分外链内容仍不安全）  \r\n<span class=\"mk-dt\">20.12.20<span class=\"mk-updt\"></span></span>内核接口开放完成，现支持使用组件工厂模式的初始化  \r\n<span class=\"mk-dt\">20.12.20<span class=\"mk-updt\"></span></span>优化了参数化查询结构，为数据集提供ForEach迭代支持  \r\n<span class=\"mk-dt\">20.12.17<span class=\"mk-ui\"></span></span>删除了蓝线加载条，改用模糊加透明的渐变动画  \r\n<span class=\"mk-dt\">20.12.17<span class=\"mk-ui\"></span></span>为滑至底部查看背景图添加了作者版权标识  \r\n<span class=\"mk-dt\">20.12.15<span class=\"mk-ui\"></span></span>删除了下雪特效以减少访问时的GPU开销  \r\n<span class=\"mk-dt\">20.12.16<span class=\"mk-ui\"></span></span>为Field主题添加了滑动到底部可查看背景图的功能  \r\n<span class=\"mk-dt\">20.12.15<span class=\"mk-updt\"></span></span>为Markdown提供了对拓展语法`额外强调`的支持  \r\n<span class=\"mk-dt\">20.12.14<span class=\"mk-updt\"></span></span>博客现已完全迁移至Linux环境(Ubuntu2004)  \r\n<span class=\"mk-dt\">20.12.12<span class=\"mk-updt\"></span></span>2020年12月12日15时52分，pilipala在linux环境下运行成功！  \r\n<span class=\"mk-dt\">20.12.11<span class=\"mk-dbg\"></span></span>大幅度简化了内核的命名空间  \r\n<span class=\"mk-dt\">20.12.11<span class=\"mk-dbg\"></span></span>修复了js防抖失效的问题  \r\n<span class=\"mk-dt\">20.12.10<span class=\"mk-dbg\"></span></span>修复了蓝线加载条不显示的问题  \r\n<span class=\"mk-dt\">20.12.10<span class=\"mk-updt\"></span></span>将piliala数据库移植到了MySQL8下  \r\n<span class=\"mk-dt\">20.12.09<span class=\"mk-updt\"></span></span>Comment对象和Post对象现支持自序列化  \r\n<span class=\"mk-dt\">20.12.09<span class=\"mk-updt\"></span></span>pilipala已完全移植到.net core  \r\n<span class=\"mk-dt\">20.12.08<span class=\"mk-updt\"></span></span>修复了内核Writer组件中查找消极文章GUID方法的一个SQL格式化错误  \r\n<span class=\"mk-dt\">20.12.08<span class=\"mk-updt\"></span></span>现已将WaterLibrary内核移植到.net core  \r\n<span class=\"mk-dt\">20.12.08<span class=\"mk-updt\"></span></span>为内核应用了新的MySQL控制器  \r\n<span class=\"mk-dt\">20.12.08<span class=\"mk-updt\"></span></span>WL的session和cookie管理器已不受支持\r\n\r\n## <span id=\"ER0RRga0rrjj\">PILIPALA 2009BETA8 LTS Build1维护日志</span>[#](#ER0RRga0rrjj)\r\n\r\n<span class=\"mk-dt\">20.12.08<span class=\"mk-updt\"></span></span>对Post对象增添了更多聚合方法  \r\n<span class=\"mk-dt\">20.12.08<span class=\"mk-updt\"></span></span>新增可迭代对象PostSet(文章数据集)，和CommentSet有相似的优点  \r\n<span class=\"mk-dt\">20.12.07<span class=\"mk-updt\"></span></span>新增可迭代对象CommentSet(评论数据集)，此对象可提供较泛型集合更专一化的数据聚合功能  \r\n<span class=\"mk-dt\">20.12.07<span class=\"mk-updt\"></span></span>Html过滤器现在支持对转义字符的过滤  \r\n<span class=\"mk-dt\">20.12.07<span class=\"mk-updt\"></span></span>在内核层面提供了对文章原数据的格式化支持  \r\n<span class=\"mk-dt\">20.12.07<span class=\"mk-updt\"></span></span>现已在内核层面提供了对文章内容的Html过滤和Markdown转义支持  \r\n<span class=\"mk-dt\">20.12.07<span class=\"mk-updt\"></span></span>简化了FieldV3主题的一些样式函数  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>重新设计了FieldV3主题的蓝线导航条，它现在不会因为刷新和路由丢失位置了！  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>更改了FieldV3主题的路由格式，现在的路由地址更易于理解和可读  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>FieldV3主题现支持PJAX(和以前的不一样！这次真正地利用了PJAX的所有优点和特性！)  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>现已将pilipala完全迁移至MVC模式下，为后续转移至.net core和跨平台部署做准备(啊啊啊一下午一晚上没了)  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>修复了后台迭代化系统获取的备份全都一样的问题  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>修复了后台删除文章失败的问题  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>修复了后台无法获得到备份列表的问题  \r\n<span class=\"mk-dt\">20.12.06<span class=\"mk-updt\"></span></span>修复了WL内核计数器组件正则匹配错误导致的计数失效问题  \r\n<span class=\"mk-dt\">20.12.05<span class=\"mk-updt\"></span></span>WL内核升级到1.1.6.9，此版本提升了性能并优化了接口  \r\n<span class=\"mk-dt\">20.12.05<span class=\"mk-updt\"></span></span>用户功能恢复，经过重新设计的用户功能相比以前的充数版本具有更明确的设计目标和更强大的功能  \r\n<span class=\"mk-dt\">20.12.04<span class=\"mk-ui\"></span></span>重新设计了主题的部分样式  \r\n<span class=\"mk-dt\">20.12.04<span class=\"mk-dbg\"></span></span>修复了块状代码样式错误的问题  \r\n<span class=\"mk-dt\">20.12.03<span class=\"mk-dbg\"></span></span>修复了未点赞但刷新文章会导致星星被点亮的问题  \r\n<span class=\"mk-dt\">20.12.03<span class=\"mk-updt\"></span></span>重新设计了后台数据接口  \r\n<span class=\"mk-dt\">20.12.02<span class=\"mk-updt\"></span></span>叽里咕噜后台评论管理现可用  \r\n<span class=\"mk-dt\">20.12.01<span class=\"mk-dbg\"></span></span>修复了评论楼层错误的问题  \r\n<span class=\"mk-dt\">20.11.30<span class=\"mk-ui\"></span></span>大规模维护了文章内容  \r\n<span class=\"mk-dt\">20.11.29<span class=\"mk-ui\"></span></span>修复了CommentLake评论系统在对无评论文章进行评论时的失效问题  \r\n<span class=\"mk-dt\">20.11.27<span class=\"mk-ui\"></span></span>修复了markdown样式错乱的问题，在GitHub样式的基础上优化了markdown样式  \r\n<span class=\"mk-dt\">20.11.26<span class=\"mk-updt\"></span></span>叽里咕噜开始试运行，感谢<a href=\"http://www.gxhsoulstar.cn\">Soulstar</a>提供的测试支持  \r\n<span class=\"mk-dt\">20.11.23-24<span class=\"mk-updt\"></span></span>WL内核升级到1.1.6.8，该版本对迭代化系统提供重点支持  \r\n<span class=\"mk-dt\">20.11.22<span class=\"mk-updt\"></span></span>优化了pilipala数据库索引结构，提升了最高约500%的性能  \r\n<span class=\"mk-dt\">20.11.22<span class=\"mk-updt\"></span></span>IPostKey接口功能单一化，仅用于泛型约束  \r\n<span class=\"mk-dt\">20.11.22<span class=\"mk-updt\"></span></span>pilipala内核配件的初始化改为由事件驱动以简化初始化流程，数据库结构和数据库连接设置为在pilipala开发层不可见  \r\n<span class=\"mk-dt\">20.11.22<span class=\"mk-updt\"></span></span>重构了PLDR以使在pilipala开发层面无需关心数据库结构  \r\n<span class=\"mk-dt\">20.11.20<span class=\"mk-updt\"></span></span>重新设计了WL内核中与pilipala系统初始化有关的结构  \r\n<span class=\"mk-dt\">20.11.17<span class=\"mk-updt\"></span></span>叽里咕噜已完成技术验证开发  \r\n<span class=\"mk-dt\">20.11.09<span class=\"mk-updt\"></span></span>为pilipala框架添加了更多接口以支持后台数据访问  \r\n<span class=\"mk-dt\">20.11.15<span class=\"mk-updt\"></span></span>内核文章类型现支持MD5访问器计算以解耦  \r\n<span class=\"mk-dt\">20.11.11-14<span class=\"mk-updt\"></span></span>完成了pilipala试作型后台(叽里咕噜)的UI开发工作  \r\n<span class=\"mk-dt\">20.11.10<span class=\"mk-updt\"></span></span>为WL内核增加了RSA验证器  \r\n<span class=\"mk-dt\">20.11.09<span class=\"mk-updt\"></span></span>改善了WL内核的底层查询性能  \r\n<span class=\"mk-dt\">20.11.05-08<span class=\"mk-updt\"></span></span>优化了pilipala数据库的性能  \r\n<span class=\"mk-dt\">20.11.05<span class=\"mk-updt\"></span></span>完善了CommentLake实现，增加若干增删改查功能  \r\n<span class=\"mk-dt\">20.11.04<span class=\"mk-updt\"></span></span>WL内核现已集成CommentLake，优化了若干结构  \r\n<span class=\"mk-dt\">20.11.03<span class=\"mk-updt\"></span></span>叽里咕噜后台(技术验证型)开发完成  \r\n<span class=\"mk-dt\">20.11.02<span class=\"mk-updt\"></span></span>WL内核新增啪啦计数器类(该类为详细统计噼里啪啦数据库内容提供底层支持)  \r\n<span class=\"mk-dt\">20.11.01<span class=\"mk-updt\"></span></span>WL内核改用了反射型Post索引器，相较于原来的枚举型Post索引器有了更大的性能提升和可拓展性  \r\n<span class=\"mk-dt\">20.10.30<span class=\"mk-updt\"></span></span>WL内核的可迭代对象转字符串功能拓展性进一步增强  \r\n<span class=\"mk-dt\">20.10.29<span class=\"mk-updt\"></span></span>丰富了WL内核对pilipala历史迭代系统(一种类似于git的文章日志型系统)的支持  \r\n\r\n## <span id=\"7QH1TSs0XUt7\">PILIPALA 2009BETA8 LTS 先行测试2维护日志</span>[#](#7QH1TSs0XUt7)\r\n\r\n<span class=\"mk-dt\">20.10.26<span class=\"mk-dbg\"></span></span>修复了文章内提示bar的错误搭配问题  \r\n<span class=\"mk-dt\">20.10.26<span class=\"mk-updt\"></span></span>考量到功能体验的完整性，便签现在也支持点击访问了  \r\n<span class=\"mk-dt\">20.10.26<span class=\"mk-dbg\"></span></span>修复了WL内核因事务查询设计错误导致PLDU部分方法无法使用的问题  \r\n<span class=\"mk-dt\">20.10.25<span class=\"mk-dbg\"></span></span>修复了WL内核 PrevID&lt;T&gt;(ID)、NextID&lt;T&gt;(ID) 目标视图错误的bug  \r\n<span class=\"mk-dt\">20.10.24<span class=\"mk-bug\"></span></span>1024！节日快乐！！！  \r\n<span class=\"mk-dt\">20.10.24<span class=\"mk-w\"></span></span>优化了图片外链CDN结构  \r\n<span class=\"mk-dt\">20.10.23<span class=\"mk-updt\"></span></span>WL内核新增程序集信息获取访问器  \r\n<span class=\"mk-dt\">20.10.22<span class=\"mk-updt\"></span></span>CommentLake回复功能现可用(技术验证型)  \r\n<span class=\"mk-dt\">20.10.22<span class=\"mk-dbg\"></span></span>修复了浏览器宽度变化不能触发响应式的问题  \r\n<span class=\"mk-dt\">20.10.21<span class=\"mk-dbg\"></span></span>修复了评论列表在昵称宽度不够时会发生文字溢出的问题  \r\n<span class=\"mk-dt\">20.10.21<span class=\"mk-dbg\"></span></span>修复了CommentLake评论提交滑条在ajax异步加载后无效的问题  \r\n<span class=\"mk-dt\">20.10.20<span class=\"mk-bug\"></span></span>登记问题：CommentLake评论提交滑条在ajax异步加载后无效  \r\n<span class=\"mk-dt\">20.10.20<span class=\"mk-updt\"></span></span>CommentLake评论提交系统现可用(技术验证型)  \r\n<span class=\"mk-dt\">20.10.14<span class=\"mk-dbg\"></span></span>修复了因为错误的URL映射导致站点首页卡死的恶性bug  \r\n<span class=\"mk-dt\">20.10.14<span class=\"mk-updt\"></span></span>集中解决了WL1.16.5的一系列问题，提升了内核稳定性  \r\n<span class=\"mk-dt\">20.10.11<span class=\"mk-updt\"></span></span>为进一步功能化MySQL控制器，删除了WL对外部连接的控制支持  \r\n<span class=\"mk-dt\">20.10.10<span class=\"mk-updt\"></span></span>截至此时WL1.16.5已经节约代码200行，并新增功能十余项  \r\n<span class=\"mk-dt\">20.10.10<span class=\"mk-updt\"></span></span>删除了数据库的3个函数/存储过程  \r\n<span class=\"mk-dt\">20.10.10<span class=\"mk-updt\"></span></span>简化了啪啦系统的结构和初始化流程  \r\n<span class=\"mk-dt\">20.10.10<span class=\"mk-updt\"></span></span>WL内核新增了更多泛型方法，用以替代传统文章查询方法并减少代码量  \r\n<span class=\"mk-dt\">20.10.09<span class=\"mk-updt\"></span></span>简化了SQL查询结构，优化了噼里啪啦系统初始化过程  \r\n<span class=\"mk-dt\">20.10.09<span class=\"mk-updt\"></span></span>优化了GetIndex()方法和GetPrimary()方法，二者现均支持泛型索引  \r\n<span class=\"mk-dt\">20.10.09<span class=\"mk-dbg\"></span></span>修复了GetIndex()方法返回值错误的问题  \r\n<span class=\"mk-dt\">20.10.09<span class=\"mk-updt\"></span></span>对GetList的6个重载进行了泛型重构，使参与匹配的键值能涵盖IKey的所有实现，使得在减少百余行代码的基础上功能不变  \r\n<span class=\"mk-dt\">20.10.08<span class=\"mk-updt\"></span></span>WL内核新增了GetList&lt;T&gt;()泛型方法，该方法能大幅度减少代码量和噼里啪啦的运行效率  \r\n<span class=\"mk-dt\">20.10.08<span class=\"mk-updt\"></span></span>WL内核新增了GetList()可变参数重载，该方法大幅度减少了以往方法对数据库资源的开销  \r\n<span class=\"mk-dt\">20.10.08<span class=\"mk-updt\"></span></span>丰富了WL内核中IKey接口的实现  \r\n<span class=\"mk-dt\">20.10.08<span class=\"mk-updt\"></span></span>修改了数据库中Index表和Primary表对时间的命名，增添了双表联合视图  \r\n<span class=\"mk-dt\">20.10.05<span class=\"mk-bug\"></span></span>登记问题：CommitList在用户名超出时，自动换行会导致排版错乱  \r\n<span class=\"mk-dt\">20.10.05<span class=\"mk-bug\"></span></span>登记问题：CommitBox的提交按钮不能显示圆角样式  \r\n\r\n## <span id=\"lzBEz5W7dPmG\">PILIPALA 2009BETA8 LTS 先行测试1维护日志</span>[#](#lzBEz5W7dPmG)\r\n\r\n<span class=\"mk-dt\">20.10.04<span class=\"mk-updt\"></span></span>升级到WL1.16.4内核(B2步进)，此版本针对性能进行了优化  \r\n<span class=\"mk-dt\">20.10.03<span class=\"mk-w\"></span></span>修复了部分文章的样式问题  \r\n<span class=\"mk-dt\">20.10.03<span class=\"mk-ui\"></span></span>修改了评论相关样式  \r\n<span class=\"mk-dt\">20.10.03<span class=\"mk-dbg\"></span></span>修复了蓝线加载条在非首页处消失的问题  \r\n<span class=\"mk-dt\">20.10.03<span class=\"mk-updt\"></span></span>thaumy.cn解析现可用  \r\n<span class=\"mk-dt\">20.10.03<span class=\"mk-updt\"></span></span>升级到WL1.16.3内核(B1步进)，此版本完善了查询逻辑  \r\n<span class=\"mk-dt\">20.10.02<span class=\"mk-updt\"></span></span>CommentLake评论系统阅读功能现可用  \r\n<span class=\"mk-dt\">20.10.02<span class=\"mk-ui\"></span></span>提示条新样式现可用  \r\n<span class=\"mk-dt\">20.10.01<span class=\"mk-dbg\"></span></span>修复了夜间模式下AtBox的样式错误问题  \r\n<span class=\"mk-dt\">20.09.29<span class=\"mk-ui\"></span></span>CommentLake UI设计终了  \r\n<span class=\"mk-dt\">20.09.16<span class=\"mk-updt\"></span></span>添加了对随笔的Markdwon解析支持  \r\n<span class=\"mk-dt\">20.09.15<span class=\"mk-dbg\"></span></span>使用了后端化Markdown解析器，解决了文章概要中的预览bug和引用标记无法正确翻译的bug  \r\n<span class=\"mk-dt\">20.09.15<span class=\"mk-ui\"></span></span>调整了文章属性盒的样式  \r\n<span class=\"mk-dt\">20.09.14<span class=\"mk-w\"></span></span>维护了2篇归档文章（盘古型）  \r\n<span class=\"mk-dt\">20.09.13<span class=\"mk-w\"></span></span>维护了2篇归档文章（盘古型）  \r\n<span class=\"mk-dt\">20.09.13<span class=\"mk-updt\"></span></span>升级到WL1.16.2内核(A3步进)，此版本修复了已知问题并提升了稳定性  \r\n<span class=\"mk-dt\">20.09.09<span class=\"mk-w\"></span></span>维护了4篇归档文章（盘古型）  \r\n<span class=\"mk-dt\">20.09.09<span class=\"mk-updt\"></span></span>上载了pillipala beta8先行测试1  \r\n<span class=\"mk-dt\">20.09.09<span class=\"mk-mtn\"></span></span>记录了验证版本的已知问题，维护了相关样式  \r\n<span class=\"mk-dt\">20.09.09<span class=\"mk-updt\"></span></span>上载了pillipala beta8服务器技术验证版本  \r\n','',''),(12384,'d50460042b28491a84c0c93180701b30','2020-12-26 17:29:46','欢迎页&主引导','README.md','<style>p{text-indent: 2em; /*首行缩进*/}</style>\r\n\r\n## 引导\r\n\r\n欢迎来到我的BLOG！在这里你将看到我的往期文章、最新动态以及其他富有生机的内容。与个人空间不同，本站将发布一些具有技术性、多元化的内容，以别样的方式承载Thaumy的意志。如果您对我的项目感兴趣，或是对本站的运维有更好的点子，都可以咨询我的邮箱：love@thaumy.cn。所有参与维护工作的用户均会被纳入 “关于博客” 页面的支持列表之中，他们的贡献应当受到所有人的尊重。\r\n\r\n## 许可\r\n\r\nGNU General Public License v3.0(GNU通用公共许可证v3.0)适用于pilipala及其所有附属项目，本站所有内容均于GitHub开源（非本人创作除外）。未经允许地引用本站内容，需注明来源。请注意，如果您使用本站内容或取得相关源代码，则视为您同意该许可。对于pilipala的一切资产，该许可证均具有法律效力。感谢您对开源事业的理解和支持。\r\n\r\n## 先行测试\r\n\r\n或许你已经注意到，本站经常使用\"BETA\"这个单词，这是由于本站基于独立开发的pilipala驱动。该系统尚处于测试阶段，为验证其可用性和相关效能，您看到的是本站的先行测试版本。这意味着站点会经常进行版本迭代、技术测试、备份运维甚至停机维护。注意，“维护日志”中的“先行测试”一词与本文的\"BETA\"有所区别，它代表的是每次大版本更新后的技术验证版本。\r\n\r\n## 归档体系\r\n\r\n本站的归档系统将文章其及其他内容分为已归档和活跃两种状态。受限于开发者的个人精力和其他不可抗因素，本站不能保证所有内容持续有效。因此，多数长期未进行编辑的文章会被列为归档状态，对于这部分内容，原则上不会进行相关更新与维护。但是，您可以通过评论或将批注提交至邮箱love@thaumy.cn来继续为这些文章作出贡献。\r\n\r\n## 评价体系\r\n\r\n您的意见对我们十分重要。通常情况下，陌生访客的第一次评价会经过人工审核。审核通过后，该访客日后的评论才会自动显示出来。虽然有些许麻烦，但是这样做可以有效过滤失当评论及广告内容。本博客目前允许用户使用CommentLake插件（也属于pilipala工程的一部分）进行评论，所有的评论均会被定期进行人工筛查以防止广告评论的产生。部分文章的评论功能也会被上锁，这是因为他们已经不具备参考价值或者尚处于极不稳定的测试阶段，评论会导致误解和不必要的维护工作。\r\n\r\n## 回声\r\n\r\n呐，就这些啦~ ......我想你能有所收获~！','引导','<img class=\"pXL\" id=\"welcom_pic\" src=\"\" />\r\n<script>\r\n    var images = [\'https://cdn.thaumy.cn/ui-background/bg_1.jpg\',\r\n        \'https://cdn.thaumy.cn/ui-background/bg_2.jpg\',\r\n        \'https://cdn.thaumy.cn/ui-background/bg_3.jpg\',\r\n        \'https://cdn.thaumy.cn/ui-background/bg_4.jpg\'\r\n    ];\r\n    document.getElementById(\"welcom_pic\").src = images[Math.floor(Math.random() * images.length)];\r\n</script>'),(12432,'d6c01dc2cf4f4802a48b30028084024e','2020-10-15 07:07:35','','','现已升级至 WaterLibrary 1.16.5 内核，版本代号\"性能革命\"','噼里啪啦工程组',''),(12433,'d9e74e8a100e4f01b14170460f7f70fa','2020-10-24 16:12:05','','','<center>\r\n10月24日！一个属于程序员的节日。<br>\r\n<img class=\"bRds bSha\" width=\"16%\" style=\"margin-top:6px\" src=\"https://cdn.thaumy.cn/表情包/kimo_bench.jpg\">\r\n<span style=\"color:rgba(106,153,85)\" >//2020-1024=996</span>\r\n</center>','',''),(12410,'e48c0162256941a797eecc23fadd77bc','2020-01-10 21:42:39','YOGA C940 使用体验','美帝良心想','\r\n# awesome！\r\n\r\n<img style=\"width:30%;float:left;margin-right:10px;\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/moment.jpg\">\r\n\r\n这是我独享的moment。  \r\n（运用自如）  \r\n\r\n&emsp;&emsp;实在是不知道如何写这篇评测，我删了又改改了又删。  \r\n那么就随便写写算了。。。。随性一点。  \r\n\r\n&emsp;&emsp;这块本子大概已经用了三个周了吧，本来想着一到手就评测一下的，实在是太忙，所以决定体验一段时间再写。  \r\n\r\n---\r\n\r\n因为我又热又笨的FX8300已经不能满足我对便携开发的热衷追求，我觉得是时候购买一台笔记本电脑了。\r\n\r\n## 需求\r\n\r\n* 续航\r\n\r\n&emsp;&emsp;考虑到尽可能的使用时长，我需要更大的电池和低功耗的处理器（桌面级标压处理器虽然性能可观，但是续航实在不敢恭维）。由于低压i5拥有更好的功耗控制，体制上在解锁TDP限制后与低压i7没有较大差距，价格又便宜那么几百块，所以买i5呗~~~嘛，理性一点。  \r\n\r\n* 存储器\r\n\r\n&emsp;&emsp;在内存方面，考虑到将来入坑剪辑和虚拟机的学习，所以我至少需要16G的运行内存，这可以让我拥有更多的任务挂载于系统。  \r\n\r\n硬盘到无所谓，除了某果，都可自行添加，512G是我的理想选择，当然1T更好（多存点垃圾，滑稽）。  \r\n\r\n* 显示效能\r\n\r\n&emsp;&emsp;由于经常进行网页设计和作图，我在上半年购置了一台三星SpaceMonitor作为主显示器（100%sRGB）应对色彩差异问题。所以笔电上的色彩需求就不在我的考虑范围内，原则上90%sRGB的屏幕我都可以接受。  \r\n\r\n* 拓展性\r\n\r\n&emsp;&emsp;雷电3接口提供了高达40Gbps的传输速率（约5G每秒），极高的带宽甚至允许它能外接显卡进行图形处理（玩游戏2333）。无论机身携带多少接口，相信雷电3都是必备的。  \r\n\r\n#### 大概就这些。\r\n\r\n---\r\n\r\n为什么我选择了YOGA？在18-19年的笔电市场中，大多数笔电都存在某方面的短板，符合要求的款式大概也就戴尔的XPS和苹果的MBP了（价格甚高，买得起也修不起呀）。。。小米和联想的小新我曾经觉得比较理想，二者都有很高的拓展性和可观的性价比。\r\n\r\n到了2019年9月，联想发布了YOGA的新系列。\r\n\r\nC940满足以上全部需求，并且还多了块90%色域的触控屏和压感笔，没有过万（这是重点）。  \r\n\r\n---\r\n\r\n#### 下面来聊一聊这个本子\r\n\r\n> &emsp;&emsp;YOGA C940延续了YOGA系列一贯的商务风格。它的机身为金属材质，并在此基础上采用了CNC工艺与喷砂处理，机身线条硬朗，手感细腻，高端范十足。（懒得写，引用自环球网）\r\n\r\n&emsp;\r\n\r\n<img style=\"width:70%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/A面.jpg\">\r\n\r\nA面大方气派，YOGA字样由CNC镂刻嵌入。\r\n\r\n<img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/fold (4).jpg\"><img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/fold (2).jpg\"><img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/fold (1).jpg\"><img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/fold (3).jpg\">\r\n\r\n显示屏360度可折叠，帐篷模式平板模式，玩法多多，想怎么放就怎么放。\r\n\r\n<img style=\"width:100%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/paint.jpg\">\r\n\r\n4096级压感触控笔，搭配4K电磁屏，这就是块数位板。  \r\n\r\n*数位笔采用EDLC超级电容，理论上可实现无限次充放电，无需担心寿命问题。*\r\n\r\n<img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/shaft.jpg\"><img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/dolby.jpg\">\r\n\r\n同步转轴是这个本子的一大亮点，保证了音源始终面向用户，杜比音效，awesome。\r\n\r\n<img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/interface.jpg\"><img style=\"width:50%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/fingerprint.jpg\">\r\n\r\n两个雷电三接口和一个type-A接口，反应迅速的指纹识别模块。\r\n\r\n<img style=\"width:70%\" src=\"https://cdn.thaumy.cn/md-img/YOGA C940 使用体验/keybo.jpg\">\r\n\r\n联想的键盘一向都不错，敲起来舒服到我甚至让把我的樱桃茶扔了。可能是来自于ThinkPad的技术积累吧。\r\n\r\n<blockquote>\r\n&emsp;&emsp;作为联想推出的一款10nm旗舰翻转本，YOGAC940无疑是非常成功的。无论是独特的外观与豪华的硬件配置还是实用的功能与贴心的细节设计，都达到了对手所无法企及的高度。与此同时，它还有着出色的性能表现与相对亲民的价格。如果你刚好需要一款轻薄本，那么不妨考虑一下这款综合实力出色的YOGA C940。（引用自环球网）\r\n</blockquote>\r\n\r\n其实不仅有14寸版本，还有15寸版本的c940。  \r\n15寸版本虽然拥有更强的性能（1650显卡与标压处理器），但是其续航和屏幕素质与14有较大差距。没有100%sRGB的屏幕作为绘画本显然不是理想选择。  \r\n适合自己的才是最好的。\r\n\r\n<br>\r\n\r\n<p align=\"right\">此文章使用 YOGA C940 编辑完成。</p>','新设备',''),(12398,'e9728bdbcd9f4dac98eaf92c10233714','2019-11-02 19:09:35','WP_public日志','公元前','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12376)\">点此返回索引根目录</span>\r\n\r\n## public c2 维护日志(1710版本1)\r\n\r\n<span class=\"mk-dt\">18.02.22<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">18.02.19<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">18.02.19<span class=\"mk-updt\"></span></span>基于press的本博客停止了技术更新  \r\n<span class=\"mk-dt\">18.02.19<span class=\"mk-w\"></span></span>发布 博客重构计划EP03  \r\n<span class=\"mk-dt\">18.02.09<span class=\"mk-updt\"></span></span>基于ASP.NET技术的博客系统开始开发  \r\n<span class=\"mk-dt\">18.02.09<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.12.16<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.12.16<span class=\"mk-mtn\"></span></span>回收了 2 条次广告性评论  \r\n<span class=\"mk-dt\">17.12.16<span class=\"mk-updt\"></span></span>将评论框的 “您的昵称” 和 “您的邮箱” 输入栏宽度（width）由 80% 更改为 100%  \r\n<span class=\"mk-dt\">17.12.02<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.12.02<span class=\"mk-updt\"></span></span>发表了文章 Arduino单片机开发感想  \r\n<span class=\"mk-dt\">17.12.02<span class=\"mk-mtn\"></span></span>回收了 167 条次广告性评论  \r\n<span class=\"mk-dt\">17.11.19<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.11.19<span class=\"mk-mtn\"></span></span>删除了 1 条次 广告性评论  \r\n<span class=\"mk-dt\">17.11.11<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.10.29<span class=\"mk-mtn\"></span></span>回收了 68±20 条次 广告性评论（不完全统计）  \r\n<span class=\"mk-dt\">17.10.15<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.10.29<span class=\"mk-w\"></span></span>修改了 StdLib1.07#public更新日志 文章的宣传图片  \r\n<span class=\"mk-dt\">17.10.29<span class=\"mk-mtn\"></span></span>回收了 16 条次 广告性评论  \r\n<span class=\"mk-dt\">17.10.21<span class=\"mk-mtn\"></span></span>回收了 47 条次 广告性评论  \r\n<span class=\"mk-dt\">17.10.15<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.10.15<span class=\"mk-updt\"></span></span>更新了 博客音乐播放器歌单  \r\n<span class=\"mk-dt\">17.10.15<span class=\"mk-mtn\"></span></span>回收了 57 条次 广告性评论  \r\n<span class=\"mk-dt\">17.10.08<span class=\"mk-updt\"></span></span>博客已被百度收录\r\n\r\n## public c1 维护日志(1709版本1)\r\n\r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-updt\"></span></span>维护日志头规则现已更新：红色为问题登记日志，绿色为修复日志，黑色为常规日志，蓝色为备份日志  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-w\"></span></span>更改 MyStudio 页面名称为 工作室  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-w\"></span></span>更改 NewBlog 页面名称为 关于博客  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-w\"></span></span>将 DevelopersLab 计划 页面归档处理  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-w\"></span></span>修订了 MyStudio 页面的内容  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-bug\"></span></span>登记问题：音乐播放器部分歌曲无法加载，需要二次点击才能正常播放  \r\n<span class=\"mk-dt\">17.10.04<span class=\"mk-mtn\"></span></span>回收了 40 条次 广告性评论  \r\n<span class=\"mk-dt\">17.10.01<span class=\"mk-mtn\"></span></span>回收了 27 条次 广告性评论  \r\n<span class=\"mk-dt\">17.09.24<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.09.24<span class=\"mk-updt\"></span></span>删除了 博客垃圾文件及目录 ，优化性能  \r\n<span class=\"mk-dt\">17.09.24<span class=\"mk-w\"></span></span>删除了 20->30 条次 广告性评论  \r\n<span class=\"mk-dt\">17.09.10<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.09.06<span class=\"mk-updt\"></span></span>音乐播放器唱片上的唱臂图片 已更新为矢量  \r\n<span class=\"mk-dt\">17.09.06<span class=\"mk-updt\"></span></span>将 NewBLOG页面 中的 不满意处&(一月内) 栏目和 修复&Updt(一月内) 栏目合并为 DevUpdtLog#开发维护日志 栏目，并添加跳往博内页面 维护日志 的超链接作为内容  \r\n<span class=\"mk-dt\">17.09.06<span class=\"mk-w\"></span></span>删除了 2 条次 广告性评论 和 1 条次 测试性评论\r\n\r\n## public b3 维护日志(1708版本2)\r\n\r\n<span class=\"mk-dt\">17.08.31<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.08.31<span class=\"mk-updt\"></span></span>调整了 文章底部菜单 的 按钮顺序  \r\n<span class=\"mk-dt\">17.08.31<span class=\"mk-updt\"></span></span>对文章页的文章底部菜单的属性栏增加了图标  \r\n<span class=\"mk-dt\">17.08.31<span class=\"mk-updt\"></span></span>文章底部菜单增加标签属性  \r\n<span class=\"mk-dt\">17.08.31<span class=\"mk-updt\"></span></span>更新了 音乐播放器歌单  \r\n<span class=\"mk-dt\">17.08.28<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.08.27<span class=\"mk-bug\"></span></span>登记问题：音乐播放器的静音按钮只能为当前歌曲静音，在播放下一首歌曲时静音失效  \r\n<span class=\"mk-dt\">17.08.27<span class=\"mk-updt\"></span></span>取消了评论区 站点栏目 的填写  \r\n<span class=\"mk-dt\">17.08.27<span class=\"mk-updt\"></span></span>更改了评论区文字，将 评论 改为 留言  \r\n<span class=\"mk-dt\">17.08.27<span class=\"mk-updt\"></span></span>修改了 音乐播放器的 随机播放按钮 和 静音按钮 的大小  \r\n<span class=\"mk-dt\">17.08.27<span class=\"mk-dbg\"></span></span>修复了 在ie11环境下音乐播放器的随机播放按钮不显示的问题\r\n\r\n## public b2 维护日志(1708版本1)\r\n\r\n<span class=\"mk-dt\">17.08.24<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.08.24<span class=\"mk-bug\"></span></span>登记问题：在ie11环境下音乐播放器的随机播放按钮不显示  \r\n<span class=\"mk-dt\">17.08.24<span class=\"mk-updt\"></span></span>更改了音乐播放器 随机播放按钮和静音按钮的样式  \r\n<span class=\"mk-dt\">17.08.24<span class=\"mk-dbg\"></span></span>修复了 音乐播放器静音图标第二次点击后会出现字体丢失的问题  \r\n<span class=\"mk-dt\">17.08.24<span class=\"mk-updt\"></span></span>点赞心形按钮样式修改，已点赞的文章会显示红心  \r\n<span class=\"mk-dt\">17.08.22->24<span class=\"mk-dbg\"></span></span>修复了 文章底部菜单图标首次使用时，因hover图片加载过慢导致在hover图片加载完成前无图片可显示，形成类似闪烁的假象 的问题  \r\n<span class=\"mk-dt\">17.08.23午->24早<span class=\"mk-bug\"></span></span>受台风“天鸽”影响，博客无法访问  \r\n<span class=\"mk-dt\">17.08.20<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.08.19<span class=\"mk-bug\"></span></span>登记问题：文章底部菜单图标首次使用时，因hover图片加载过慢导致在hover图片加载完成前无图片可显示，形成类似闪烁的假象  \r\n<span class=\"mk-dt\">17.08.19<span class=\"mk-dbg\"></span></span>修复了 文章底部菜单图标在不同环境下实际占用空间不同导致显示不合理 的问题  \r\n<span class=\"mk-dt\">17.08.16<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.08.15<span class=\"mk-dbg\"></span></span>修复了 文章底部菜单图标高低不一致，并且使用不规范 的问题  \r\n<span class=\"mk-dt\">17.08.15<span class=\"mk-updt\"></span></span>文章底部菜单图标做部分重绘  \r\n<span class=\"mk-dt\">17.08.13<span class=\"mk-updt\"></span></span>置顶文章右上角的橙红小标志已更新为矢量  \r\n<span class=\"mk-dt\">17.08.13<span class=\"mk-updt\"></span></span>文章底部菜单图标做部分调整，并已更新为全矢量  \r\n<span class=\"mk-dt\">17.08.09<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.08.09<span class=\"mk-updt\"></span></span>更改了维护日志的登记问题日期头，由 y.m.dfound±int--register±int_ 简化为 y.m.d±int--r±int_  \r\n<span class=\"mk-dt\">17.08.08<span class=\"mk-bug\"></span></span>登记问题：博客未被百度收录  \r\n<span class=\"mk-dt\">17.08.06<span class=\"mk-updt\"></span></span>博客菜单栏已更新为全矢量\r\n\r\n## public b2 维护日志(1707版本2)\r\n\r\n<span class=\"mk-dt\">17.07.28<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.07.25±5<span class=\"mk-updt\"></span></span>博客已被百度收录  \r\n<span class=\"mk-dt\">17.07.23<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.07.23<span class=\"mk-updt\"></span></span>改用标准方法引入js&css  \r\n<span class=\"mk-dt\">17.07.23<span class=\"mk-w\"></span></span>上传了 StdLib1.08 的宣传画(1pic)  \r\n<span class=\"mk-dt\">17.07.22<span class=\"mk-updt\"></span></span>开始使用谷歌广告服务  \r\n<span class=\"mk-dt\">17.07.21<span class=\"mk-w\"></span></span>发布了 StdLib1.08pub  \r\n<span class=\"mk-dt\">17.07.20<span class=\"mk-updt\"></span></span>压缩了部分js以提升速度  \r\n<span class=\"mk-dt\">17.07.20<span class=\"mk-updt\"></span></span>博客签名新增打字效果  \r\n<span class=\"mk-dt\">17.07.19<span class=\"mk-updt\"></span></span>修改了 webkit环境下博客页面滚动条样式  \r\n<span class=\"mk-dt\">17.07.19<span class=\"mk-updt\"></span></span>修改了 评论区部分样式和文字  \r\n<span class=\"mk-dt\">17.07.19<span class=\"mk-dbg\"></span></span>修复了 评论区前三个信息框在手机浏览器查看时超出边界 的问题  \r\n<span class=\"mk-dt\">17.07.18<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.07.18<span class=\"mk-dbg\"></span></span>修复了 蓝线刷新条宽度与pjax的刷新区域Central不相等 的问题  \r\n<span class=\"mk-dt\">17.07.18<span class=\"mk-bug\"></span></span>登记问题：蓝线刷新条宽度与pjax的刷新区域Central不相等  \r\n<span class=\"mk-dt\">17.07.17<span class=\"mk-updt\"></span></span>将 闪烁加载图案 更换为 蓝色刷新条  \r\n<span class=\"mk-dt\">17.07.16<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.07.16<span class=\"mk-updt\"></span></span>博客由 ajax 转为 pjax 加载  \r\n<span class=\"mk-dt\">17.07.16<span class=\"mk-updt\"></span></span>停用了 Advanced AJAX Page Loader 插件  \r\n<span class=\"mk-dt\">17.07.14<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份\r\n\r\n## public a3 维护日志(1707版本1)\r\n\r\n<span class=\"mk-dt\">17.07.13<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.7.12<span class=\"mk-updt\"></span></span>对国外访问进行特别优化，使用www.webpagetest.org进行优化测试  \r\n<span class=\"mk-dt\">17.7.12<span class=\"mk-updt\"></span></span>对部分js和css进行CDN加速  \r\n<span class=\"mk-dt\">17.7.12<span class=\"mk-updt\"></span></span>将 poi-player播放器音量减小至 20%  \r\n<span class=\"mk-dt\">17.7.12<span class=\"mk-updt\"></span></span>对部分影响速度的字体进行去本地化，转为CDN加速  \r\n<span class=\"mk-dt\">17.7.12<span class=\"mk-updt\"></span></span>半数资源SSL，提高安全性  \r\n<span class=\"mk-dt\">17.07.11<span class=\"mk-mtn\"></span></span>截至此时，博文在 public a2 版本 中累计修订 557±1 次  \r\n<span class=\"mk-dt\">17.07.11±1<span class=\"mk-updt\"></span></span>引用的外链js全部被压缩处理  \r\n<span class=\"mk-dt\">17.07.11<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.07.11<span class=\"mk-w\"></span></span>发布了文章：log17  \r\n<span class=\"mk-dt\">17.07.11<span class=\"mk-w\"></span></span>删除了页面：17 is running  \r\n<span class=\"mk-dt\">17.07.10<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.7.10<span class=\"mk-updt\"></span></span>废除数据仓库服务，停止其他项目在主机屋的运行  \r\n<span class=\"mk-dt\">17.07.10<span class=\"mk-w\"></span></span>修订页面 友情链接 计 37 次  \r\n<span class=\"mk-dt\">17.07.10<span class=\"mk-w\"></span></span>修订页面 NewBlog 计 35 次  \r\n<span class=\"mk-dt\">17.07.10<span class=\"mk-updt\"></span></span>通过调用 poi-player 的自身函数实现真正的音量下调到 20%  \r\n<span class=\"mk-dt\">17.07.10<span class=\"mk-updt\"></span></span>博客友链系统进行部分重新排版和样式修正  \r\n<span class=\"mk-dt\">17.07.10<span class=\"mk-w\"></span></span>发布了页面：维护日志  \r\n<span class=\"mk-dt\">17.07.09±1<span class=\"mk-updt\"></span></span>使用了极端的方法将 poi-player 播放器音量调整为 20%  \r\n<span class=\"mk-dt\">17.07.08±1<span class=\"mk-updt\"></span></span>停用 Qplayer 播放器，开始使用 poi-player 播放器  \r\n<span class=\"mk-dt\">17.07.08<span class=\"mk-updt\"></span></span>博客开放了友链注册  \r\n<span class=\"mk-dt\">17.07.08<span class=\"mk-w\"></span></span>发布了页面：友情链接  \r\n<span class=\"mk-dt\">17.07.08±1<span class=\"mk-updt\"></span></span>使用GitHub Pages作为CDN加速服务  \r\n<span class=\"mk-dt\">17.07.08±1<span class=\"mk-bug\"></span></span>登记问题：博客音乐自动换歌时会短暂播放上一首  \r\n<span class=\"mk-dt\">17.07.08±1<span class=\"mk-bug\"></span></span>登记问题：博客音乐播放器静音图标点击后样式发生错误  \r\n<span class=\"mk-dt\">17.07.08<span class=\"mk-bug\"></span></span>登记问题：在chorme环境下博客的图片、特效状态字体出现模糊  \r\n<span class=\"mk-dt\">17.07.08<span class=\"mk-dbg\"></span></span>修复了 ie浏览器中运行计时为0 的问题  \r\n<span class=\"mk-dt\">17.07.07<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.07.07<span class=\"mk-mtn\"></span></span>截至此时，博文在 public a3 版本 中累计修订 469 次  \r\n<span class=\"mk-dt\">17.07.07±1<span class=\"mk-updt\"></span></span>将 多媒体、脚本资源 外链引用自 github(raw开发模式)  \r\n<span class=\"mk-dt\">17.07.07<span class=\"mk-dbg\"></span></span>修复了 引用js时因为wp super cache插件的缓存问题导致错误引用 的问题  \r\n<span class=\"mk-dt\">17.07.07±1<span class=\"mk-updt\"></span></span>停用了Qplayer播放器  \r\n<span class=\"mk-dt\">17.07.07±1<span class=\"mk-updt\"></span></span>引用的js全部被压缩处理  \r\n<span class=\"mk-dt\">17.07.07±2<span class=\"mk-updt\"></span></span>压缩了部分图片，提升速度体验  \r\n<span class=\"mk-dt\">17.07.04->07<span class=\"mk-w\"></span></span>修订往期文章计 8 次\r\n\r\n## public a2 维护日志(pub1706版本7)\r\n\r\n<span class=\"mk-dt\">17.06.26<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.06.18->19</span>修订往期文章计 18 次  \r\n<span class=\"mk-dt\">17.06.18<span class=\"mk-w\"></span></span>发布了文章：浅谈press数据库优化  \r\n<span class=\"mk-dt\">17.06.17<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.06.17<span class=\"mk-mtn\"></span></span>截至此时，博文在 public a2 版本 中累计修订 428 次  \r\n<span class=\"mk-dt\">17.06.17±2<span class=\"mk-bug\"></span></span>登记问题：ajax刷新后全部首页图片无法加载  \r\n<span class=\"mk-dt\">17.06.17±3<span class=\"mk-dbg\"></span></span>修复了 CNZZ无法正常统计 的问题  \r\n<span class=\"mk-dt\">17.06.17±3<span class=\"mk-dbg\"></span></span>修复了 进入博客时音乐卡顿 的问题  \r\n<span class=\"mk-dt\">17.06.17±3<span class=\"mk-bug\"></span></span>登记问题：加载首页有几率至少有一张特色图片无法加载  \r\n<span class=\"mk-dt\">17.06.17<span class=\"mk-updt\"></span></span>将博客数据库表 wp_post 删除了 33条 记录  \r\n<span class=\"mk-dt\">17.06.16<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.06.16<span class=\"mk-updt\"></span></span>为 thaumy.link & thaumy.ml 设置 database 记录，用于访问数据仓库  \r\n<span class=\"mk-dt\">17.06.15<span class=\"mk-updt\"></span></span>为 thaumy.ml 设置 datarep 记录，用于访问数据仓库\r\n\r\n## public 维护日志(pub1706版本5)\r\n\r\n<span class=\"mk-dt\">17.06.14<span class=\"mk-mtn\"></span></span>截至此时，博文在 public版本 中累计修订 361 次  \r\n<span class=\"mk-dt\">17.06.14<span class=\"mk-w\"></span></span>修订 欢迎页&主引导 计 6 次  \r\n<span class=\"mk-dt\">17.06.14<span class=\"mk-w\"></span></span>修订页面 NewBlog 计 4 次  \r\n<span class=\"mk-dt\">17.06.14<span class=\"mk-w\"></span></span>发布了文章：应用程序三层架构与MVC(文章摘要) ，修订计 5 次  \r\n<span class=\"mk-dt\">17.06.13<span class=\"mk-mtn\"></span></span>进行了 1 次 xvm 常规备份  \r\n<span class=\"mk-dt\">17.06.09<span class=\"mk-mtn\"></span></span>截至此时，博文在 public版本 中累计修订 343 次  \r\n<span class=\"mk-dt\">17.06.09<span class=\"mk-w\"></span></span>修订页面 NewBlog 计 8 次  \r\n<span class=\"mk-dt\">17.06.09<span class=\"mk-w\"></span></span>修订页面 Developers Lab  计划 计 5 次  \r\n<span class=\"mk-dt\">17.06.09<span class=\"mk-updt\"></span></span>删除了 NewBlog 页面中的 V_MENU 分栏  \r\n<span class=\"mk-dt\">17.06.09<span class=\"mk-updt\"></span></span>删除了 NewBlog 页面中的 LoginLogs 按钮  \r\n<span class=\"mk-dt\">17.06.08<span class=\"mk-w\"></span></span>修订页面 17 is running 计 5 次  \r\n<span class=\"mk-dt\">17.06.08<span class=\"mk-mtn\"></span></span>进行了 1 次 zjw 常规备份  \r\n<span class=\"mk-dt\">17.06.07<span class=\"mk-w\"></span></span>修订页面 NewBlog 计 3 次  \r\n<span class=\"mk-dt\">17.06.07<span class=\"mk-updt\"></span></span>删除了 NewBlog 页面中的 phpAdmin数据库管理系统 和 服务器文件管理系统 按钮  \r\n<span class=\"mk-dt\">17.06.07±7<span class=\"mk-updt\"></span></span>更换域名为thaumy.link  \r\n<span class=\"mk-dt\">17.06.07±7<span class=\"mk-updt\"></span></span>改thaumy.ml域名为闲置域名  \r\n<span class=\"mk-dt\">17.06.07<span class=\"mk-updt\"></span></span>更换虚拟主机服务商为 xvmhost ，博客进入 public 版本','',''),(12419,'e9cd2815ee6545f6ada21b0cba994f76','2020-07-18 21:39:09','BETA8愿景','现在可以公开的情报','### 相距噼里啪啦BETA7的服役完成还有三个月。  \r\n### 噼里啪啦BETA8将于8月中旬发布。\r\n\r\n#### 代号确定：Yui\\Shoko\\Magallan\\Akuma\\Melantha => Magallan\r\n\r\n### 已确定的内容：  \r\n\r\nField3主题  \r\nWL1.16内核  \r\n基于UWP的桌面pala文章编辑器（新增）\r\npala调用库（新增）  \r\npala命令化后台（新增）\r\n\r\n### 计划中的内容：  \r\n\r\npalapedia  \r\n该网站将对噼里啪啦的开发、部署问题进行解答。  \r\npala娘（？？？）  \r\n？？？\r\n### 特典：\r\n\r\npilipala BETA7 官宣\r\n\r\n### 这是一个人人可用的版本。\r\n','噼里啪啦工程组$PB8',''),(12408,'eb6f27060e2745b28e3cbd3192563883','2019-12-14 23:40:22','','','上学的时候读到了刘慈欣的《乡村教师》，虽然是节选，我还是很有感触，忽然想读《三体》了','',''),(12385,'ebd0e6838795420faf65caffa0fdb643','2021-08-10 13:56:35','赞助&支持','积土成山，风雨兴焉','<style>p{text-indent: 2em; /*首行缩进*/}</style>\r\n\r\n## 欢迎来到水瓜储蓄赞助页\r\n\r\n水瓜社的发展离不开每一位成员的努力，他们为大水瓜的建设贡献颇多。  \r\n\r\n|   赞助人   | 赞助金额 |     赞助类型     |\r\n| :--------: | :------: | :--------------: |\r\n|    JSS     |   100￥   | 水瓜基金常驻委员 |\r\n|    星魂    |   100￥   | 水瓜基金常驻委员 |\r\n| 让一切归0  |    8￥    |   标准水瓜基金   |\r\n|  gpbzgbr   |   2.5￥   |     自由赞助     |\r\n|  雅爱方雏  |    1￥    |   标准赞助基金   |\r\n|  提灯寻影  |    1￥    |   标准赞助基金   |\r\n| 匿名赞助人 |    1￥    |   标准赞助基金   |\r\n| 匿名赞助人 |    1￥    |   标准赞助基金   |\r\n\r\n您的支持对我们非常重要！所有赞助行动的参与者均会被列入赞助列表，成为值得尊敬的一员。\r\n\r\n### 立即加入投资行列，为本站的发展注入持久化动力！\r\n\r\n## <span class=\"wd-dt2\">NEW</span> 数字货币赞助\r\n\r\n此地址可用于在以太坊主网公链上向我赞助（ERC20）：0x976F9558f3BF3f415C777532f10b54E0aEd603D0\r\n\r\n## <span class=\"wd-dt1\">SP1</span> 标准赞助\r\n\r\n本站点的运营需要持续资金流注入。您的赞助能有效缓解THAUMY的运营压力，这对本博客的发展意义重大。\r\n\r\n<center>\r\n\r\n### 扫描下方二维码以赞助此项目  <span class=\"wd-dt2\">1 RMB</span>\r\n\r\n<img class=\"bRds bSha\" src=\"https://cdn.thaumy.cn/md-img/赞助&支持/1.png\" width=\"256px\">\r\n\r\n</center>\r\n\r\n</center>\r\n\r\n## <span class=\"wd-dt1\">SP2</span> 有偿支持/自由赞助\r\n\r\n有偿支持覆盖了视频、建模、音频、程序开发、工业设计、原画绘制、平面设计等方面的解决方案支持。  \r\n\r\n此付款码还可用于任意金额的赞助，这些款项将被用于各方面的业务运维。\r\n\r\n<center>\r\n\r\n### 扫描下方二维码以赞助此项目 <span class=\"wd-dt2\">任意金额</span>\r\n\r\n<img class=\"bRds bSha\" src=\"https://cdn.thaumy.cn/md-img/赞助&支持/any.png\" width=\"256px\">\r\n\r\n</center>\r\n\r\n## <span class=\"wd-dt1\">SP3</span> THAUMY的技术服务\r\n\r\n如果你也想要搭建自己的博客或其他轻量级站点，此项目可提供全套的常规维护和设备购买支持，并且所有设备的所有权均归您所有。  \r\n\r\n可选所有主流网站CMS套件或者pilipala进行站点构建。  \r\n另外，此基金也可用于其他适合此价格的技术支持，对于另外价格的服务，可选用“任意金额”二维码。\r\n\r\n<center>\r\n\r\n### 扫描下方二维码以赞助此项目 <span class=\"wd-dt2\">64RMB</span>\r\n\r\n<img class=\"bRds bSha\" src=\"https://cdn.thaumy.cn/md-img/赞助&支持/64.png\" width=\"256px\">\r\n\r\n水瓜社保留所有赞助&有偿支持的解释权利。\r\n</center>\r\n','水瓜储蓄事务局',''),(12354,'ec6ddc42ecd44dacb7633c790cac48f1','2021-07-21 19:52:33','','','近期会对博客进行重大重整更新，这包括BETA9在内的一系列内容。','',''),(12434,'f57b3dd4f02442518ae042badd2f9281','2020-10-26 16:42:20','','','近期正在对pilipala内核进行基准测试，以对新的内核版本进行性能剖析和排除潜在bug','噼里啪啦工程组',''),(12401,'f8f288b125454ae9a169323247ed1c84','2019-11-02 19:09:44','PB6维护日志','Futaba架构','<span style=\"float:right;\" class=\"wd-dt5 cur\" onclick=\"up();showPost(12376)\">点此返回索引根目录</span>\r\n\r\n## PILIPALA 1902BETA6 LTS 第八步进维护日志\r\n\r\n<span class=\"mk-dt\">19.08.21<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.21<span class=\"mk-w\"></span></span>纠正了几个错别字，感谢<span class=\"wd-dt3\">雅爱方雏</span>的支持。  \r\n<span class=\"mk-dt\">19.08.15<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.15<span class=\"mk-w\"></span></span>更新了关于博客页  \r\n<span class=\"mk-dt\">19.08.15<span class=\"mk-dbg\"></span></span>修复了关于博客计时器时钟过快的问题  \r\n<span class=\"mk-dt\">19.08.14<span class=\"mk-dbg\"></span></span>修复了文章列表加载不完全的问题  \r\n<span class=\"mk-dt\">19.08.08<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.08.08<span class=\"mk-w\"></span></span>发布了文章：结束了，初始化下一征程  \r\n<span class=\"mk-dt\">19.08.08<span class=\"mk-mtn\"></span></span>纠正了维护日志中的部分时间错误，这包括：\r\n* PILIPALA 1902BETA6 第二预览版维护日志\r\n* PILIPALA 1902BETA6 第一预览版维护日志\r\n* pilipala 1810BETA6 维护日志\r\n* pilipala 1810BETA5 维护日志\r\n\r\n<span class=\"mk-dt\">19.08.08<span class=\"mk-mtn\"></span></span>维护日志阅读说明已添加\r\n\r\n## PILIPALA 1902BETA6 LTS 第七步进维护日志\r\n\r\n### 从本日志起，细微的样式调整和文章更改将不加记录或登记为微调。这样做利于提升日志的目的性和维护效率。\r\n\r\n<span class=\"mk-dt\">19.07.11<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.07.02<span class=\"mk-dbg\"></span></span>由于未知原因，通过百度搜索进入博客时会出现错误路径调用的问题已消失  \r\n<span class=\"mk-dt\">19.07.11<span class=\"mk-w\"></span></span>发布文章：生病。。。  \r\n<span class=\"mk-dt\">19.07.02<span class=\"mk-bug\"></span></span>通过百度搜索进入博客时会出现错误路径调用  \r\n<span class=\"mk-dt\">19.06.30<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.06.30<span class=\"mk-dbg\"></span></span>修复了返回顶部按钮样式错误的问题  \r\n<span class=\"mk-dt\">19.06.30<span class=\"mk-w\"></span></span>发布了文章：氛愿景  \r\n<span class=\"mk-dt\">19.06.29<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.06.29<span class=\"mk-w\"></span></span>发布了关于博客页面  \r\n<span class=\"mk-dt\">19.06.29<span class=\"mk-w\"></span></span>完善了部分文章  \r\n<span class=\"mk-dt\">19.06.29<span class=\"mk-ui\"></span></span>修改了卡片样式  \r\n<span class=\"mk-dt\">19.06.23<span class=\"mk-updt\"></span></span>上下文章浏览按钮现可用  \r\n<span class=\"mk-dt\">19.06.23<span class=\"mk-dbg\"></span></span>修复了SL内核的一个查询语句bug  \r\n<span class=\"mk-dt\">19.06.22<span class=\"mk-ui\"></span></span>样式微调  \r\n\r\n## PILIPALA 1902BETA6 LTS 第六步进维护日志\r\n\r\n<span class=\"mk-dt\">19.06.16<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.06.16<span class=\"mk-w\"></span></span>发布了文章：我  \r\n<span class=\"mk-dt\">19.06.16<span class=\"mk-ui\"></span></span>CNZZ站长统计现已隐藏  \r\n<span class=\"mk-dt\">19.06.16<span class=\"mk-ui\"></span></span>导航栏卡片样式修改  \r\n<span class=\"mk-dt\">19.06.15<span class=\"mk-bug\"></span></span>在手机浏览时刷新主页会导致背景图片丢失  \r\n<span class=\"mk-dt\">19.06.15<span class=\"mk-ui\"></span></span>对部分颜色微调，并进行了样式表规范  \r\n<span class=\"mk-dt\">19.06.15<span class=\"mk-ui\"></span></span>导航栏签名样式修改，与头像所在盒联色  \r\n<span class=\"mk-dt\">19.06.15<span class=\"mk-ui\"></span></span>导航栏字距调整，修改版权信息  \r\n<span class=\"mk-dt\">19.06.08<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.06.07<span class=\"mk-ui\"></span></span>修改了部分样式  \r\n<span class=\"mk-dt\">19.06.07<span class=\"mk-mtn\"></span></span>SL1.15内核进入开发流程  \r\n<span class=\"mk-dt\">19.06.02<span class=\"mk-ui\"></span></span>修改了移动端头像大小  \r\n<span class=\"mk-dt\">19.05.26<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.05.26<span class=\"mk-ui\"></span></span>mrks与wrds标签样式更改  \r\n<span class=\"mk-dt\">19.05.26<span class=\"mk-ui\"></span></span>优化了背景图片的加载速度  \r\n<span class=\"mk-dt\">19.05.26<span class=\"mk-w\"></span></span>发布文章：PILIPALA BETA7愿景  \r\n<span class=\"mk-dt\">19.05.25<span class=\"mk-w\"></span></span>发布文章：赞助&支持  \r\n<span class=\"mk-dt\">19.05.25<span class=\"mk-w\"></span></span>部分文章和图片作了少许改动  \r\n<span class=\"mk-dt\">19.05.25<span class=\"mk-ui\"></span></span>优化了友链样式  \r\n<span class=\"mk-dt\">19.05.18<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.05.18<span class=\"mk-ui\"></span></span>新增wrd.css，它将和marks.css（已更名为mrks.css）一起用标记增加文章的可读性  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-w\"></span></span>为“句摘”页补充了来自于《瓦尔登湖》一书的摘录  \r\n<span class=\"mk-dt\">19.05.18<span class=\"mk-dbg\"></span></span>由主题代码错误导致的“手机模式下文章列表标签栏的Time标签显示错位到右侧”的BUG现已修复  \r\n\r\n## PILIPALA 1902BETA6 LTS 第五步进维护日志\r\n\r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-ui\"></span></span>marks样式已使用github作CDN优化  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-w\"></span></span>删除了部分文章  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-ui\"></span></span>文章条带已弃用  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-w\"></span></span>发布文章：友情链接  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-w\"></span></span>发布文章：欢迎页&主引导  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-bug\"></span></span>手机模式第一次加载背景图片过于缓慢（超过30s），此问题有待于使用CDN解决  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-ui\"></span></span>主题颜色微调  \r\n<span class=\"mk-dt\">19.05.11<span class=\"mk-bug\"></span></span>手机模式下文章列表标签栏的Time标签显示错位到右侧  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-bug\"></span></span>颜色条带（xxxStrip）出现悬空，由于利用率低下，该功能在下一版本中会被“NEW”、“HOT”等图标取代  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-ui\"></span></span>主题样式微调，新增图片阴影样式以增加观感  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-updt\"></span></span>SL内核现已改为生产模式以进一步提升运行速度  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-updt\"></span></span>图片外链加速现已由贴图库改用又拍云  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-ui\"></span></span>field主题圆角改为8px（原10px）  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-w\"></span></span>部分文章内容小改  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-dbg\"></span></span>Time/Date标签重复显示问题修复  \r\n<span class=\"mk-dt\">19.04.22<span class=\"mk-bug\"></span></span>部分外链图片失效  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.05.01<span class=\"mk-bug\"></span></span>Time/Date标签出现重复显示（该问题由主题函数暂未开发导致）  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-w\"></span></span>修改了部分文章内容  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-dbg\"></span></span>使用img标签解决了部分文章图片过大的超出问题  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-mtn\"></span></span>对内核和主题的部分文件做了命名优化  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-dbg\"></span></span>使用contain方式解决了手机端背景显示不清晰的问题，但效果仍不理想  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-ui\"></span></span> 菜单下拉按钮样式更改，使其更利于阅读  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-ui\"></span></span>调整了文字大小以在保证阅读的情况下显示更多内容  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-ui\"></span></span>修改了部分图标样式  \r\n<span class=\"mk-dt\">19.04.21<span class=\"mk-ui\"></span></span>氛元素主题（ElementFen theme）更名为氛主题（Field theme），受到IDE启发，现已采用暗色调配色，提供了更强的可读性，有利于视力保护和缓解审美疲劳  \r\n<span class=\"mk-dt\">19.04.20<span class=\"mk-ui\"></span></span>LabelBox图标修改，新增Time标签，用来表示文章发布的详细时间，该标签解决了手机端时间溢出问题  \r\n<span class=\"mk-dt\">19.04.20<span class=\"mk-updt\"></span></span>博客在本周内被百度收录\r\n\r\n## PILIPALA 1902BETA6 LTS 第四步进维护日志\r\n\r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-bug\"></span></span>文章图片过大会超出显示范围，丧失自动调整功能，这与最近的一次样式修改有关  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-updt\"></span></span>CNZZ站长统计现可用  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-w\"></span></span>发布了文章：关于pilipala  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-updt\"></span></span>维护日志现已使用更简洁的时期表达  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-dbg\"></span></span>修正了维护日志的几处日期错误  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-bug\"></span></span>博客背景图无法兼容移动端，表现为不能覆盖全屏  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-updt\"></span></span>现已使用图床优化图片加载速度  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-bug\"></span></span>MarkDown的引用标签无法套用，会显示为\">\"符号  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-w\"></span></span>删除了部分文章  \r\n<span class=\"mk-dt\">19.04.14<span class=\"mk-updt\"></span></span>优化了文章格式  \r\n<span class=\"mk-dt\">19.04.13<span class=\"mk-w\"></span></span>发布文章：Thaumy人设  \r\n<span class=\"mk-dt\">19.04.13<span class=\"mk-w\"></span></span>发布文章：水瓜社成立  \r\n<span class=\"mk-dt\">19.04.13<span class=\"mk-w\"></span></span>修改了部分文章标题、内容  \r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-w\"></span></span>发布了文章：Thaumy语录  \r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-updt\"></span></span>css结构优化  \r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-updt\"></span></span>现已采用思源黑体和Ubuntu字体作为显示字体，基于GoogleFonts外链  \r\n<span class=\"mk-dt\">19.04.05<span class=\"mk-updt\"></span></span>因为手机端不支持动态渲染毛玻璃，毛玻璃样式和透明样式现已更换为不透明扁平色  \r\n\r\n## PILIPALA 1902BETA6 LTS 第三步进维护日志\r\n\r\n<span class=\"mk-dt\">19.03.31<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.03.31<span class=\"mk-updt\"></span></span>站点背景样式微调  \r\n<span class=\"mk-dt\">19.03.31<span class=\"mk-updt\"></span></span>取消了菜单栏的毛玻璃样式，并进行了样式微调  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-bug\"></span></span>首页的调用机制和AJAX不利于代码阅读和向后兼容，这个问题已列入BETA7开发任务  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-updt\"></span></span>现已通过js函数返回顶部而非使用js事件  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-updt\"></span></span>维护日志标签样式更新  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-updt\"></span></span>Box阴影微调以提升层次感  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-updt\"></span></span>毛玻璃渐变层微调以提升视觉体验  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-updt\"></span></span>css结构优化  \r\n<span class=\"mk-dt\">19.03.30<span class=\"mk-updt\"></span></span>手机版菜单调出按钮ShowNaviBtn现已完备，并使用了旋转样式以提升体验  \r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-dbg\"></span></span>ShowNaviCardBoxBtn向后兼容问题已解决，并给予了命名优化  \r\n\r\n## PILIPALA 1902BETA6 LTS 第二步进维护日志\r\n\r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-updt\"></span></span>使用了清晰度更高的个人头像以解决手机端头像模糊的问题  \r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-updt\"></span></span>文章底部的评论和点赞按钮样式优化，现已加入响应式适配  \r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-updt\"></span></span>返回顶部按钮现已支持淡入和出加载，返回顶部机制更新完成  \r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-dbg\"></span></span>ShowNaviCardBoxBtn代码优化完成，采用全新滑出样式  \r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-bug\"></span></span>ShowNaviCardBoxBtn不利于代码维护，目前正在想办法解决这个问题  \r\n<span class=\"mk-dt\">19.03.24<span class=\"mk-updt\"></span></span>为手机版提供了一个下拉按纽（ShowNaviCardBoxBtn）以单独显示文章菜单导航，有效利用了空间  \r\n<span class=\"mk-dt\">19.03.23<span class=\"mk-updt\"></span></span>规范了部分css类名称，同时对导航、文章列表和文章详情进行了样式更改  \r\n<span class=\"mk-dt\">19.03.23<span class=\"mk-updt\"></span></span>现已支持手机和电脑的响应式背景，这在不同的设备上能给予了不同的背景观感，也有利于针对手机电脑适配背景  \r\n<span class=\"mk-dt\">19.03.23<span class=\"mk-updt\"></span></span>将部分Box毛玻璃化以增加可读性，并与半透明背景和描边搭配以丰富视觉效果  \r\n<span class=\"mk-dt\">19.03.23<span class=\"mk-updt\"></span></span>毛玻璃模糊度与背景色优化，增强了可读性  \r\n<span class=\"mk-dt\">19.03.16<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.03.16<span class=\"mk-updt\"></span></span>文章卡片更换为毛玻璃样式  \r\n<span class=\"mk-dt\">19.03.16<span class=\"mk-bug\"></span></span>由于和毛玻璃样式冲突，桌面端的背景随鼠标移动特效失效  \r\n<span class=\"mk-dt\">19.03.16<span class=\"mk-updt\"></span></span>更改一些移动端的显示间距，使其更利于展示  \r\n<span class=\"mk-dt\">19.03.16<span class=\"mk-updt\"></span></span>调整了部分背景和圆角样式  \r\n\r\n## PILIPALA 1902BETA6 LTS 第一步进维护日志\r\n\r\n<span class=\"mk-dt\">19.03.10<span class=\"mk-mtn\"></span></span>维护日志已上载  \r\n<span class=\"mk-dt\">19.03.10<span class=\"mk-updt\"></span></span>增加了点击“THAUMY的博客”文字可以返回首页的功能  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-dbg\"></span></span>修复了维护日志的一些标记错误  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-updt\"></span></span>氛元素主题样式修改，使得手机和平板的浏览布局更佳，并调整了灰白色的深度以增强视觉效果  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-updt\"></span></span>优化了版权文本的行距  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-w\"></span></span>上传了啪啦B6宣传图  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-w\"></span></span>发布文章 噼里啪啦第六开发版现可用  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-w\"></span></span>重选了菜单和文列的展示文章  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-dbg\"></span></span>文章列表倒序加载已修复，这与stepTextList()方法的第二重载的错误有关  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-updt\"></span></span>重置了数据库的一些默认值  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-dbg\"></span></span>修复了StudioLibrary1.14内核的一个错误，这个错误使得stepTextList()方法的第二重载无法筛选文章类型以输出文章  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-bug\"></span></span>文章列表不能以ID为顺序倒序加载  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-bug\"></span></span>由文章详情返回首页后会丢失已加载的文章列表  \r\n<span class=\"mk-dt\">19.03.09<span class=\"mk-updt\"></span></span>博文已支持MarkDown语言，往后的博文更新将全部以MarkDown编写  \r\n<span class=\"mk-dt\">19.03.03<span class=\"mk-w\"></span></span>维护日志校准完成  \r\n<span class=\"mk-dt\">19.03.02<span class=\"mk-updt\"></span></span>氛元素主题维护日志提供标记块支持  \r\n<span class=\"mk-dt\">19.03.02<span class=\"mk-updt\"></span></span>氛元素主题超链接标记块颜色调整为蓝色，与评论按钮一致  \r\n<span class=\"mk-dt\">19.02.17<span class=\"mk-updt\"></span></span>氛元素主题部分样式微调  \r\n<span class=\"mk-dt\">19.02.17<span class=\"mk-mtn\"></span></span>氛元素主题开始使用GUID进行版本控制  \r\n<span class=\"mk-dt\">19.02.17<span class=\"mk-mtn\"></span></span>PILIPALA开始使用GUID进行版本控制\r\n\r\n## PILIPALA 1902BETA6 第三预览版维护日志\r\n\r\n### <span class=\"mk-dt\">19.02.14<span class=\"mk-updt\"></span></span>PILIPALA第六开发版（PILIPALA Beta6 LTS）\r\n\r\n* 应用了第三代对象式架构，将整个网站系统的耦合度显著降低，极大地避免了各部分的彼此牵连，并降低了逻辑复杂度\r\n* 提供了主题编写支持，用户可以根据需要自行编写主题、更改网站样式\r\n* 采用主页映射，将站点首页映射到启动页，利于简化链接复杂度\r\n* 废除webio（网页IO桥），全局数据处理部署于webservice，简化了数据操作逻辑\r\n* 去除了服务端ajax支持，因为它会大幅提升现有架构复杂度\r\n* 该版本使用WebApplication代替WebSite建筑，因为前者提供了更佳的MSBuild支持\r\n\r\n### <span class=\"mk-dt\">19.02.14<span class=\"mk-updt\"></span></span>氛元素主题190213（fen）\r\n\r\n* 提供了基于JQuery的Ajax支持，减轻了服务端业务压力，无刷新加载提升了用户体验\r\n* 响应式网页设计使得氛元素主题能兼容任何屏幕规格的浏览设备，移动端最佳的浏览设备为 iPad Pro，桌面端最佳分辨率为1080p\r\n* 为第三代对象式架构提供了UI及命名支持，优化了css分类\r\n* 数据层操作全部移交服务端，提升了安全系数\r\n* 删除了ReadOnly条带，因为该样式不利于数据层整合\r\n* 半透明的UI设计，与背景图搭配提升了浏览体验\r\n* 新增功能：点击头像可返回首页\r\n  \r\n<span class=\"mk-dt\">19.02.14<span class=\"mk-dbg\"></span></span>点赞按钮现可用  \r\n<span class=\"mk-dt\">19.02.14<span class=\"mk-dbg\"></span></span>浏览计数现可用  \r\n<span class=\"mk-dt\">19.02.14<span class=\"mk-dbg\"></span></span>推进加载按钮现可用（该按钮可有效减轻服务端数据库遍历压力）\r\n\r\n### <span class=\"mk-dt\">19.02.14<span class=\"mk-updt\"></span></span>StudioLibrary1.14LTS的全面支持\r\n\r\n* 噼里啪啦命名空间全部重构，应用了第三代对象式架构以全面兼容palaDB，使其完全脱离业务实现架构束缚，\r\n为开发及向后兼容与维护提供便利\r\n* 采用大量接口约束噼里啪啦方法与结构，明确了各个方法的分工和彼此联系\r\n\r\n### <span class=\"mk-dt\">19.02.14<span class=\"mk-updt\"></span></span>palaDB全部重构\r\n\r\n* 文本数据采用三分库设计（灵感来源于AKG K3003），达到了逻辑简明与业务高效的完美契合\r\n* 删除原有palaRoot（根级数据表）和palaUser（用户数据表），两者精简后兼为一表，提升了数据整合度\r\n* 视图部分全部重构，对StudioLibrary对象式架构提供基层支持\r\n* 数据库函数大量精简，采用父子级和归类查询思路，简洁明了的函数设计很好地提升了开发效率\r\n\r\n## PILIPALA 1902BETA6 第二预览版维护日志\r\n\r\n<blockquote>注意，此日志在时间戳上存在统计遗漏，现有的时间记录是结合多方面数据分析得出的，可能与实际不符。</blockquote>\r\n\r\n<span class=\"mk-dt\">19.02‎.‎07‎<span class=\"mk-mtn\"></span></span>PILIPALA 第六开发版第二预览版已上线：www.thaumy.cn  \r\n<span class=\"mk-dt\">19.02‎.‎07‎<span class=\"mk-updt\"></span></span>增添了对手机浏览器的支持，手机px宽为1024以上网页会自动切换到pc模式  \r\n<span class=\"mk-dt\">19.02‎.‎07‎<span class=\"mk-bug\"></span></span>点赞浏览计数评论推进加载功能因ajax解决方案不理想暂不可用  \r\n<span class=\"mk-dt\">19.02.‎07<span class=\"mk-dbg\"></span></span>修复了配置文件冗余标记导致的运行环境问题\r\n\r\n## PILIPALA 1902BETA6 第一预览版维护日志\r\n\r\n<blockquote>注意，此日志在时间戳上存在统计遗漏，现有的时间记录是结合多方面数据分析得出的，可能与实际不符。</blockquote>\r\n\r\n<span class=\"mk-dt\">19.02‎.‎04‎<span class=\"mk-updt\"></span></span>上传了氛元素UI作为站点  \r\n<span class=\"mk-dt\">19.02‎.‎04‎<span class=\"mk-bug\"></span></span>因为运行环境问题，该版本无法部署于站点服务器\r\n\r\n## pilipala 1810BETA6 维护日志\r\n\r\n<blockquote>注意，此日志在时间戳上存在统计遗漏，现有的时间记录是结合多方面数据分析得出的，可能与实际不符。</blockquote>\r\n\r\n<span class=\"mk-dt\">18.12‎.‎09<span class=\"mk-mtn\"></span></span>因为新的实现思路，该项目开发终止，没有入网  \r\n<span class=\"mk-dt\">18.10.‎27‎<span class=\"mk-mtn\"></span></span>噼里啪啦项目正式纳入码肆计划（masiproj）','',''),(12350,'fb5f2175a3e7496ea5d66e6c839c0d46','2017-07-23 14:23:10','StdLib1.06#public更新日志','','<img src=\"<{cdn_root}>/old_post/StdLib1.06宣传画(压缩).jpg\" width=\"100%\"/>\r\n\r\n<span style=\"color: #ff9900;\">StdLib1.06#public</span>\r\n\r\n&emsp;&emsp;经过一周的研究和一周的开发，我对高级算法的理解能力并没有取得多少长进，所以本次S1.06p的更新使用的是我自己研究的算法，我将它成为动下标错位判等算法，其实现原理很简单：\r\n\r\n<pre>C#<code>\r\nfor (int path = 0; path &lt; a.Length; path++)\r\n{\r\n    for (int i = 0; i &lt; a.Length; i++)\r\n    {\r\n        if (i + 1 &lt; a.Length)\r\n        {\r\n            int tmp = 0;\r\n            if (a[i] &gt; a[i + 1])\r\n            {\r\n                tmp = a[i];\r\n                a[i] = a[i + 1];\r\n                a[i + 1] = tmp;\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<span style=\"color: #ff6600;\">这里是调用：</span>\r\n\r\nLSS算法测试\r\n\r\n<pre>C#<code>\r\nint[] a = { 1, 65, 6, 723, 847, 5874, 884, 041, 6, 76, 1, 847, 3, 79, 715, 09, 46, 235, 886, 45, 87, 122, 98, 15, 01, 4 };\r\n\r\nforeach(int p in Class_LSS.Main_LSS(a))\r\n{\r\n    Console.WriteLine(p);\r\n}\r\n</code></pre>\r\n\r\n&nbsp;\r\n接着是ANSW2Dcode的更新，ANSW是我在2016年暑假期间写的图像识别模块，不够稳定的它不乏创新性。经过我一个周末的修改，ANSW的实体化程序更正完成，现已集成到1.06中，识别具有特定组织方式的BMP图像，进行解码和编码。其调用规则如下：\r\n\r\nANSW测试\r\n\r\n<pre>C#<code>\r\nClass_ANSW aw = new Class_ANSW();\r\n\r\n//region ANSW解码测试\r\nConsole.WriteLine(aw.DeANSW(@\"L:\\C#项目开发\\StdLib1.06\\answ\"));\r\n\r\n//ANSW转码测试\r\nBitmap bp = aw.ToANSW(\"4869212069206c6f76652074686520776f726c6421\", @\"L:\\C#项目开发\\StdLib1.06\\source\");\r\nImage i = bp;\r\ni.Save(@\"L:\\C#项目开发\\StdLib1.06\\answ.bmp\");\r\n\r\n//注意：\r\n//在ANSW解码中，输入流可以为有.bmp后缀的文件名或无后缀的文件名\r\n//在ANSW转码中，输入与解码规则相同，输出分两种情况如下：\r\n//1.流错误输出所指定的流必须带.bmp后缀\r\n//2.正常输出所指定的流可以为有.bmp后缀文件名或无后缀文件名\r\n</code></pre>\r\n\r\n另外还增加了一个很实用的结构体用于初始化XmlCreater的各种静态方法，其结构如下：\r\n\r\n<pre>C#<code>\r\npublic struct XmlInf\r\n{\r\n    //结构私有属性\r\n\r\n    private string Path;\r\n    private string InStream;\r\n    private string FileName;\r\n    private string XmlName;\r\n    private string RootName;\r\n    private string NodeName;\r\n    private string AttName;\r\n    private string AttValue;\r\n    private string InnerText;\r\n    private string Type;\r\n\r\n    //属性访问器\r\n\r\n    //节点地址，如父节点、实节点、子节点的地址，用于XmlCreater类中除reStream、CreateXml方法外的所有方法\r\n    public string path\r\n    {\r\n        get { return Path; }\r\n        set { Path = value; }\r\n    }\r\n    \r\n    //被读取的Xml文档文件流，在初始化时使用，用于XmlCreater类的reStream方法\r\n    public string inStream\r\n    {\r\n        get { return InStream; }\r\n        set { InStream = value; }\r\n    }\r\n    \r\n    //被创建的Xml文档的文件地址，用于XmlCreater类的CreateXml方法\r\n    public string fileName\r\n    {\r\n        get { return FileName; }\r\n        set { FileName = value; }\r\n    }\r\n    \r\n    //被创建的Xml文档的文件名，用于XmlCreater类的CreateXml方法\r\n    \r\n    public string xmlName\r\n    {\r\n        get { return XmlName; }\r\n        set { XmlName = value; }\r\n    }\r\n    \r\n    //被创建的Xml文档的根元素名，用于XmlCreater类的CreateXml方法\r\n    public string rootName\r\n    {\r\n        get { return RootName; }\r\n        set { RootName = value; }\r\n    }\r\n    \r\n    //节点名，可表示子节点、父节点、新建空\\实节点名，用于XmlCreater类的AddRealNode、AddEmptyNode、RemoveNode方法\r\n    public string nodeName\r\n    {\r\n        get { return NodeName; }\r\n        set { NodeName = value; }\r\n    }\r\n    \r\n    //节点的属性名，用于XmlCreater类的AddRealNode、ReadAtt方法\r\n    public string attName\r\n    {\r\n        get { return AttName; }\r\n        set { AttName = value; }\r\n    }\r\n    \r\n    //节点的属性值，用于XmlCreater类的AddRealNode方法\r\n    public string attValue\r\n    {\r\n        get { return AttValue; }\r\n        set { AttValue = value; }\r\n    }\r\n    \r\n    //节点的子文本，用于XmlCreater类的AddRealNode方法\r\n    public string innerText\r\n    {\r\n        get { return InnerText; }\r\n        set { InnerText = value; }\r\n    }\r\n    \r\n    //读取类型，可选值有\"_name\"、\"_value\"，用于XmlCreater类的ReadNode方法\r\n    public string type\r\n    {\r\n        get { return Type; }\r\n        set { Type = value; }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n&emsp;&emsp;这样，在使用XmlCreater类的各种方法时，都可以传递该结构体作为第二重载执行，极大的提升了代码的可读性和维护性，同时也降低了程序的耦合度。  \r\n\r\n&emsp;&emsp;注意：我们把所有命名空间装入了一个名为StdLib1_16的命名空间，这样提升了版本间的辨识度。所以在使用1.06时除了引用该dll以外，应先引用主\"StdLib1_16\"命名空间，再引用子空间。如下：\r\n\r\n<pre>C#<code>\r\nusing StdLib1_16;\r\nusing StdLib1_16.StdEct;\r\nusing StdLib1_16.StdDal;\r\n</code></pre>\r\n\r\n&emsp;&emsp;我在StdLib的编写过程中遵循的是两个发行版一兼容的模式，例如从1.03开始，1.04与1.05相兼容，1.06与1.07相兼容。这样有利于每个版本的大更新与小更新，及偶数版本更新内容，奇数版本增加优化。\r\n\r\n> 文章的封插画是我的旧方正电脑的主板，为什么使用它作为插画是因为在清明节的时候我本应该着手1.06版本的开发，可是遭遇了数据丢失，而该主板帮我拯救了数据并恢复了系统。','',''),(12439,'ffa5da42ae6e42b3b7af49581d621a63','2020-12-15 15:04:36','如何在Ubuntu2004环境下配置vsftpd','','# 什么是vsFTPd？\r\n\r\n> 以下写为vsftpd\r\n\r\n**vsftpd是一款可运行在linux环境下的FTP服务器系统，全称为\"very secure FTP daemon\"，意为“非常安全的FTP守护神”（微软翻译的别问我为什么......）。**\r\n\r\n## 背景\r\n\r\n&emsp;&emsp;在将pilipala迁移到Ubuntu2004环境时，为方便部署和管理，我打算使用vsftpd作为FTP服务器，为此也踩了无数的坑（Ubuntu2004环境下的教程几乎没人写过），终于摸索出了一套比较可行的部署方法。  \r\n&emsp;&emsp;在迁移过程中，为货比三家，我先后试用或购买了阿里云、腾讯云、UCloud的服务器产品，发现了不同服务商之间的部署会有细微差别，这里不作一一概述。本教程将使用一套较为通用的工作流来教你如何完成这项工作。  \r\n&emsp;&emsp;**在编写本文档时，Thaumy正在进行第四次vsftpd部署，所以本教程的所有内容均为Thaumy的实际工作流。**\r\n\r\n## 准备工作\r\n\r\n&emsp;&emsp;配有Ubuntu2004操作系统的云服务器、可用的网络连接与十足的耐心。\r\n\r\n---\r\n\r\n## 工作流\r\n\r\n**登入服务器，进入CLI（命令行界面）。**\r\n\r\n**为保证apt列表处于最新状态，我们首先更新一下apt：**\r\n\r\n&emsp;&emsp;`sudo apt-get update`  \r\n&emsp;&emsp;`sudo apt-get upgrade`\r\n\r\n**下一步，安装vsftpd：**\r\n\r\n&emsp;&emsp;`sudo apt-get install vsftpd`\r\n\r\n**安装完成后，我们需要为Ubuntu创建一个新的用户，专门用来管理FTP：**\r\n\r\n&emsp;&emsp;`sudo useradd ftp_user`\r\n\r\n**我们刚刚创建了一个名为`ftp_user`的用户，现在为其设置密码：**\r\n\r\n&emsp;&emsp;`sudo passwd ftp_user`  \r\n系统将要求你输入两次密码，若多次输入不一致，则会停止密码设置流程。\r\n\r\n<div style=\"text-align:center\">\r\n<img style=\"width:100%;max-width:400px\" src=\"https://cdn.thaumy.cn/md-img/如何在Ubuntu2004环境下配置vsftpd/set_pwd.png\">\r\n</div>\r\n\r\n如果看到以上画面，那么密码就设置成功了。\r\n\r\n**下面，我们设置用户`ftp_user`不得登入操作系统，以防止被黑客盗用而操作除FTP以外的内容：**\r\n\r\n&emsp;&emsp;`sudo usermod -s /sbin/nologin ftp_user`\r\n\r\n**接下来，我们需要指定一个物理位置作为FTP服务器根目录。在这之前，我们需要创建它：**\r\n\r\n&emsp;&emsp;`sudo mkdir -p /home/ftp`\r\n\r\n**为方便管理，我们后续会将根目录设置为只读。因此，还需要在`/home/ftp`下另建一个文件夹，用于存储FTP文件：**\r\n\r\n&emsp;&emsp;`sudo mkdir -p /home/ftp/public`  \r\n我们新建了一个文件夹`public`。\r\n\r\n**现在分别赋予这两个文件夹刚刚所述的相应权限：**\r\n\r\n<pre>Command<code>sudo chmod a-w /home/ftp\r\nsudo chmod 777 -R /home/ftp/public\r\n</code></pre>\r\n\r\n**最后，设置用户`ftp_user`的登入目录为`/home/ftp`：**\r\n\r\n&emsp;&emsp;`sudo usermod -d /home/ftp ftp_user`\r\n\r\n---\r\n\r\n&emsp;&emsp;以上，我们安装了vsftpd并创建了一个用户用于管理FTP服务器的相应目录。接下来，我们需要设置vsftpd的配置文件，详细规定我们的FTP服务器需要按照哪些配置进行工作。\r\n\r\n---\r\n\r\n**编辑配置文件：**\r\n\r\n`sudo vi /etc/vsftpd.conf`\r\n\r\n> 在这里，我们使用vi作为文本编辑工具。对于如何使用vi/vim编辑文档，网上有很多非常不错的资源可供参考，这里将不作赘述（其实我也不怎么会）。\r\n\r\n&emsp;&emsp;由于我们添加的配置和原有的配置有所冲突，所以我们需要先将原有的冲突配置注释掉。\r\n这样做既保存了原有的默认配置，我们添加的配置也会生效。  \r\n&emsp;&emsp;为了醒目地标注冲突项，我们使8个井号(########)来将其注释掉，如下图橙色箭头标注所示：\r\n\r\n<div style=\"text-align:center\">\r\n<img style=\"width:100%;max-width:600px;\" src=\"https://cdn.thaumy.cn/md-img/如何在Ubuntu2004环境下配置vsftpd/config_1.png\"></div>\r\n\r\n**接下来，我们在配置文件的末尾添加如下配置：**\r\n\r\n<pre>TEXT<code># 启用监听\r\nlisten=YES\r\n\r\n# 不允许监听ipv6\r\nlisten_ipv6=NO\r\n\r\n# 禁用匿名用户\r\nanonymous_enable=NO\r\n\r\n# 可写入\r\nwrite_enable=YES\r\n\r\n# 禁止切换根目录\r\nchroot_local_user=YES\r\n\r\n# 设置ftp根目录位置\r\nlocal_root=/home/ftp</code></pre>\r\n\r\n注意不要将原文档末尾的UTF-8设置项误删。保存退出。\r\n\r\n**由于我们设置用户`ftp_user`不允许登入操作系统，所以还需要更改相应的pam认证：**\r\n\r\n&emsp;&emsp;`sudo vi /etc/pam.d/vsftpd`  \r\n在编辑模式下，将文件末尾的`pam_shells.so`更改为`pam_nologin.so`\r\n\r\n---\r\n\r\n> &emsp;&emsp;按照传统配置的点到为止，vsftpd的配置就结束了，但是Ubuntu2004他是个年轻人，他不讲武德，来，骗，来，偷袭，我这个刚接触Linux的小同志，这好吗？这不好......\r\n\r\n&emsp;&emsp;事情还没完，Ubuntu2004缺少一个/etc/securetty文件。先不说这玩意是用来干甚么的，至少我们少了它，vsftpd是不能用的。如果你试图连接FTP服务器，将在vsftpd服务状态中看到以下错误：\r\n\r\n<img width=\"100%\" src=\"https://cdn.thaumy.cn/md-img/如何在Ubuntu2004环境下配置vsftpd/no_secur.png\">\r\n\r\n&emsp;&emsp;这个坑居然没有一个中文博客提到，我在苦苦搜索中，终于在<a href=\"https://askubuntu.com/questions/1239503/ubuntu-20-04-and-20-10-etc-securetty-no-such-file-or-directory\">Stack Overflow</a>上找到了相应的解决方案。据采纳回答，/etc/securetty文件的内容取自Ubuntu1910，下面我贴出其内容：\r\n\r\n<details>\r\n<summary>展开（这玩意是真他妈的长）</summary>\r\n\r\n<pre>TEXT<code style=\"height:200px\">\r\n# /etc/securetty: list of terminals on which root is allowed to login.\r\n# See securetty(5) and login(1).\r\n\r\nconsole\r\n\r\n# Local X displays (allows empty passwords with pam_unix\'s nullok_secure)\r\n:0\r\n:0.0\r\n:0.1\r\n:1\r\n:1.0\r\n:1.1\r\n:2\r\n:2.0\r\n:2.1\r\n:3\r\n:3.0\r\n:3.1\r\n#...\r\n\r\n\r\n# ==========================================================\r\n#\r\n# TTYs sorted by major number according to Documentation/devices.txt\r\n#\r\n# ==========================================================\r\n\r\n# Virtual consoles\r\ntty1\r\ntty2\r\ntty3\r\ntty4\r\ntty5\r\ntty6\r\ntty7\r\ntty8\r\ntty9\r\ntty10\r\ntty11\r\ntty12\r\ntty13\r\ntty14\r\ntty15\r\ntty16\r\ntty17\r\ntty18\r\ntty19\r\ntty20\r\ntty21\r\ntty22\r\ntty23\r\ntty24\r\ntty25\r\ntty26\r\ntty27\r\ntty28\r\ntty29\r\ntty30\r\ntty31\r\ntty32\r\ntty33\r\ntty34\r\ntty35\r\ntty36\r\ntty37\r\ntty38\r\ntty39\r\ntty40\r\ntty41\r\ntty42\r\ntty43\r\ntty44\r\ntty45\r\ntty46\r\ntty47\r\ntty48\r\ntty49\r\ntty50\r\ntty51\r\ntty52\r\ntty53\r\ntty54\r\ntty55\r\ntty56\r\ntty57\r\ntty58\r\ntty59\r\ntty60\r\ntty61\r\ntty62\r\ntty63\r\n\r\n# UART serial ports\r\nttyS0\r\nttyS1\r\nttyS2\r\nttyS3\r\nttyS4\r\nttyS5\r\n#...ttyS191\r\n\r\n# Serial Mux devices    (Linux/PA-RISC only)\r\nttyB0\r\nttyB1\r\n#...\r\n\r\n# Chase serial card\r\nttyH0\r\nttyH1\r\n#...\r\n\r\n# Cyclades serial cards\r\nttyC0\r\nttyC1\r\n#...ttyC31\r\n\r\n# Digiboard serial cards\r\nttyD0\r\nttyD1\r\n#...\r\n\r\n# Stallion serial cards\r\nttyE0\r\nttyE1\r\n#...ttyE255\r\n\r\n# Specialix serial cards\r\nttyX0\r\nttyX1\r\n#...\r\n\r\n# Comtrol Rocketport serial cards\r\nttyR0\r\nttyR1\r\n#...\r\n\r\n# SDL RISCom serial cards\r\nttyL0\r\nttyL1\r\n#...\r\n\r\n# Hayes ESP serial card\r\nttyP0\r\nttyP1\r\n#...\r\n\r\n# Computone IntelliPort II serial card\r\nttyF0\r\nttyF1\r\n#...ttyF255\r\n\r\n# Specialix IO8+ serial card\r\nttyW0\r\nttyW1\r\n#...\r\n\r\n# Comtrol VS-1000 serial controller\r\nttyV0\r\nttyV1\r\n#...\r\n\r\n# ISI serial card\r\nttyM0\r\nttyM1\r\n#...\r\n\r\n# Technology Concepts serial card\r\nttyT0\r\nttyT1\r\n#...\r\n\r\n# Specialix RIO serial card\r\nttySR0\r\nttySR1\r\n#...ttySR511\r\n\r\n# Chase Research AT/PCI-Fast serial card\r\nttyCH0\r\nttyCH1\r\n#...ttyCH63\r\n\r\n# Moxa Intellio serial card\r\nttyMX0\r\nttyMX1\r\n#...ttyMX127\r\n\r\n# SmartIO serial card\r\nttySI0\r\nttySI1\r\n#...\r\n\r\n# USB dongles\r\nttyUSB0\r\nttyUSB1\r\nttyUSB2\r\n#...\r\n\r\n# LinkUp Systems L72xx UARTs\r\nttyLU0\r\nttyLU1\r\nttyLU2\r\nttyLU3\r\n\r\n# StrongARM builtin serial ports\r\nttySA0\r\nttySA1\r\nttySA2\r\n\r\n# SCI serial port (SuperH) ports and SC26xx serial ports\r\nttySC0\r\nttySC1\r\nttySC2\r\nttySC3\r\nttySC4\r\nttySC5\r\nttySC6\r\nttySC7\r\nttySC8\r\nttySC9\r\n\r\n# ARM \"AMBA\" serial ports\r\nttyAM0\r\nttyAM1\r\nttyAM2\r\nttyAM3\r\nttyAM4\r\nttyAM5\r\nttyAM6\r\nttyAM7\r\nttyAM8\r\nttyAM9\r\nttyAM10\r\nttyAM11\r\nttyAM12\r\nttyAM13\r\nttyAM14\r\nttyAM15\r\n\r\n# Embedded ARM AMBA PL011 ports (e.g. emulated by QEMU)\r\nttyAMA0\r\nttyAMA1\r\nttyAMA2\r\nttyAMA3\r\n\r\n# DataBooster serial ports\r\nttyDB0\r\nttyDB1\r\nttyDB2\r\nttyDB3\r\nttyDB4\r\nttyDB5\r\nttyDB6\r\nttyDB7\r\n\r\n# SGI Altix console ports\r\nttySG0\r\n\r\n# Motorola i.MX ports\r\nttySMX0\r\nttySMX1\r\nttySMX2\r\n\r\n# Marvell MPSC ports\r\nttyMM0\r\nttyMM1\r\n\r\n# PPC CPM (SCC or SMC) ports\r\nttyCPM0\r\nttyCPM1\r\nttyCPM2\r\nttyCPM3\r\nttyCPM4\r\nttyCPM5\r\n\r\n# Altix serial cards\r\nttyIOC0\r\nttyIOC1\r\n#...ttyIOC31\r\n\r\n# NEC VR4100 series SIU\r\nttyVR0\r\n\r\n# NEC VR4100 series SSIU\r\nttyVR1\r\n\r\n# Altix ioc4 serial cards\r\nttyIOC84\r\nttyIOC85\r\n#...ttyIOC115\r\n\r\n# Altix ioc3 serial cards\r\nttySIOC0\r\nttySIOC1\r\n#...ttySIOC31\r\n\r\n# PPC PSC ports\r\nttyPSC0\r\nttyPSC1\r\nttyPSC2\r\nttyPSC3\r\nttyPSC4\r\nttyPSC5\r\n\r\n# ATMEL serial ports\r\nttyAT0\r\nttyAT1\r\n#...ttyAT15\r\n\r\n# Hilscher netX serial port\r\nttyNX0\r\nttyNX1\r\n#...ttyNX15\r\n\r\n# Xilinx uartlite - port\r\nttyUL0\r\nttyUL1\r\nttyUL2\r\nttyUL3\r\n\r\n# Xen virtual console - port 0\r\nxvc0\r\n\r\n# pmac_zilog - port\r\nttyPZ0\r\nttyPZ1\r\nttyPZ2\r\nttyPZ3\r\n\r\n# TX39/49 serial port\r\nttyTX0\r\nttyTX1\r\nttyTX2\r\nttyTX3\r\nttyTX4\r\nttyTX5\r\nttyTX6\r\nttyTX7\r\n\r\n# SC26xx serial ports (see SCI serial ports (SuperH))\r\n\r\n# MAX3100 serial ports\r\nttyMAX0\r\nttyMAX1\r\nttyMAX2\r\nttyMAX3\r\n\r\n# OMAP serial ports\r\nttyO0\r\nttyO1\r\nttyO2\r\nttyO3\r\n\r\n# User space serial ports\r\nttyU0\r\nttyU1\r\n\r\n# A2232 serial card\r\nttyY0\r\nttyY1\r\n\r\n# IBM 3270 terminal Unix tty access\r\n3270/tty1\r\n3270/tty2\r\n#...\r\n\r\n# IBM iSeries/pSeries virtual console\r\nhvc0\r\nhvc1\r\n#...\r\n#IBM pSeries console ports\r\nhvsi0\r\nhvsi1\r\nhvsi2\r\n\r\n# Equinox SST multi-port serial boards\r\nttyEQ0\r\nttyEQ1\r\n#...ttyEQ1027\r\n\r\n# ==========================================================\r\n#\r\n# Not in Documentation/Devices.txt\r\n#\r\n# ==========================================================\r\n\r\n# Embedded Freescale i.MX ports\r\nttymxc0\r\nttymxc1\r\nttymxc2\r\nttymxc3\r\nttymxc4\r\nttymxc5\r\n\r\n# LXC (Linux Containers)\r\nlxc/console\r\nlxc/tty1\r\nlxc/tty2\r\nlxc/tty3\r\nlxc/tty4\r\n\r\n# Serial Console for MIPS Swarm\r\nduart0\r\nduart1\r\n\r\n# s390 and s390x ports in LPAR mode\r\nttysclp0\r\n\r\n# ODROID XU4 serial console\r\nttySAC0\r\nttySAC1\r\nttySAC2\r\nttySAC3</code></pre>\r\n\r\n</details>\r\n\r\n**复制好上述内容，我们来造一个文件：**\r\n\r\n&emsp;&emsp;`sudo vi /etc/securetty`\r\n\r\n**将内容粘进去后保存，我们重启vsftpd：**\r\n\r\n&emsp;&emsp;`sudo service vsftpd restart`\r\n\r\n**查看vsftpd的状态：**\r\n\r\n&emsp;&emsp;`sudo service vsftpd status`\r\n\r\n<div style=\"text-align:center\">\r\n<img style=\"width:100%;max-width:600px\" src=\"https://cdn.thaumy.cn/md-img/如何在Ubuntu2004环境下配置vsftpd/success.png\"></div>\r\n\r\n**如果你看到了上图内容，那么说明vsftpd的配置应该是没有问题的，接下来让我们验收一下：**\r\n\r\n在此我使用工具`FlashFXP`登入我们刚刚部署的FTP服务器，具体配置如下：\r\n\r\n<div style=\"text-align:center\">\r\n<img style=\"width:100%;max-width:400px\" src=\"https://cdn.thaumy.cn/md-img/如何在Ubuntu2004环境下配置vsftpd/flashfxp.png\"></div>\r\n\r\n用户名和密码均为上述设置项，地址填写云服务器的公网IP，FTP模式设置为`主动模式(PORT)`，其他选项均为默认。\r\n\r\n**若成功连接到FTP服务器，你将看到根目录下有一个`public`文件夹，由于我们的权限设置，根目录下的内容为只读，但`public`的内部是读写自由的。**\r\n\r\n~~好了，现在您可以尽情地向您的FTP服务器里塞垃圾文件了233。~~\r\n\r\n<div style=\"text-align:right\">希望本文能对你有所帮助。</div>\r\n<div style=\"text-align:right\">或者，节约几个小时？</div>\r\n','Linux$云服务器',''),(12423,'ffeec113c5324d1087fef37209bfab66','2020-07-24 13:39:11','pilipala架构命名规则','','## 第一阶段\r\n\r\n1.03/1.04/1.05/1.06/1.07  \r\n\r\n## 第二阶段\r\n\r\n1.08  \r\n1.09 SbarchⅡ（源自皇牌空战的一句空耳）  \r\n\r\n&emsp;这些内核版本非常古老，且并非为网页开发设计，没有相应的名称。\r\n\r\n## 第三阶段\r\n\r\n1.10 `FinallySee`（ACG，源自东方）  \r\n1.11 `HeavenlyBlue` - 蔚蓝色（ACG，源自AZ的OP）=>BETA1  \r\n1.12 `ReturnV` - 土卫五（ACG，源自EVA，原为SaturnV，听错了就变成了ReturnV）=>BETA2  \r\n1.13 `LunaFall` - 落月（生活，源自雅爱方雏）=>BETA3  \r\n\r\n&emsp;从1.10开始，代号名称更换非常迅速，往往不到一个月就会发布一个新的版本。这些代号有一个共同的特点：取名自有意义的事物（在备选名称中景色、实物、情感类居多）、来自于突发的灵感并受到环境变化影响。\r\n\r\n## 第四阶段\r\n\r\n1.14 `Futaba` - 芙塔巴（ACG，原型双叶理央）=> BETA6  \r\n1.15 `Kaguya` - 卡古雅（ACG，原型四宫辉夜）=> BETA7  \r\n1.16 `Magallan` - 玛格丽安（ACG，原型麦哲伦） => PBETA8  \r\n\r\n&emsp;&emsp;从1.14开始，由于大幅度优化了前期版本因过度迭代导致的一系列问题，噼里啪啦的可用性得到了很大的提升。同时，开发周期也变长了（至少2个月），也拥有更长的使用时间（至少6个月）。这些名称往往取自各类番中的人物罗马音，并且带有丰富的周边内容。\r\n','','');
/*!40000 ALTER TABLE `pl_stack` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `pl_user`
--

DROP TABLE IF EXISTS `pl_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `pl_user` (
  `Account` bigint NOT NULL,
  `PWD` char(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Name` char(24) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Bio` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `GroupType` char(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Email` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `Avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '',
  `PrivateKey` varchar(4096) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '',
  `TokenTime` datetime DEFAULT NULL,
  PRIMARY KEY (`Name`,`Account`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `pl_user`
--

LOCK TABLES `pl_user` WRITE;
/*!40000 ALTER TABLE `pl_user` DISABLE KEYS */;
INSERT INTO `pl_user` VALUES (1522700134,'15a37a23b406e8435aac360dd462fbae','Pinn','源于镜像','admin','studio_ai@outlook.com','http://thblog-img.test.upcdn.net/ui_img/Mai.jpg','','2020-11-01 20:35:01'),(1951327599,'c81ff1fccffffc6a078b528be03afd5a','Thaumy','一个纯粹的人','user','studio_ai@outlook.com','http://q1.qlogo.cn/g?b=qq&nk=1951327599&s=640','-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA3Lh8pHTaCjZUIqAUMrPoRjyF6oB/IH80PNkXGROUYJ3cXb3s\ndhw+VBvrwi637m1ujZes9cka4cbC1fPRdZDRZPdiMngGQNFy8q/Bp8BfJdEfN1Mg\nmX/cs2cQXxYUQgnNKI775GRn7ZhuuUrPc/9MtbTlNjUJQVkhH/VQnV6pSvJkkwSc\nMCfxG99/a7tdOtd6rvKhXYFivv/+RU/qZYEUKoq+xxTP6omi/5B8R2Eu5B9KYFJD\nwhBuj/yWj/y9FLjGU5HjUpePZgHPE9VabGBBle5L6hTTnPKiAKi242YKBGJe5fz1\neSUMTE/g+09YZ4/1mNkGYkFYcFwslCBu+c+FiQIDAQABAoIBADY9W9vqHz7NNQXB\nQtVm4piH/PywkQ0CVWryijuOVTMc9+9NYdNwg1yV8+ynIGoGGFnRQR6xSdrbxjtf\njESQzvQ52ra+SgMZtV6wFC3OF1OqvToSQnuWMT0hAaPsQBQuZm0mHf51MhjwEZ2V\nJb/CqC4rAvy8MccOSRaaaTIS9hVFYK1VuZo9K1bH9zBNPeLhTozpB7oSlPzHgNda\nU3zWkd975ttaUBlkTk4Sad/awJ7qq1QEfvvKE5aF7Kw8t8cjDIWOLKSF5dwh3jXA\n6L0bPsnrb7UUGoUqXBY8POwaO0oKV9XqhmqofHkBA1Mh4loXRpkw1lKcJgd7UsVP\npPZkabUCgYEA4Fc6Vp88TPZF8kV2S5szyhYtnopDAhof5wnJfl2vv1+dX2Y2ZkQI\n0Z4MJAzi3MZ4ak5WRT4uTlU2GI2SPKp4QajSr/ZCUozlatLpDFH97z0iZF8GebIN\nSjdZTDbs6GqHkUwrTbpSnblBBWqu3w0W7HtTz/TY2R5E4x3oaYvreQcCgYEA+955\n31NcMHmKQpxBsisGjdx52JrG++xZtvRjpQ/H0HXTSEclmi9DYsnke4tgadZjC2QW\nnpSGbv/DLsx1uUa2R2U5VwT+VHPkOgpqNPzVkSn66feQIUbm6Z6sPrd8htYW2+ch\nPVpIiOfitctjzvO6oEqwYIs4k90f+lbBMlWAOO8CgYEApE8+6zK1d6jokglOGxIR\nXHHh97xMV73Kn+0LJwJ3NjNRkA3MyhoKW3zmZ4EIp6q1hybZCN4CDF1cwZ7u/H/e\nlDiSF07GRK/tV9Ah4GQtGIwuJFV06K0ADtt7C9curQtZP5IKJWPSHrMQbGc2rSdp\nIssxF569NEh3K+E72BIi5QECgYBh8GTbnoKepuRIepJhQbHOwAjxXV463/ES331P\n1g8Q1IBP/rp0diRx6afbEptvDFp/N3BEQeT0jKfNLtwoK4L9yDK/z8VF+bqphxs9\nd4NkazqSeB2nkvZ/qZ+404istds1r26ReOXztpfFsU0iUEwlwGVNZVWeycGBivKd\nK/osKQKBgQCntQCkT7I7PNzAPghWZBOypFfppbV0xazrWwprc+18JFd4MTEYHe/X\ng1xAR+rwPTX2VLz0aauvIz32s1oeI73lgElEQQSstvaoW2o6Yz3Jb9QJbQLDH5np\nLCGg08rPRptDapbZg1SAZpELb/ZioljNa+IQXcId1P2/uA68csy28Q==\n-----END RSA PRIVATE KEY-----','2020-12-26 16:48:25');
/*!40000 ALTER TABLE `pl_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary view structure for view `pos>dirty>union`
--

DROP TABLE IF EXISTS `pos>dirty>union`;
/*!50001 DROP VIEW IF EXISTS `pos>dirty>union`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `pos>dirty>union` AS SELECT 
 1 AS `PostID`,
 1 AS `UUID`,
 1 AS `CT`,
 1 AS `Mode`,
 1 AS `Type`,
 1 AS `User`,
 1 AS `UVCount`,
 1 AS `StarCount`,
 1 AS `ArchiveName`,
 1 AS `LCT`,
 1 AS `Title`,
 1 AS `Summary`,
 1 AS `Content`,
 1 AS `Label`,
 1 AS `Cover`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `pos>union`
--

DROP TABLE IF EXISTS `pos>union`;
/*!50001 DROP VIEW IF EXISTS `pos>union`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `pos>union` AS SELECT 
 1 AS `PostID`,
 1 AS `UUID`,
 1 AS `CT`,
 1 AS `Mode`,
 1 AS `Type`,
 1 AS `User`,
 1 AS `UVCount`,
 1 AS `StarCount`,
 1 AS `ArchiveName`,
 1 AS `LCT`,
 1 AS `Title`,
 1 AS `Summary`,
 1 AS `Content`,
 1 AS `Label`,
 1 AS `Cover`*/;
SET character_set_client = @saved_cs_client;

--
-- Dumping events for database 'pilipala'
--

--
-- Dumping routines for database 'pilipala'
--

--
-- Final view structure for view `neg>dirty>union`
--

/*!50001 DROP VIEW IF EXISTS `neg>dirty>union`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `neg>dirty>union` AS select `pl_meta`.`PostID` AS `PostID`,`pl_stack`.`UUID` AS `UUID`,`pl_meta`.`CT` AS `CT`,`pl_meta`.`Mode` AS `Mode`,`pl_meta`.`Type` AS `Type`,`pl_meta`.`User` AS `User`,`pl_meta`.`UVCount` AS `UVCount`,`pl_meta`.`StarCount` AS `StarCount`,`pl_archive`.`Name` AS `ArchiveName`,`pl_stack`.`LCT` AS `LCT`,`pl_stack`.`Title` AS `Title`,`pl_stack`.`Summary` AS `Summary`,`pl_stack`.`Content` AS `Content`,`pl_stack`.`Label` AS `Label`,`pl_stack`.`Cover` AS `Cover` from ((`pl_meta` join `pl_stack` on((`pl_meta`.`PostID` = `pl_stack`.`PostID`))) join `pl_archive` on((`pl_archive`.`ArchiveID` = `pl_meta`.`ArchiveID`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `neg>union`
--

/*!50001 DROP VIEW IF EXISTS `neg>union`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `neg>union` AS select `pl_meta`.`PostID` AS `PostID`,`pl_stack`.`UUID` AS `UUID`,`pl_meta`.`CT` AS `CT`,`pl_meta`.`Mode` AS `Mode`,`pl_meta`.`Type` AS `Type`,`pl_meta`.`User` AS `User`,`pl_meta`.`UVCount` AS `UVCount`,`pl_meta`.`StarCount` AS `StarCount`,`pl_archive`.`Name` AS `ArchiveName`,`pl_stack`.`LCT` AS `LCT`,`pl_stack`.`Title` AS `Title`,`pl_stack`.`Summary` AS `Summary`,`pl_stack`.`Content` AS `Content`,`pl_stack`.`Label` AS `Label`,`pl_stack`.`Cover` AS `Cover` from ((`pl_meta` join `pl_stack` on((`pl_meta`.`PostID` = `pl_stack`.`PostID`))) join `pl_archive` on((convert(`pl_archive`.`ArchiveID` using utf8mb4) = `pl_meta`.`ArchiveID`))) where (`pl_meta`.`Mode` <> 'hidden') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `pos>dirty>union`
--

/*!50001 DROP VIEW IF EXISTS `pos>dirty>union`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `pos>dirty>union` AS select `pl_meta`.`PostID` AS `PostID`,`pl_meta`.`UUID` AS `UUID`,`pl_meta`.`CT` AS `CT`,`pl_meta`.`Mode` AS `Mode`,`pl_meta`.`Type` AS `Type`,`pl_meta`.`User` AS `User`,`pl_meta`.`UVCount` AS `UVCount`,`pl_meta`.`StarCount` AS `StarCount`,`pl_archive`.`Name` AS `ArchiveName`,`pl_stack`.`LCT` AS `LCT`,`pl_stack`.`Title` AS `Title`,`pl_stack`.`Summary` AS `Summary`,`pl_stack`.`Content` AS `Content`,`pl_stack`.`Label` AS `Label`,`pl_stack`.`Cover` AS `Cover` from ((`pl_meta` join `pl_stack` on((convert(`pl_meta`.`UUID` using utf8mb4) = `pl_stack`.`UUID`))) join `pl_archive` on((convert(`pl_archive`.`ArchiveID` using utf8mb4) = `pl_meta`.`ArchiveID`))) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `pos>union`
--

/*!50001 DROP VIEW IF EXISTS `pos>union`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_0900_ai_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `pos>union` AS select `pl_meta`.`PostID` AS `PostID`,`pl_meta`.`UUID` AS `UUID`,`pl_meta`.`CT` AS `CT`,`pl_meta`.`Mode` AS `Mode`,`pl_meta`.`Type` AS `Type`,`pl_meta`.`User` AS `User`,`pl_meta`.`UVCount` AS `UVCount`,`pl_meta`.`StarCount` AS `StarCount`,`pl_archive`.`Name` AS `ArchiveName`,`pl_stack`.`LCT` AS `LCT`,`pl_stack`.`Title` AS `Title`,`pl_stack`.`Summary` AS `Summary`,`pl_stack`.`Content` AS `Content`,`pl_stack`.`Label` AS `Label`,`pl_stack`.`Cover` AS `Cover` from ((`pl_meta` join `pl_stack` on((convert(`pl_meta`.`UUID` using utf8mb4) = `pl_stack`.`UUID`))) join `pl_archive` on((convert(`pl_archive`.`ArchiveID` using utf8mb4) = `pl_meta`.`ArchiveID`))) where (`pl_meta`.`Mode` <> 'hidden') */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-08-30 17:10:37
